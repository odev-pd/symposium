!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
AbstractHandler	bootstrap/cache/compiled.php	/^abstract class AbstractHandler implements HandlerInterface$/;"	c
AbstractPaginator	bootstrap/cache/compiled.php	/^abstract class AbstractPaginator implements Htmlable$/;"	c
AbstractProcessingHandler	bootstrap/cache/compiled.php	/^abstract class AbstractProcessingHandler extends AbstractHandler$/;"	c
AcceptHeader	bootstrap/cache/compiled.php	/^class AcceptHeader$/;"	c
AcceptHeaderItem	bootstrap/cache/compiled.php	/^class AcceptHeaderItem$/;"	c
AccountController	app/Http/Controllers/AccountController.php	/^class AccountController extends BaseController$/;"	c
AccountTest	tests/AccountTest.php	/^class AccountTest extends IntegrationTestCase$/;"	c
AddCfpUrlToConferencesTable	database/migrations/2016_06_25_234552_add_cfp_url_to_conferences_table.php	/^class AddCfpUrlToConferencesTable extends Migration$/;"	c
AddFavoritesTable	database/migrations/2014_12_22_203655_add_favorites_table.php	/^class AddFavoritesTable extends Migration$/;"	c
AddJoindinIdToConferencesTable	database/migrations/2014_12_21_165443_add_joindin_id_to_conferences_table.php	/^class AddJoindinIdToConferencesTable extends Migration$/;"	c
AddPublicFieldToBiosTable	database/migrations/2015_11_24_235241_add_public_field_to_bios_table.php	/^class AddPublicFieldToBiosTable extends Migration$/;"	c
AddPublicFieldToTalks	database/migrations/2015_11_22_085323_add_public_field_to_talks.php	/^class AddPublicFieldToTalks extends Migration$/;"	c
AddPublicProfileFieldsToUsersTable	database/migrations/2015_08_27_125402_add_public_profile_fields_to_users_table.php	/^class AddPublicProfileFieldsToUsersTable extends Migration$/;"	c
AddQueuedCookiesToResponse	bootstrap/cache/compiled.php	/^class AddQueuedCookiesToResponse$/;"	c
AddRememberToken	database/migrations/2014_02_20_141801_add_remember_token.php	/^class AddRememberToken extends Migration$/;"	c
AddRolesToUsers	database/migrations/2015_01_05_170059_add_roles_to_users.php	/^class AddRolesToUsers extends Migration$/;"	c
AddTalkRevisionSlides	database/migrations/2015_10_25_125123_add_talk_revision_slides.php	/^class AddTalkRevisionSlides extends Migration$/;"	c
AggregateServiceProvider	bootstrap/cache/compiled.php	/^class AggregateServiceProvider extends ServiceProvider$/;"	c
AliasLoader	bootstrap/cache/compiled.php	/^class AliasLoader$/;"	c
AllowNullConferenceDates	database/migrations/2014_12_21_214307_allow_null_conference_dates.php	/^class AllowNullConferenceDates extends Migration$/;"	c
AllowNullConferenceDatesTakeTwo	database/migrations/2015_01_19_210855_allow_null_conference_dates_take_two.php	/^class AllowNullConferenceDatesTakeTwo extends Migration$/;"	c
ApiTestCase	tests/Api/ApiTestCase.php	/^class ApiTestCase extends TestCase$/;"	c
App	bootstrap/cache/compiled.php	/^class App extends Facade$/;"	c
AppServiceProvider	app/Providers/AppServiceProvider.php	/^class AppServiceProvider extends ServiceProvider$/;"	c
AppServiceProvider	bootstrap/cache/compiled.php	/^class AppServiceProvider extends ServiceProvider$/;"	c
App\\	composer.json	/^            "App\\\\": "app\/"$/;"	f
Application	bootstrap/cache/compiled.php	/^class Application extends Container implements ApplicationContract, HttpKernelInterface$/;"	c
Application	bootstrap/cache/compiled.php	/^interface Application extends Container$/;"	i
Arr	bootstrap/cache/compiled.php	/^class Arr$/;"	c
Arrayable	bootstrap/cache/compiled.php	/^interface Arrayable$/;"	i
AttributeBag	bootstrap/cache/compiled.php	/^class AttributeBag implements AttributeBagInterface, \\IteratorAggregate, \\Countable$/;"	c
AttributeBagInterface	bootstrap/cache/compiled.php	/^interface AttributeBagInterface extends SessionBagInterface$/;"	i
AuthController	app/Http/Controllers/Auth/AuthController.php	/^class AuthController extends Controller$/;"	c
AuthController	app/Http/Controllers/AuthController.php	/^class AuthController extends BaseController$/;"	c
AuthManager	bootstrap/cache/compiled.php	/^class AuthManager implements FactoryContract$/;"	c
AuthServiceProvider	bootstrap/cache/compiled.php	/^class AuthServiceProvider extends ServiceProvider$/;"	c
Authenticate	app/Http/Middleware/Authenticate.php	/^class Authenticate$/;"	c
AuthorsController	app/Http/Controllers/AuthorsController.php	/^class AuthorsController extends BaseController$/;"	c
BaseController	app/Http/Controllers/Api/BaseController.php	/^class BaseController extends ParentBaseController$/;"	c
BaseController	app/Http/Controllers/BaseController.php	/^class BaseController extends Controller$/;"	c
BaseEncrypter	bootstrap/cache/compiled.php	/^abstract class BaseEncrypter$/;"	c
BcryptHasher	bootstrap/cache/compiled.php	/^class BcryptHasher implements HasherContract$/;"	c
Bio	app/ApiResources/Bio.php	/^class Bio implements Arrayable$/;"	c
Bio	app/models/Bio.php	/^class Bio extends UuidBase$/;"	c
BioApiTest	tests/Api/BioApiTest.php	/^class BioApiTest extends ApiTestCase$/;"	c
BiosController	app/Http/Controllers/Api/BiosController.php	/^class BiosController extends BaseController$/;"	c
BiosController	app/Http/Controllers/BiosController.php	/^class BiosController extends BaseController$/;"	c
BiosSeeder	database/seeds/BiosSeeder.php	/^class BiosSeeder extends Seeder$/;"	c
BladeCompiler	bootstrap/cache/compiled.php	/^class BladeCompiler extends Compiler implements CompilerInterface$/;"	c
BootProviders	bootstrap/cache/compiled.php	/^class BootProviders$/;"	c
BusServiceProvider	app/Providers/BusServiceProvider.php	/^class BusServiceProvider extends ServiceProvider$/;"	c
BusServiceProvider	bootstrap/cache/compiled.php	/^class BusServiceProvider extends ServiceProvider$/;"	c
CaptchaServiceProvider	app/Providers/CaptchaServiceProvider.php	/^class CaptchaServiceProvider extends ServiceProvider$/;"	c
CheckForMaintenanceMode	bootstrap/cache/compiled.php	/^class CheckForMaintenanceMode$/;"	c
Collection	bootstrap/cache/compiled.php	/^class Collection implements ArrayAccess, Arrayable, Countable, IteratorAggregate, Jsonable, JsonSerializable$/;"	c
Command	app/Commands/Command.php	/^abstract class Command$/;"	c
CompiledRoute	bootstrap/cache/compiled.php	/^class CompiledRoute implements \\Serializable$/;"	c
Compiler	bootstrap/cache/compiled.php	/^abstract class Compiler$/;"	c
CompilerEngine	bootstrap/cache/compiled.php	/^class CompilerEngine extends PhpEngine$/;"	c
CompilerInterface	bootstrap/cache/compiled.php	/^interface CompilerInterface$/;"	i
Conference	app/ApiResources/Conference.php	/^class Conference implements Arrayable$/;"	c
Conference	app/models/Conference.php	/^class Conference extends UuidBase$/;"	c
ConferenceApiTest	tests/Api/ConferenceApiTest.php	/^class ConferenceApiTest extends ApiTestCase$/;"	c
ConferenceImporter	app/JoindIn/ConferenceImporter.php	/^class ConferenceImporter$/;"	c
ConferenceTest	tests/ConferenceTest.php	/^class ConferenceTest extends IntegrationTestCase$/;"	c
ConferencesController	app/Http/Controllers/Api/ConferencesController.php	/^class ConferencesController extends BaseController$/;"	c
ConferencesController	app/Http/Controllers/ConferencesController.php	/^class ConferencesController extends BaseController$/;"	c
ConferencesSeeder	database/seeds/ConferencesSeeder.php	/^class ConferencesSeeder extends Seeder$/;"	c
ConfigServiceProvider	app/Providers/ConfigServiceProvider.php	/^class ConfigServiceProvider extends ServiceProvider$/;"	c
ConfigServiceProvider	bootstrap/cache/compiled.php	/^class ConfigServiceProvider extends ServiceProvider$/;"	c
ConfigureLogging	bootstrap/cache/compiled.php	/^class ConfigureLogging$/;"	c
ConnectionFactory	bootstrap/cache/compiled.php	/^class ConnectionFactory$/;"	c
ConnectionResolverInterface	bootstrap/cache/compiled.php	/^interface ConnectionResolverInterface$/;"	i
Container	bootstrap/cache/compiled.php	/^class Container implements ArrayAccess, ContainerContract$/;"	c
Container	bootstrap/cache/compiled.php	/^interface Container$/;"	i
ContextualBindingBuilder	bootstrap/cache/compiled.php	/^interface ContextualBindingBuilder$/;"	i
Controller	app/Http/Controllers/Controller.php	/^class Controller extends BaseController$/;"	c
Controller	bootstrap/cache/compiled.php	/^abstract class Controller$/;"	c
ControllerDispatcher	bootstrap/cache/compiled.php	/^class ControllerDispatcher$/;"	c
ControllerInspector	bootstrap/cache/compiled.php	/^class ControllerInspector$/;"	c
Cookie	bootstrap/cache/compiled.php	/^class Cookie$/;"	c
CookieJar	bootstrap/cache/compiled.php	/^class CookieJar implements JarContract$/;"	c
CookieServiceProvider	bootstrap/cache/compiled.php	/^class CookieServiceProvider extends ServiceProvider$/;"	c
CreateBioForm	app/Services/CreateBioForm.php	/^class CreateBioForm$/;"	c
CreateBiosTable	database/migrations/2015_05_08_033314_create_bios_table.php	/^class CreateBiosTable extends Migration$/;"	c
CreateConferenceForm	app/Services/CreateConferenceForm.php	/^class CreateConferenceForm$/;"	c
CreateConferenceFormTest	tests/CreateConferenceFormTest.php	/^class CreateConferenceFormTest extends IntegrationTestCase$/;"	c
CreateConferencesTable	database/migrations/2014_12_20_205957_create_conferences_table.php	/^class CreateConferencesTable extends Migration$/;"	c
CreateOauthAccessTokenScopesTable	database/migrations/2014_04_24_111657_create_oauth_access_token_scopes_table.php	/^class CreateOauthAccessTokenScopesTable extends Migration$/;"	c
CreateOauthAccessTokensTable	database/migrations/2014_04_24_111518_create_oauth_access_tokens_table.php	/^class CreateOauthAccessTokensTable extends Migration$/;"	c
CreateOauthAuthCodeScopesTable	database/migrations/2014_04_24_111403_create_oauth_auth_code_scopes_table.php	/^class CreateOauthAuthCodeScopesTable extends Migration$/;"	c
CreateOauthAuthCodesTable	database/migrations/2014_04_24_111254_create_oauth_auth_codes_table.php	/^class CreateOauthAuthCodesTable extends Migration$/;"	c
CreateOauthClientEndpointsTable	database/migrations/2014_04_24_110557_create_oauth_client_endpoints_table.php	/^class CreateOauthClientEndpointsTable extends Migration$/;"	c
CreateOauthClientGrantsTable	database/migrations/2014_04_24_110817_create_oauth_client_grants_table.php	/^class CreateOauthClientGrantsTable extends Migration$/;"	c
CreateOauthClientScopesTable	database/migrations/2014_04_24_110705_create_oauth_client_scopes_table.php	/^class CreateOauthClientScopesTable extends Migration$/;"	c
CreateOauthClientsTable	database/migrations/2014_04_24_110459_create_oauth_clients_table.php	/^class CreateOauthClientsTable extends Migration$/;"	c
CreateOauthGrantScopesTable	database/migrations/2014_04_24_110403_create_oauth_grant_scopes_table.php	/^class CreateOauthGrantScopesTable extends Migration$/;"	c
CreateOauthGrantsTable	database/migrations/2014_04_24_110304_create_oauth_grants_table.php	/^class CreateOauthGrantsTable extends Migration$/;"	c
CreateOauthRefreshTokensTable	database/migrations/2014_04_24_111810_create_oauth_refresh_tokens_table.php	/^class CreateOauthRefreshTokensTable extends Migration$/;"	c
CreateOauthScopesTable	database/migrations/2014_04_24_110151_create_oauth_scopes_table.php	/^class CreateOauthScopesTable extends Migration$/;"	c
CreateOauthSessionScopesTable	database/migrations/2014_04_24_111109_create_oauth_session_scopes_table.php	/^class CreateOauthSessionScopesTable extends Migration$/;"	c
CreateOauthSessionsTable	database/migrations/2014_04_24_111002_create_oauth_sessions_table.php	/^class CreateOauthSessionsTable extends Migration$/;"	c
CreatePasswordResetsTable	database/migrations/2014_10_12_100000_create_password_resets_table.php	/^class CreatePasswordResetsTable extends Migration$/;"	c
CreateSubmission	app/Commands/CreateSubmission.php	/^class CreateSubmission extends Command$/;"	c
CreateSubmissionsTable	database/migrations/2015_01_30_023351_create_submissions_table.php	/^class CreateSubmissionsTable extends Migration$/;"	c
CreateTalksTable	database/migrations/2013_12_03_160343_create_talks_table.php	/^class CreateTalksTable extends Migration$/;"	c
CreateUsersTable	database/migrations/2013_12_03_023320_create_users_table.php	/^class CreateUsersTable extends Migration$/;"	c
DashboardController	app/Http/Controllers/DashboardController.php	/^class DashboardController extends Controller$/;"	c
DatabaseManager	bootstrap/cache/compiled.php	/^class DatabaseManager implements ConnectionResolverInterface$/;"	c
DatabaseSeeder	database/seeds/DatabaseSeeder.php	/^class DatabaseSeeder extends Seeder$/;"	c
DatabaseServiceProvider	bootstrap/cache/compiled.php	/^class DatabaseServiceProvider extends ServiceProvider$/;"	c
DestroySubmission	app/Commands/DestroySubmission.php	/^class DestroySubmission extends Command$/;"	c
DetectEnvironment	bootstrap/cache/compiled.php	/^class DetectEnvironment$/;"	c
Dispatcher	bootstrap/cache/compiled.php	/^class Dispatcher implements DispatcherContract$/;"	c
Dispatcher	bootstrap/cache/compiled.php	/^class Dispatcher implements DispatcherContract, QueueingDispatcher$/;"	c
Dispatcher	bootstrap/cache/compiled.php	/^interface Dispatcher$/;"	i
Dotenv	bootstrap/cache/compiled.php	/^class Dotenv$/;"	c
DropTalkSlug	database/migrations/2014_12_20_194450_drop_talk_slug.php	/^class DropTalkSlug extends Migration$/;"	c
DropUniqueConferenceTitle	database/migrations/2015_01_08_145004_drop_unique_conference_title.php	/^class DropUniqueConferenceTitle extends Migration$/;"	c
DropVersions	database/migrations/2015_05_24_113910_drop_versions.php	/^class DropVersions extends Migration$/;"	c
DummyAuthorizer	tests/Api/ApiTestCase.php	/^class DummyAuthorizer extends Authorizer$/;"	c
EloquentUserProvider	bootstrap/cache/compiled.php	/^class EloquentUserProvider implements UserProvider$/;"	c
EncryptCookies	app/Http/Middleware/EncryptCookies.php	/^class EncryptCookies extends BaseEncrypter$/;"	c
EncryptCookies	bootstrap/cache/compiled.php	/^class EncryptCookies$/;"	c
Encrypter	bootstrap/cache/compiled.php	/^class Encrypter extends BaseEncrypter implements EncrypterContract$/;"	c
Encrypter	bootstrap/cache/compiled.php	/^interface Encrypter$/;"	i
EncryptionServiceProvider	bootstrap/cache/compiled.php	/^class EncryptionServiceProvider extends ServiceProvider$/;"	c
EngineInterface	bootstrap/cache/compiled.php	/^interface EngineInterface$/;"	i
EngineResolver	bootstrap/cache/compiled.php	/^class EngineResolver$/;"	c
EnvironmentDetector	bootstrap/cache/compiled.php	/^class EnvironmentDetector$/;"	c
ErrorHandler	bootstrap/cache/compiled.php	/^class ErrorHandler$/;"	c
Event	app/Events/Event.php	/^abstract class Event$/;"	c
EventServiceProvider	app/Providers/EventServiceProvider.php	/^class EventServiceProvider extends ServiceProvider$/;"	c
EventServiceProvider	bootstrap/cache/compiled.php	/^class EventServiceProvider extends ServiceProvider$/;"	c
ExceptionHandler	bootstrap/cache/compiled.php	/^class ExceptionHandler$/;"	c
ExceptionHandler	bootstrap/cache/compiled.php	/^interface ExceptionHandler$/;"	i
ExcludeDirectoryFilterIterator	bootstrap/cache/compiled.php	/^class ExcludeDirectoryFilterIterator extends FilterIterator implements \\RecursiveIterator$/;"	c
Facade	bootstrap/cache/compiled.php	/^abstract class Facade$/;"	c
Factory	bootstrap/cache/compiled.php	/^class Factory implements FactoryContract$/;"	c
Factory	bootstrap/cache/compiled.php	/^interface Factory$/;"	i
FileBag	bootstrap/cache/compiled.php	/^class FileBag extends ParameterBag$/;"	c
FileTypeFilterIterator	bootstrap/cache/compiled.php	/^class FileTypeFilterIterator extends FilterIterator$/;"	c
FileViewFinder	bootstrap/cache/compiled.php	/^class FileViewFinder implements ViewFinderInterface$/;"	c
FilenameFilterIterator	bootstrap/cache/compiled.php	/^class FilenameFilterIterator extends MultiplePcreFilterIterator$/;"	c
Filesystem	bootstrap/cache/compiled.php	/^class Filesystem$/;"	c
FilesystemServiceProvider	bootstrap/cache/compiled.php	/^class FilesystemServiceProvider extends ServiceProvider$/;"	c
FilterIterator	bootstrap/cache/compiled.php	/^abstract class FilterIterator extends \\FilterIterator$/;"	c
Finder	bootstrap/cache/compiled.php	/^class Finder implements \\IteratorAggregate, \\Countable$/;"	c
FleshOutConferences	database/migrations/2014_12_21_035318_flesh_out_conferences.php	/^class FleshOutConferences extends Migration$/;"	c
FormRequest	bootstrap/cache/compiled.php	/^class FormRequest extends Request implements ValidatesWhenResolved$/;"	c
FormatterInterface	bootstrap/cache/compiled.php	/^interface FormatterInterface$/;"	i
FoundationServiceProvider	bootstrap/cache/compiled.php	/^class FoundationServiceProvider extends ServiceProvider$/;"	c
FrameGuard	bootstrap/cache/compiled.php	/^class FrameGuard$/;"	c
Gate	bootstrap/cache/compiled.php	/^class Gate implements GateContract$/;"	c
Gate	bootstrap/cache/compiled.php	/^interface Gate$/;"	i
GenerateOAuthClient	app/Console/Commands/GenerateOAuthClient.php	/^class GenerateOAuthClient extends Command$/;"	c
Glob	bootstrap/cache/compiled.php	/^class Glob$/;"	c
Guard	bootstrap/cache/compiled.php	/^interface Guard$/;"	i
HandleExceptions	bootstrap/cache/compiled.php	/^class HandleExceptions$/;"	c
Handler	app/Exceptions/Handler.php	/^class Handler extends ExceptionHandler$/;"	c
HandlerInterface	bootstrap/cache/compiled.php	/^interface HandlerInterface$/;"	i
HashServiceProvider	bootstrap/cache/compiled.php	/^class HashServiceProvider extends ServiceProvider$/;"	c
Hasher	bootstrap/cache/compiled.php	/^interface Hasher$/;"	i
HeaderBag	bootstrap/cache/compiled.php	/^class HeaderBag implements \\IteratorAggregate, \\Countable$/;"	c
HomeController	app/Http/Controllers/HomeController.php	/^class HomeController extends BaseController$/;"	c
HostValidator	bootstrap/cache/compiled.php	/^class HostValidator implements ValidatorInterface$/;"	c
HttpKernelInterface	bootstrap/cache/compiled.php	/^interface HttpKernelInterface$/;"	i
Inspire	app/Console/Commands/Inspire.php	/^class Inspire extends Command$/;"	c
IntegrationTestCase	tests/IntegrationTestCase.php	/^class IntegrationTestCase extends TestCase$/;"	c
JsonApiTest	tests/Api/JsonApiTest.php	/^class JsonApiTest extends ApiTestCase$/;"	c
Jsonable	bootstrap/cache/compiled.php	/^interface Jsonable$/;"	i
Kernel	app/Console/Kernel.php	/^class Kernel extends ConsoleKernel$/;"	c
Kernel	app/Http/Kernel.php	/^class Kernel extends HttpKernel$/;"	c
Kernel	bootstrap/cache/compiled.php	/^class Kernel implements KernelContract$/;"	c
Kernel	bootstrap/cache/compiled.php	/^interface Kernel$/;"	i
LARAVEL_START	bootstrap/autoload.php	/^define('LARAVEL_START', microtime(true));$/;"	d
LineFormatter	bootstrap/cache/compiled.php	/^class LineFormatter extends NormalizerFormatter$/;"	c
LoadConfiguration	bootstrap/cache/compiled.php	/^class LoadConfiguration$/;"	c
Log	bootstrap/cache/compiled.php	/^class Log extends Facade$/;"	c
Log	bootstrap/cache/compiled.php	/^interface Log$/;"	i
Logger	bootstrap/cache/compiled.php	/^class Logger implements LoggerInterface$/;"	c
LoggerInterface	bootstrap/cache/compiled.php	/^interface LoggerInterface$/;"	i
Manager	bootstrap/cache/compiled.php	/^abstract class Manager$/;"	c
Me	app/ApiResources/Me.php	/^class Me implements Arrayable$/;"	c
MeApiTest	tests/Api/MeApiTest.php	/^class MeApiTest extends ApiTestCase$/;"	c
MeController	app/Http/Controllers/Api/MeController.php	/^class MeController extends BaseController$/;"	c
MergeFirstAndLastNameIntoName	database/migrations/2015_11_18_151911_merge_first_and_last_name_into_name.php	/^class MergeFirstAndLastNameIntoName extends Migration$/;"	c
MessageBag	bootstrap/cache/compiled.php	/^class MessageBag implements Arrayable, Countable, Jsonable, JsonSerializable, MessageBagContract, MessageProvider$/;"	c
MessageBag	bootstrap/cache/compiled.php	/^interface MessageBag$/;"	i
MessageProvider	bootstrap/cache/compiled.php	/^interface MessageProvider$/;"	i
MetadataBag	bootstrap/cache/compiled.php	/^class MetadataBag implements SessionBagInterface$/;"	c
MethodValidator	bootstrap/cache/compiled.php	/^class MethodValidator implements ValidatorInterface$/;"	c
Model	bootstrap/cache/compiled.php	/^abstract class Model implements ArrayAccess, Arrayable, Jsonable, JsonSerializable, QueueableEntity, UrlRoutable$/;"	c
MultiplePcreFilterIterator	bootstrap/cache/compiled.php	/^abstract class MultiplePcreFilterIterator extends FilterIterator$/;"	c
NamespacedItemResolver	bootstrap/cache/compiled.php	/^class NamespacedItemResolver$/;"	c
NormalizerFormatter	bootstrap/cache/compiled.php	/^class NormalizerFormatter implements FormatterInterface$/;"	c
OAuthController	app/Http/Controllers/OAuthController.php	/^class OAuthController extends Controller$/;"	c
OAuthGuard	app/OAuthGuard/Facades/OAuthGuard.php	/^class OAuthGuard extends Facade$/;"	c
OAuthGuard	app/OAuthGuard/OAuthGuard.php	/^class OAuthGuard$/;"	c
OAuthGuardServiceProvider	app/Providers/OAuthGuardServiceProvider.php	/^class OAuthGuardServiceProvider extends ServiceProvider$/;"	c
OAuthTestCase	tests/Api/OAuthTest.php	/^class OAuthTestCase extends TestCase$/;"	c
PaginationServiceProvider	bootstrap/cache/compiled.php	/^class PaginationServiceProvider extends ServiceProvider$/;"	c
Paginator	bootstrap/cache/compiled.php	/^class Paginator extends AbstractPaginator implements Arrayable, ArrayAccess, Countable, IteratorAggregate, JsonSerializable, Jsonable, PaginatorContract$/;"	c
Paginator	bootstrap/cache/compiled.php	/^interface Paginator$/;"	i
ParameterBag	bootstrap/cache/compiled.php	/^class ParameterBag implements \\IteratorAggregate, \\Countable$/;"	c
PasswordController	app/Http/Controllers/Auth/PasswordController.php	/^class PasswordController extends Controller$/;"	c
PathFilterIterator	bootstrap/cache/compiled.php	/^class PathFilterIterator extends MultiplePcreFilterIterator$/;"	c
PhpEngine	bootstrap/cache/compiled.php	/^class PhpEngine implements EngineInterface$/;"	c
Pipeline	bootstrap/cache/compiled.php	/^class Pipeline implements PipelineContract$/;"	c
Pipeline	bootstrap/cache/compiled.php	/^interface Pipeline$/;"	i
ProviderRepository	bootstrap/cache/compiled.php	/^class ProviderRepository$/;"	c
PublicProfileController	app/Http/Controllers/PublicProfileController.php	/^class PublicProfileController extends Controller$/;"	c
PublicSpeakerProfileTest	tests/PublicSpeakerProfileTest.php	/^class PublicSpeakerProfileTest extends IntegrationTestCase$/;"	c
QueueableEntity	bootstrap/cache/compiled.php	/^interface QueueableEntity$/;"	i
QueueingDispatcher	bootstrap/cache/compiled.php	/^interface QueueingDispatcher extends Dispatcher$/;"	i
QueueingFactory	bootstrap/cache/compiled.php	/^interface QueueingFactory extends Factory$/;"	i
RecursiveDirectoryIterator	bootstrap/cache/compiled.php	/^class RecursiveDirectoryIterator extends \\RecursiveDirectoryIterator$/;"	c
RedirectIfAuthenticated	app/Http/Middleware/RedirectIfAuthenticated.php	/^class RedirectIfAuthenticated$/;"	c
RegisterFacades	bootstrap/cache/compiled.php	/^class RegisterFacades$/;"	c
RegisterProviders	bootstrap/cache/compiled.php	/^class RegisterProviders$/;"	c
Registrar	app/Services/Registrar.php	/^class Registrar implements RegistrarContract$/;"	c
Registrar	bootstrap/cache/compiled.php	/^interface Registrar$/;"	i
RemoveOutline	database/migrations/2015_07_09_224728_remove_outline.php	/^class RemoveOutline extends Migration$/;"	c
Renderable	bootstrap/cache/compiled.php	/^interface Renderable$/;"	i
Repository	bootstrap/cache/compiled.php	/^class Repository implements ArrayAccess, ConfigContract$/;"	c
Repository	bootstrap/cache/compiled.php	/^interface Repository$/;"	i
Request	app/Http/Requests/Request.php	/^abstract class Request extends FormRequest$/;"	c
Request	bootstrap/cache/compiled.php	/^class Request extends SymfonyRequest implements Arrayable, ArrayAccess$/;"	c
Request	bootstrap/cache/compiled.php	/^class Request$/;"	c
Response	bootstrap/cache/compiled.php	/^class Response extends BaseResponse$/;"	c
Response	bootstrap/cache/compiled.php	/^class Response$/;"	c
ResponseFactory	bootstrap/cache/compiled.php	/^interface ResponseFactory$/;"	i
ResponseHeaderBag	bootstrap/cache/compiled.php	/^class ResponseHeaderBag extends HeaderBag$/;"	c
RotatingFileHandler	bootstrap/cache/compiled.php	/^class RotatingFileHandler extends StreamHandler$/;"	c
Route	bootstrap/cache/compiled.php	/^class Route extends Facade$/;"	c
Route	bootstrap/cache/compiled.php	/^class Route implements \\Serializable$/;"	c
Route	bootstrap/cache/compiled.php	/^class Route$/;"	c
RouteCollection	bootstrap/cache/compiled.php	/^class RouteCollection implements Countable, IteratorAggregate$/;"	c
RouteCompiler	bootstrap/cache/compiled.php	/^class RouteCompiler implements RouteCompilerInterface$/;"	c
RouteCompilerInterface	bootstrap/cache/compiled.php	/^interface RouteCompilerInterface$/;"	i
RouteServiceProvider	app/Providers/RouteServiceProvider.php	/^class RouteServiceProvider extends ServiceProvider$/;"	c
RouteServiceProvider	bootstrap/cache/compiled.php	/^class RouteServiceProvider extends ServiceProvider$/;"	c
Router	bootstrap/cache/compiled.php	/^class Router implements RegistrarContract$/;"	c
RoutingServiceProvider	bootstrap/cache/compiled.php	/^class RoutingServiceProvider extends ServiceProvider$/;"	c
SchemeValidator	bootstrap/cache/compiled.php	/^class SchemeValidator implements ValidatorInterface$/;"	c
ServerBag	bootstrap/cache/compiled.php	/^class ServerBag extends ParameterBag$/;"	c
ServiceProvider	bootstrap/cache/compiled.php	/^abstract class ServiceProvider$/;"	c
SessionBagInterface	bootstrap/cache/compiled.php	/^interface SessionBagInterface$/;"	i
SessionGuard	bootstrap/cache/compiled.php	/^class SessionGuard implements StatefulGuard, SupportsBasicAuth$/;"	c
SessionInterface	bootstrap/cache/compiled.php	/^interface SessionInterface extends BaseSessionInterface$/;"	i
SessionInterface	bootstrap/cache/compiled.php	/^interface SessionInterface$/;"	i
SessionManager	bootstrap/cache/compiled.php	/^class SessionManager extends Manager$/;"	c
SessionServiceProvider	bootstrap/cache/compiled.php	/^class SessionServiceProvider extends ServiceProvider$/;"	c
ShareErrorsFromSession	bootstrap/cache/compiled.php	/^class ShareErrorsFromSession$/;"	c
SlackSubscriber	app/Handlers/Events/SlackSubscriber.php	/^class SlackSubscriber$/;"	c
SplFileInfo	bootstrap/cache/compiled.php	/^class SplFileInfo extends \\SplFileInfo$/;"	c
StartSession	bootstrap/cache/compiled.php	/^class StartSession$/;"	c
StatefulGuard	bootstrap/cache/compiled.php	/^interface StatefulGuard extends Guard$/;"	i
Store	bootstrap/cache/compiled.php	/^class Store implements SessionInterface$/;"	c
Str	bootstrap/cache/compiled.php	/^class Str$/;"	c
StreamHandler	bootstrap/cache/compiled.php	/^class StreamHandler extends AbstractProcessingHandler$/;"	c
SubmissionTest	tests/SubmissionTest.php	/^class SubmissionTest extends IntegrationTestCase$/;"	c
SubmissionsController	app/Http/Controllers/SubmissionsController.php	/^class SubmissionsController extends Controller$/;"	c
Talk	app/ApiResources/Talk.php	/^class Talk implements Arrayable$/;"	c
Talk	app/models/Talk.php	/^class Talk extends UuidBase$/;"	c
TalkApiTest	tests/Api/TalkApiTest.php	/^class TalkApiTest extends ApiTestCase$/;"	c
TalkRevision	app/models/TalkRevision.php	/^class TalkRevision extends UuidBase$/;"	c
TalkTest	tests/TalkTest.php	/^class TalkTest extends IntegrationTestCase$/;"	c
TalksController	app/Http/Controllers/Api/TalksController.php	/^class TalksController extends BaseController$/;"	c
TalksController	app/Http/Controllers/TalksController.php	/^class TalksController extends BaseController$/;"	c
TalksSeeder	database/seeds/TalksSeeder.php	/^class TalksSeeder extends Seeder$/;"	c
TerminableInterface	bootstrap/cache/compiled.php	/^interface TerminableInterface$/;"	i
TestCase	tests/TestCase.php	/^class TestCase extends Illuminate\\Foundation\\Testing\\TestCase$/;"	c
TweetImportantCFPDates	app/Console/Commands/TweetImportantCFPDates.php	/^class TweetImportantCFPDates extends Command$/;"	c
TweetImportantCFPDatesTest	tests/Console/Commands/TweetImportantCFPDatesTest.php	/^class TweetImportantCFPDatesTest extends IntegrationTestCase$/;"	c
UnuniqueTalkTitle	database/migrations/2014_12_20_194826_ununique_talk_title.php	/^class UnuniqueTalkTitle extends Migration$/;"	c
UriValidator	bootstrap/cache/compiled.php	/^class UriValidator implements ValidatorInterface$/;"	c
UrlGenerator	bootstrap/cache/compiled.php	/^class UrlGenerator implements UrlGeneratorContract$/;"	c
UrlGenerator	bootstrap/cache/compiled.php	/^interface UrlGenerator$/;"	i
UrlRoutable	bootstrap/cache/compiled.php	/^interface UrlRoutable$/;"	i
User	app/User.php	/^class User extends Authenticatable$/;"	c
UserBiosController	app/Http/Controllers/Api/UserBiosController.php	/^class UserBiosController extends BaseController$/;"	c
UserProvider	bootstrap/cache/compiled.php	/^interface UserProvider$/;"	i
UserTalksController	app/Http/Controllers/Api/UserTalksController.php	/^class UserTalksController extends BaseController$/;"	c
UsersSeeder	database/seeds/UsersSeeder.php	/^class UsersSeeder extends Seeder$/;"	c
UuidBase	app/models/UuidBase.php	/^class UuidBase extends Eloquent$/;"	c
UuidizeTalksTable	database/migrations/2014_12_20_201427_uuidize_talks_table.php	/^class UuidizeTalksTable extends Migration$/;"	c
ValidatesWhenResolved	bootstrap/cache/compiled.php	/^interface ValidatesWhenResolved$/;"	i
ValidationException	app/Exceptions/ValidationException.php	/^class ValidationException extends RuntimeException$/;"	c
ValidationServiceProvider	bootstrap/cache/compiled.php	/^class ValidationServiceProvider extends ServiceProvider$/;"	c
ValidatorInterface	bootstrap/cache/compiled.php	/^interface ValidatorInterface$/;"	i
VerifyCsrfToken	app/Http/Middleware/VerifyCsrfToken.php	/^class VerifyCsrfToken extends BaseVerifier$/;"	c
VerifyCsrfToken	bootstrap/cache/compiled.php	/^class VerifyCsrfToken$/;"	c
VersionAndRevisionTalks	database/migrations/2014_12_23_130853_version_and_revision_talks.php	/^class VersionAndRevisionTalks extends Migration$/;"	c
View	bootstrap/cache/compiled.php	/^class View extends Facade$/;"	c
View	bootstrap/cache/compiled.php	/^class View implements ArrayAccess, ViewContract$/;"	c
View	bootstrap/cache/compiled.php	/^interface View extends Renderable$/;"	i
ViewErrorBag	bootstrap/cache/compiled.php	/^class ViewErrorBag implements Countable$/;"	c
ViewFinderInterface	bootstrap/cache/compiled.php	/^interface ViewFinderInterface$/;"	i
ViewServiceProvider	bootstrap/cache/compiled.php	/^class ViewServiceProvider extends ServiceProvider$/;"	c
WelcomeController	app/Http/Controllers/WelcomeController.php	/^class WelcomeController extends Controller$/;"	c
Writer	bootstrap/cache/compiled.php	/^class Writer implements LogContract, PsrLoggerInterface$/;"	c
_COOKIE	bootstrap/cache/compiled.php	/^        $_COOKIE = $this->cookies->all();$/;"	v
_GET	bootstrap/cache/compiled.php	/^        $_GET = $this->query->all();$/;"	v
_POST	bootstrap/cache/compiled.php	/^        $_POST = $this->request->all();$/;"	v
_REQUEST	bootstrap/cache/compiled.php	/^            $_REQUEST = array_merge($_REQUEST, $request[$order]);$/;"	v
_REQUEST	bootstrap/cache/compiled.php	/^        $_REQUEST = array();$/;"	v
_SERVER	bootstrap/cache/compiled.php	/^        $_SERVER = $this->server->all();$/;"	v
__call	bootstrap/cache/compiled.php	/^    public function __call($method, $parameters)$/;"	f
__callStatic	bootstrap/cache/compiled.php	/^    public static function __callStatic($method, $args)$/;"	f
__callStatic	bootstrap/cache/compiled.php	/^    public static function __callStatic($method, $parameters)$/;"	f
__clone	bootstrap/cache/compiled.php	/^    private function __clone()$/;"	f
__clone	bootstrap/cache/compiled.php	/^    public function __clone()$/;"	f
__construct	app/ApiResources/Bio.php	/^    public function __construct(EloquentBio $bio)$/;"	f
__construct	app/ApiResources/Conference.php	/^    public function __construct(EloquentConference $conference)$/;"	f
__construct	app/ApiResources/Me.php	/^    public function __construct(User $user)$/;"	f
__construct	app/ApiResources/Talk.php	/^    public function __construct(EloquentTalk $talk)$/;"	f
__construct	app/Commands/CreateSubmission.php	/^    public function __construct($conferenceId, $talkId)$/;"	f
__construct	app/Commands/DestroySubmission.php	/^    public function __construct($conferenceId, $talkId)$/;"	f
__construct	app/Console/Commands/GenerateOAuthClient.php	/^    public function __construct()$/;"	f
__construct	app/Console/Commands/TweetImportantCFPDates.php	/^    public function __construct(Twitter $twitter, $tweetWaitSeconds = 30)$/;"	f
__construct	app/Console/Commands/syncJoindInEvents.php	/^    public function __construct()$/;"	f
__construct	app/Exceptions/ValidationException.php	/^    public function __construct($message, $errors)$/;"	f
__construct	app/Http/Controllers/OAuthController.php	/^    public function __construct(Authorizer $authorizer)$/;"	f
__construct	app/Http/Controllers/WelcomeController.php	/^    public function __construct()$/;"	f
__construct	app/JoindIn/ConferenceImporter.php	/^    public function __construct($authorId = null)$/;"	f
__construct	app/OAuthGuard/OAuthGuard.php	/^    public function __construct(Authorizer $authorizer)$/;"	f
__construct	app/Services/CreateBioForm.php	/^    private function __construct($input, $user)$/;"	f
__construct	app/Services/CreateConferenceForm.php	/^    private function __construct($input, $user)$/;"	f
__construct	bootstrap/cache/compiled.php	/^    private function __construct($aliases)$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct($app)$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct($app, ConnectionFactory $factory)$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct($basePath = null)$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct($content = '', $status = 200, $headers = array())$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct($dateFormat = null)$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct($debug = true, $charset = null, $fileLinkFormat = null)$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct($file, $relativePath, $relativePathname)$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct($filename, $maxFiles = 0, $level = Logger::DEBUG, $bubble = true, $filePermission = null, $useLocking = false)$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct($format = null, $dateFormat = null, $allowInlineLineBreaks = false, $ignoreEmptyContextAndExtra = false)$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct($items = [])$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct($items, $perPage, $currentPage = null, array $options = [])$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct($key, $cipher = 'AES-128-CBC')$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct($level = Logger::DEBUG, $bubble = true)$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct($methods, $uri, $action)$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct($name, $value = null, $expire = 0, $path = '\/', $domain = null, $secure = false, $httpOnly = true)$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct($name, SessionHandlerInterface $handler, $id = null)$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct($name, UserProvider $provider, SessionInterface $session, Request $request = null)$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct($name, array $handlers = array(), array $processors = array())$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct($path, $file = '.env')$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct($path, $flags, $ignoreUnreadableDirs = false)$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct($path, array $defaults = array(), array $requirements = array(), array $options = array(), $host = '', $schemes = array(), $methods = array(), $condition = '')$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct($staticPrefix, $regex, array $tokens, array $pathVariables, $hostRegex = null, array $hostTokens = array(), array $hostVariables = array(), array $variables = array())$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct($storageKey = '_sf2_attributes')$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct($storageKey = '_sf2_meta', $updateThreshold = 0)$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct($stream, $level = Logger::DEBUG, $bubble = true, $filePermission = null, $useLocking = false)$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct($value, array $attributes = array())$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct()$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct(Application $app)$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct(Application $app, Encrypter $encrypter)$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct(Application $app, Router $router)$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct(ApplicationContract $app, Filesystem $files, $manifestPath)$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct(BufferingLogger $bootstrappingLogger = null)$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct(CompilerInterface $compiler)$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct(Container $container)$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct(Container $container, Closure $queueResolver = null)$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct(Container $container, callable $userResolver, array $abilities = [], array $policies = [], array $beforeCallbacks = [], array $afterCallbacks = [])$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct(ContainerContract $container = null)$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct(CookieJar $cookies)$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct(Dispatcher $events, Container $container = null)$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct(EncrypterContract $encrypter)$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct(EngineResolver $engines, ViewFinderInterface $finder, Dispatcher $events)$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct(Factory $factory, EngineInterface $engine, $view, $path, $data = [])$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct(Filesystem $files, $cachePath)$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct(Filesystem $files, array $paths, array $extensions = null)$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct(HasherContract $hasher, $model)$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct(MonologLogger $monolog, Dispatcher $dispatcher = null)$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct(RouteCollection $routes, Request $request)$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct(Router $router, Container $container = null)$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct(SessionManager $manager)$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct(ViewFactory $view)$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct(\\Iterator $iterator, $mode)$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct(\\Iterator $iterator, array $directories)$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct(\\Iterator $iterator, array $matchPatterns, array $noMatchPatterns)$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct(array $attributes = [])$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct(array $headers = array())$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct(array $items = [])$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct(array $items)$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct(array $messages = [])$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct(array $parameters = array())$/;"	f
__construct	bootstrap/cache/compiled.php	/^    public function __construct(array $query = array(), array $request = array(), array $attributes = array(), array $cookies = array(), array $files = array(), array $server = array(), $content = null)$/;"	f
__construct	tests/Api/ApiTestCase.php	/^    public function __construct()$/;"	f
__destruct	bootstrap/cache/compiled.php	/^    public function __destruct()$/;"	f
__empty_1	storage/framework/views/01b6b2021d55303e992082ba487ae521d6cae32f.php	/^                    <?php $__empty_1 = true; foreach($bios as $bio): $__empty_1 = false; ?>$/;"	v
__empty_1	storage/framework/views/01b6b2021d55303e992082ba487ae521d6cae32f.php	/^                    <?php $__empty_1 = true; foreach($talks as $talk): $__empty_1 = false; ?>$/;"	v
__empty_1	storage/framework/views/1e56b4978da414c8c7d081f31979329e71fcee33.php	/^                    <?php $__empty_1 = true; foreach($bios as $bio): $__empty_1 = false; ?>$/;"	v
__empty_1	storage/framework/views/402b777e747bba8c6e99bbca7a91e4338c3a7317.php	/^                    <?php $__empty_1 = true; foreach($talks as $talk): $__empty_1 = false; ?>$/;"	v
__empty_1	storage/framework/views/936c93d2cc7211ed2f2ea7c4352ee673ac571961.php	/^                <?php $__empty_1 = true; foreach($user->favoritedConferences as $conference): $__empty_1 = false; ?>$/;"	v
__empty_1	storage/framework/views/c49ec6fed1e86d71bdd4df5fe0b3cc8b6310f238.php	/^        <?php $__empty_1 = true; foreach($speakers as $speaker): $__empty_1 = false; ?>$/;"	v
__empty_1	storage/framework/views/f93059fe7c16666114a32d01055bcaac0baf183f.php	/^                    <?php $__empty_1 = true; foreach($conferences as $conference): $__empty_1 = false; ?>$/;"	v
__get	bootstrap/cache/compiled.php	/^    public function &__get($key)$/;"	f
__get	bootstrap/cache/compiled.php	/^    public function __get($key)$/;"	f
__isset	bootstrap/cache/compiled.php	/^    public function __isset($key)$/;"	f
__set	bootstrap/cache/compiled.php	/^    public function __set($key, $value)$/;"	f
__toString	bootstrap/cache/compiled.php	/^    public function __toString()$/;"	f
__unset	bootstrap/cache/compiled.php	/^    public function __unset($key)$/;"	f
__wakeup	bootstrap/cache/compiled.php	/^    public function __wakeup()$/;"	f
abilities	bootstrap/cache/compiled.php	/^        $this->abilities = $abilities;$/;"	v
abilities	bootstrap/cache/compiled.php	/^    protected $abilities = [];$/;"	v
abilities	bootstrap/cache/compiled.php	/^    public function __construct(Container $container, callable $userResolver, array $abilities = [], array $policies = [], array $beforeCallbacks = [], array $afterCallbacks = [])$/;"	v
ability	bootstrap/cache/compiled.php	/^                $ability = Str::camel($ability);$/;"	v
abort	bootstrap/cache/compiled.php	/^    public function abort($code, $message = '', array $headers = [])$/;"	f
abstract	bootstrap/cache/compiled.php	/^            $abstract = $this->getAlias($abstract);$/;"	v
abstract	bootstrap/cache/compiled.php	/^        $abstract = $this->getAlias($abstract);$/;"	v
abstract	bootstrap/cache/compiled.php	/^        $abstract = $this->getAlias($this->normalize($abstract));$/;"	v
abstract	bootstrap/cache/compiled.php	/^        $abstract = $this->getFunctionHint($callback);$/;"	v
abstract	bootstrap/cache/compiled.php	/^        $abstract = $this->normalize($abstract);$/;"	v
accept	bootstrap/cache/compiled.php	/^                if ($this->matchesType($accept, $type) || $accept === strtok($type, '\/') . '\/*') {$/;"	v
accept	bootstrap/cache/compiled.php	/^                if ($this->matchesType($type, $accept) || $accept === strtok($type, '\/') . '\/*') {$/;"	v
accept	bootstrap/cache/compiled.php	/^            if ($accept === '*\/*' || $accept === '*') {$/;"	v
accept	bootstrap/cache/compiled.php	/^    public function accept()$/;"	f
acceptable	bootstrap/cache/compiled.php	/^        $acceptable = $this->getAcceptableContentTypes();$/;"	v
acceptableContentTypes	bootstrap/cache/compiled.php	/^        $this->acceptableContentTypes = null;$/;"	v
acceptableContentTypes	bootstrap/cache/compiled.php	/^        return $this->acceptableContentTypes = array_keys(AcceptHeader::fromString($this->headers->get('Accept'))->all());$/;"	v
acceptableContentTypes	bootstrap/cache/compiled.php	/^    protected $acceptableContentTypes;$/;"	v
accepts	bootstrap/cache/compiled.php	/^        $accepts = $this->getAcceptableContentTypes();$/;"	v
accepts	bootstrap/cache/compiled.php	/^    public function accepts($contentTypes)$/;"	f
acceptsHtml	bootstrap/cache/compiled.php	/^    public function acceptsHtml()$/;"	f
acceptsJson	bootstrap/cache/compiled.php	/^    public function acceptsJson()$/;"	f
accessible	bootstrap/cache/compiled.php	/^    public static function accessible($value)$/;"	f
account_rules	app/Http/Controllers/ConferencesController.php	/^    protected $account_rules = [$/;"	v
action	bootstrap/cache/compiled.php	/^            $action = $this->convertToControllerAction($action);$/;"	v
action	bootstrap/cache/compiled.php	/^            $action = $this->rootNamespace . '\\\\' . $action;$/;"	v
action	bootstrap/cache/compiled.php	/^            $action = ['uses' => $action];$/;"	v
action	bootstrap/cache/compiled.php	/^            $action = trim($action, '\\\\');$/;"	v
action	bootstrap/cache/compiled.php	/^        $action = $route->getAction();$/;"	v
action	bootstrap/cache/compiled.php	/^        $action = $this->current()->getAction();$/;"	v
action	bootstrap/cache/compiled.php	/^        $action = $this->getAction();$/;"	v
action	bootstrap/cache/compiled.php	/^        $action = $this->mergeWithLastGroup($route->getAction());$/;"	v
action	bootstrap/cache/compiled.php	/^        $action = ['uses' => $controller . '@' . $method];$/;"	v
action	bootstrap/cache/compiled.php	/^        $action = is_string($action) ? $this->addGroupNamespaceToStringUses($action) : $action;$/;"	v
action	bootstrap/cache/compiled.php	/^        $this->action = $action;$/;"	v
action	bootstrap/cache/compiled.php	/^        $this->action = $this->parseAction($action);$/;"	v
action	bootstrap/cache/compiled.php	/^    protected $action;$/;"	v
action	bootstrap/cache/compiled.php	/^    public function action($action, $parameters = [], $absolute = true)$/;"	f
action	bootstrap/cache/compiled.php	/^    public function action($action, $parameters = [], $absolute = true);$/;"	f
action	bootstrap/cache/compiled.php	/^    public function any($uri, $action = null)$/;"	v
action	bootstrap/cache/compiled.php	/^    public function delete($uri, $action = null)$/;"	v
action	bootstrap/cache/compiled.php	/^    public function get($uri, $action = null)$/;"	v
action	bootstrap/cache/compiled.php	/^    public function match($methods, $uri, $action = null)$/;"	v
action	bootstrap/cache/compiled.php	/^    public function options($uri, $action = null)$/;"	v
action	bootstrap/cache/compiled.php	/^    public function patch($uri, $action = null)$/;"	v
action	bootstrap/cache/compiled.php	/^    public function post($uri, $action = null)$/;"	v
action	bootstrap/cache/compiled.php	/^    public function put($uri, $action = null)$/;"	v
actionList	bootstrap/cache/compiled.php	/^    protected $actionList = [];$/;"	v
actionReferencesController	bootstrap/cache/compiled.php	/^    protected function actionReferencesController($action)$/;"	f
add	bootstrap/cache/compiled.php	/^    public function add($key, $message)$/;"	f
add	bootstrap/cache/compiled.php	/^    public function add($key, $message);$/;"	f
add	bootstrap/cache/compiled.php	/^    public function add(AcceptHeaderItem $item)$/;"	f
add	bootstrap/cache/compiled.php	/^    public function add(Route $route)$/;"	f
add	bootstrap/cache/compiled.php	/^    public function add(array $files = array())$/;"	f
add	bootstrap/cache/compiled.php	/^    public function add(array $headers)$/;"	f
add	bootstrap/cache/compiled.php	/^    public function add(array $parameters = array())$/;"	f
add	bootstrap/cache/compiled.php	/^    public static function add($array, $key, $value)$/;"	f
addAlert	bootstrap/cache/compiled.php	/^    public function addAlert($message, array $context = array())$/;"	f
addBagDataToSession	bootstrap/cache/compiled.php	/^    protected function addBagDataToSession()$/;"	f
addCacheControlDirective	bootstrap/cache/compiled.php	/^    public function addCacheControlDirective($key, $value = true)$/;"	f
addClassEvent	bootstrap/cache/compiled.php	/^    protected function addClassEvent($view, $class, $prefix, $priority = null)$/;"	f
addContextualBinding	bootstrap/cache/compiled.php	/^    public function addContextualBinding($concrete, $abstract, $implementation)$/;"	f
addCookieToResponse	bootstrap/cache/compiled.php	/^    protected function addCookieToResponse($request, $response)$/;"	f
addCookieToResponse	bootstrap/cache/compiled.php	/^    protected function addCookieToResponse(Response $response, SessionInterface $session)$/;"	f
addCritical	bootstrap/cache/compiled.php	/^    public function addCritical($message, array $context = array())$/;"	f
addDebug	bootstrap/cache/compiled.php	/^    public function addDebug($message, array $context = array())$/;"	f
addDefaults	bootstrap/cache/compiled.php	/^    public function addDefaults(array $defaults)$/;"	f
addDeferredServices	bootstrap/cache/compiled.php	/^    public function addDeferredServices(array $services)$/;"	f
addDependencyForCallParameter	bootstrap/cache/compiled.php	/^    protected function addDependencyForCallParameter(ReflectionParameter $parameter, array &$parameters, &$dependencies)$/;"	f
addEmergency	bootstrap/cache/compiled.php	/^    public function addEmergency($message, array $context = array())$/;"	f
addError	bootstrap/cache/compiled.php	/^    public function addError($message, array $context = array())$/;"	f
addEventListener	bootstrap/cache/compiled.php	/^    protected function addEventListener($name, $callback, $priority = null)$/;"	f
addExtension	bootstrap/cache/compiled.php	/^    public function addExtension($extension)$/;"	f
addExtension	bootstrap/cache/compiled.php	/^    public function addExtension($extension);$/;"	f
addExtension	bootstrap/cache/compiled.php	/^    public function addExtension($extension, $engine, $resolver = null)$/;"	f
addFallthroughRoute	bootstrap/cache/compiled.php	/^    protected function addFallthroughRoute($controller, $uri)$/;"	f
addGlobalScope	bootstrap/cache/compiled.php	/^    public static function addGlobalScope($scope, Closure $implementation = null)$/;"	f
addGroupNamespaceToStringUses	bootstrap/cache/compiled.php	/^    protected function addGroupNamespaceToStringUses($action)$/;"	f
addHidden	bootstrap/cache/compiled.php	/^    public function addHidden($attributes = null)$/;"	f
addInfo	bootstrap/cache/compiled.php	/^    public function addInfo($message, array $context = array())$/;"	f
addLocation	bootstrap/cache/compiled.php	/^    public function addLocation($location)$/;"	f
addLocation	bootstrap/cache/compiled.php	/^    public function addLocation($location);$/;"	f
addLookups	bootstrap/cache/compiled.php	/^    protected function addLookups($route)$/;"	f
addNamespace	bootstrap/cache/compiled.php	/^    public function addNamespace($namespace, $hints)$/;"	f
addNamespace	bootstrap/cache/compiled.php	/^    public function addNamespace($namespace, $hints);$/;"	f
addNotice	bootstrap/cache/compiled.php	/^    public function addNotice($message, array $context = array())$/;"	f
addObservableEvents	bootstrap/cache/compiled.php	/^    public function addObservableEvents($observables)$/;"	f
addOptions	bootstrap/cache/compiled.php	/^    public function addOptions(array $options)$/;"	f
addPortToDomain	bootstrap/cache/compiled.php	/^    protected function addPortToDomain($domain)$/;"	f
addQuery	bootstrap/cache/compiled.php	/^    public function addQuery($key, $value)$/;"	f
addQueryString	bootstrap/cache/compiled.php	/^    protected function addQueryString($uri, array $parameters)$/;"	f
addRecord	bootstrap/cache/compiled.php	/^    public function addRecord($level, $message, array $context = array())$/;"	f
addRequirements	bootstrap/cache/compiled.php	/^    public function addRequirements(array $requirements)$/;"	f
addRoute	bootstrap/cache/compiled.php	/^    protected function addRoute($methods, $uri, $action)$/;"	f
addTalkIdsToTalks	database/migrations/2015_05_24_113910_drop_versions.php	/^    private function addTalkIdsToTalks()$/;"	f
addToActionList	bootstrap/cache/compiled.php	/^    protected function addToActionList($action, $route)$/;"	f
addToCollections	bootstrap/cache/compiled.php	/^    protected function addToCollections($route)$/;"	f
addUriWildcards	bootstrap/cache/compiled.php	/^    public function addUriWildcards($uri)$/;"	f
addVCSPattern	bootstrap/cache/compiled.php	/^    public static function addVCSPattern($pattern)$/;"	f
addViewEvent	bootstrap/cache/compiled.php	/^    protected function addViewEvent($view, $callback, $prefix = 'composing: ', $priority = null)$/;"	f
addVisible	bootstrap/cache/compiled.php	/^    public function addVisible($attributes = null)$/;"	f
addWarning	bootstrap/cache/compiled.php	/^    public function addWarning($message, array $context = array())$/;"	f
addWhereClausesToRoute	bootstrap/cache/compiled.php	/^    protected function addWhereClausesToRoute($route)$/;"	f
adminUserId	app/Console/Commands/syncJoindInEvents.php	/^        $adminUserId = 1;$/;"	v
after	bootstrap/cache/compiled.php	/^    public function after(callable $callback)$/;"	f
afterBootstrapping	bootstrap/cache/compiled.php	/^    public function afterBootstrapping($bootstrapper, Closure $callback)$/;"	f
afterCallbacks	bootstrap/cache/compiled.php	/^        $this->afterCallbacks = $afterCallbacks;$/;"	v
afterCallbacks	bootstrap/cache/compiled.php	/^    protected $afterCallbacks = [];$/;"	v
afterLoadingEnvironment	bootstrap/cache/compiled.php	/^    public function afterLoadingEnvironment(Closure $callback)$/;"	f
afterResolving	bootstrap/cache/compiled.php	/^    public function afterResolving($abstract, Closure $callback = null)$/;"	f
afterResolving	bootstrap/cache/compiled.php	/^    public function afterResolving($abstract, Closure $callback = null);$/;"	f
afterResolvingCallback	bootstrap/cache/compiled.php	/^    protected function afterResolvingCallback(Closure $callback)$/;"	f
afterResolvingCallbacks	bootstrap/cache/compiled.php	/^    protected $afterResolvingCallbacks = [];$/;"	v
ageFlashData	bootstrap/cache/compiled.php	/^    public function ageFlashData()$/;"	f
ajax	bootstrap/cache/compiled.php	/^    public function ajax()$/;"	f
alert	bootstrap/cache/compiled.php	/^    public function alert($message, array $context = [])$/;"	f
alert	bootstrap/cache/compiled.php	/^    public function alert($message, array $context = []);$/;"	f
alert	bootstrap/cache/compiled.php	/^    public function alert($message, array $context = array())$/;"	f
alert	bootstrap/cache/compiled.php	/^    public function alert($message, array $context = array());$/;"	f
alias	bootstrap/cache/compiled.php	/^    public function alias($abstract, $alias)$/;"	f
alias	bootstrap/cache/compiled.php	/^    public function alias($abstract, $alias);$/;"	f
alias	bootstrap/cache/compiled.php	/^    public function alias($class, $alias)$/;"	f
alias	bootstrap/cache/compiled.php	/^    public function alias($view, $alias)$/;"	f
aliases	bootstrap/cache/compiled.php	/^        $aliases = ['app' => ['Illuminate\\\\Foundation\\\\Application', 'Illuminate\\\\Contracts\\\\Container\\\\Container', 'Illuminate\\\\Contracts\\\\Foundation\\\\Application'], 'auth' => ['Illuminate\\\\Auth\\\\AuthManager', 'Illuminate\\\\Contracts\\\\Auth\\\\Factory'], 'auth.driver' => ['Illuminate\\\\Contracts\\\\Auth\\\\Guard'], 'blade.compiler' => ['Illuminate\\\\View\\\\Compilers\\\\BladeCompiler'], 'cache' => ['Illuminate\\\\Cache\\\\CacheManager', 'Illuminate\\\\Contracts\\\\Cache\\\\Factory'], 'cache.store' => ['Illuminate\\\\Cache\\\\Repository', 'Illuminate\\\\Contracts\\\\Cache\\\\Repository'], 'config' => ['Illuminate\\\\Config\\\\Repository', 'Illuminate\\\\Contracts\\\\Config\\\\Repository'], 'cookie' => ['Illuminate\\\\Cookie\\\\CookieJar', 'Illuminate\\\\Contracts\\\\Cookie\\\\Factory', 'Illuminate\\\\Contracts\\\\Cookie\\\\QueueingFactory'], 'encrypter' => ['Illuminate\\\\Encryption\\\\Encrypter', 'Illuminate\\\\Contracts\\\\Encryption\\\\Encrypter'], 'db' => ['Illuminate\\\\Database\\\\DatabaseManager'], 'db.connection' => ['Illuminate\\\\Database\\\\Connection', 'Illuminate\\\\Database\\\\ConnectionInterface'], 'events' => ['Illuminate\\\\Events\\\\Dispatcher', 'Illuminate\\\\Contracts\\\\Events\\\\Dispatcher'], 'files' => ['Illuminate\\\\Filesystem\\\\Filesystem'], 'filesystem' => ['Illuminate\\\\Filesystem\\\\FilesystemManager', 'Illuminate\\\\Contracts\\\\Filesystem\\\\Factory'], 'filesystem.disk' => ['Illuminate\\\\Contracts\\\\Filesystem\\\\Filesystem'], 'filesystem.cloud' => ['Illuminate\\\\Contracts\\\\Filesystem\\\\Cloud'], 'hash' => ['Illuminate\\\\Contracts\\\\Hashing\\\\Hasher'], 'translator' => ['Illuminate\\\\Translation\\\\Translator', 'Symfony\\\\Component\\\\Translation\\\\TranslatorInterface'], 'log' => ['Illuminate\\\\Log\\\\Writer', 'Illuminate\\\\Contracts\\\\Logging\\\\Log', 'Psr\\\\Log\\\\LoggerInterface'], 'mailer' => ['Illuminate\\\\Mail\\\\Mailer', 'Illuminate\\\\Contracts\\\\Mail\\\\Mailer', 'Illuminate\\\\Contracts\\\\Mail\\\\MailQueue'], 'auth.password' => ['Illuminate\\\\Auth\\\\Passwords\\\\PasswordBrokerManager', 'Illuminate\\\\Contracts\\\\Auth\\\\PasswordBrokerFactory'], 'auth.password.broker' => ['Illuminate\\\\Auth\\\\Passwords\\\\PasswordBroker', 'Illuminate\\\\Contracts\\\\Auth\\\\PasswordBroker'], 'queue' => ['Illuminate\\\\Queue\\\\QueueManager', 'Illuminate\\\\Contracts\\\\Queue\\\\Factory', 'Illuminate\\\\Contracts\\\\Queue\\\\Monitor'], 'queue.connection' => ['Illuminate\\\\Contracts\\\\Queue\\\\Queue'], 'queue.failer' => ['Illuminate\\\\Queue\\\\Failed\\\\FailedJobProviderInterface'], 'redirect' => ['Illuminate\\\\Routing\\\\Redirector'], 'redis' => ['Illuminate\\\\Redis\\\\Database', 'Illuminate\\\\Contracts\\\\Redis\\\\Database'], 'request' => ['Illuminate\\\\Http\\\\Request', 'Symfony\\\\Component\\\\HttpFoundation\\\\Request'], 'router' => ['Illuminate\\\\Routing\\\\Router', 'Illuminate\\\\Contracts\\\\Routing\\\\Registrar'], 'session' => ['Illuminate\\\\Session\\\\SessionManager'], 'session.store' => ['Illuminate\\\\Session\\\\Store', 'Symfony\\\\Component\\\\HttpFoundation\\\\Session\\\\SessionInterface'], 'url' => ['Illuminate\\\\Routing\\\\UrlGenerator', 'Illuminate\\\\Contracts\\\\Routing\\\\UrlGenerator'], 'validator' => ['Illuminate\\\\Validation\\\\Factory', 'Illuminate\\\\Contracts\\\\Validation\\\\Factory'], 'view' => ['Illuminate\\\\View\\\\Factory', 'Illuminate\\\\Contracts\\\\View\\\\Factory']];$/;"	v
aliases	bootstrap/cache/compiled.php	/^        $aliases = array_merge(static::$instance->getAliases(), $aliases);$/;"	v
aliases	bootstrap/cache/compiled.php	/^        $this->aliases = $aliases;$/;"	v
aliases	bootstrap/cache/compiled.php	/^        $this->aliases = [];$/;"	v
aliases	bootstrap/cache/compiled.php	/^    protected $aliases = [];$/;"	v
aliases	bootstrap/cache/compiled.php	/^    protected $aliases;$/;"	v
aliases	bootstrap/cache/compiled.php	/^    public static function getInstance(array $aliases = [])$/;"	v
aliases	config/app.php	/^    | This array of class aliases will be registered when this application$/;"	c
all	bootstrap/cache/compiled.php	/^            $all = array_merge($all, $this->transform($messages, $format, $key));$/;"	v
all	bootstrap/cache/compiled.php	/^        $all = $this->all();$/;"	v
all	bootstrap/cache/compiled.php	/^        $all = [];$/;"	v
all	bootstrap/cache/compiled.php	/^    public function all($format = null)$/;"	f
all	bootstrap/cache/compiled.php	/^    public function all($format = null);$/;"	f
all	bootstrap/cache/compiled.php	/^    public function all()$/;"	f
all	bootstrap/cache/compiled.php	/^    public function all();$/;"	f
all	bootstrap/cache/compiled.php	/^    public static function all($columns = ['*'])$/;"	f
allFiles	bootstrap/cache/compiled.php	/^    public function allFiles($directory, $hidden = false)$/;"	f
allFiles	bootstrap/cache/compiled.php	/^    public function allFiles()$/;"	f
allPreserveCase	bootstrap/cache/compiled.php	/^    public function allPreserveCase()$/;"	f
allRoutes	bootstrap/cache/compiled.php	/^    protected $allRoutes = [];$/;"	v
allowInlineLineBreaks	bootstrap/cache/compiled.php	/^            $this->allowInlineLineBreaks = true;$/;"	v
allowInlineLineBreaks	bootstrap/cache/compiled.php	/^        $this->allowInlineLineBreaks = $allow;$/;"	v
allowInlineLineBreaks	bootstrap/cache/compiled.php	/^        $this->allowInlineLineBreaks = $allowInlineLineBreaks;$/;"	v
allowInlineLineBreaks	bootstrap/cache/compiled.php	/^    protected $allowInlineLineBreaks;$/;"	v
allowInlineLineBreaks	bootstrap/cache/compiled.php	/^    public function allowInlineLineBreaks($allow = true)$/;"	f
allows	bootstrap/cache/compiled.php	/^    public function allows($ability, $arguments = [])$/;"	f
allows	bootstrap/cache/compiled.php	/^    public function allows($ability, $arguments = []);$/;"	f
alreadyInParameters	bootstrap/cache/compiled.php	/^    protected function alreadyInParameters($class, array $parameters)$/;"	f
amount	bootstrap/cache/compiled.php	/^    protected function decrement($column, $amount = 1, array $extra = [])$/;"	v
amount	bootstrap/cache/compiled.php	/^    protected function increment($column, $amount = 1, array $extra = [])$/;"	v
any	bootstrap/cache/compiled.php	/^    public function any($uri, $action = null)$/;"	f
any	bootstrap/cache/compiled.php	/^    public function any()$/;"	f
app	artisan	/^$app = require_once __DIR__.'\/bootstrap\/app.php';$/;"	v
app	bootstrap/app.php	/^$app = new Illuminate\\Foundation\\Application($/;"	v
app	bootstrap/cache/compiled.php	/^        $app = $this->app;$/;"	v
app	bootstrap/cache/compiled.php	/^        $this->app = $app;$/;"	v
app	bootstrap/cache/compiled.php	/^    protected $app;$/;"	v
app	bootstrap/cache/compiled.php	/^    protected static $app;$/;"	v
app	public/index.php	/^$app = require_once __DIR__.'\/..\/bootstrap\/app.php';$/;"	v
app	tests/TestCase.php	/^        $app = require __DIR__.'\/..\/bootstrap\/app.php';$/;"	v
append	bootstrap/cache/compiled.php	/^    public function append($attributes)$/;"	f
append	bootstrap/cache/compiled.php	/^    public function append($iterator)$/;"	f
append	bootstrap/cache/compiled.php	/^    public function append($path, $data)$/;"	f
appendArray	bootstrap/cache/compiled.php	/^    protected function appendArray(array $keys)$/;"	f
appendSection	bootstrap/cache/compiled.php	/^    public function appendSection()$/;"	f
appends	bootstrap/cache/compiled.php	/^        $this->appends = $appends;$/;"	v
appends	bootstrap/cache/compiled.php	/^        $this->appends = array_unique(array_merge($this->appends, $attributes));$/;"	v
appends	bootstrap/cache/compiled.php	/^    protected $appends = [];$/;"	v
appends	bootstrap/cache/compiled.php	/^    public function appends($key, $value = null)$/;"	f
appends	bootstrap/cache/compiled.php	/^    public function appends($key, $value = null);$/;"	f
appliedTo	app/models/Conference.php	/^    public function appliedTo()$/;"	f
args	bootstrap/cache/compiled.php	/^        $args = isset($_SERVER['argv']) ? $_SERVER['argv'] : null;$/;"	v
arguments	bootstrap/cache/compiled.php	/^            $arguments = $this->cloneArgumentsForQueueing(func_get_args());$/;"	v
arguments	bootstrap/cache/compiled.php	/^        $arguments = array_merge([$user, $ability, $result], [$arguments]);$/;"	v
arguments	bootstrap/cache/compiled.php	/^        $arguments = array_merge([$user, $ability], [$arguments]);$/;"	v
arguments	bootstrap/cache/compiled.php	/^        $arguments = is_array($arguments) ? $arguments : [$arguments];$/;"	v
arguments	bootstrap/cache/compiled.php	/^    protected function raw($ability, $arguments = [])$/;"	v
arguments	bootstrap/cache/compiled.php	/^    public function allows($ability, $arguments = [])$/;"	v
arguments	bootstrap/cache/compiled.php	/^    public function allows($ability, $arguments = []);$/;"	v
arguments	bootstrap/cache/compiled.php	/^    public function authorize($ability, $arguments = [])$/;"	v
arguments	bootstrap/cache/compiled.php	/^    public function authorizeForUser($user, $ability, $arguments = [])$/;"	v
arguments	bootstrap/cache/compiled.php	/^    public function check($ability, $arguments = [])$/;"	v
arguments	bootstrap/cache/compiled.php	/^    public function check($ability, $arguments = []);$/;"	v
arguments	bootstrap/cache/compiled.php	/^    public function denies($ability, $arguments = [])$/;"	v
arguments	bootstrap/cache/compiled.php	/^    public function denies($ability, $arguments = []);$/;"	v
array	bootstrap/cache/compiled.php	/^                    $array =& $array[$part];$/;"	v
array	bootstrap/cache/compiled.php	/^                $array = $array[$segment];$/;"	v
array	bootstrap/cache/compiled.php	/^            $array = [$key => $value] + $array;$/;"	v
array	bootstrap/cache/compiled.php	/^            $array =& $array[$key];$/;"	v
array	bootstrap/cache/compiled.php	/^            $array =& $original;$/;"	v
array	bootstrap/cache/compiled.php	/^            return $array = $value;$/;"	v
array	bootstrap/cache/compiled.php	/^        $array = $this->get($key);$/;"	v
array	bootstrap/cache/compiled.php	/^        $array = $this->get($key, []);$/;"	v
arrayKey	bootstrap/cache/compiled.php	/^        foreach ($key as $arrayKey => $arrayValue) {$/;"	v
arrayableItems	bootstrap/cache/compiled.php	/^        $arrayableItems = array_map(function ($items) {$/;"	v
as	config/mail.php	/^	| Laravel supports both SMTP and PHP's "mail" function as drivers for the$/;"	f
asDateTime	bootstrap/cache/compiled.php	/^    protected function asDateTime($value)$/;"	f
asJson	bootstrap/cache/compiled.php	/^    protected function asJson($value)$/;"	f
asObject	bootstrap/cache/compiled.php	/^    public function fromJson($value, $asObject = false)$/;"	v
asTimeStamp	bootstrap/cache/compiled.php	/^    protected function asTimeStamp($value)$/;"	f
ascii	bootstrap/cache/compiled.php	/^    public static function ascii($value)$/;"	f
assertIsJson	tests/Api/ApiTestCase.php	/^    protected function assertIsJson($data)$/;"	f
assertIsJson	tests/Api/OAuthTest.php	/^    protected function assertIsJson($data)$/;"	f
asset	bootstrap/cache/compiled.php	/^    public function asset($path, $secure = null)$/;"	f
asset	bootstrap/cache/compiled.php	/^    public function asset($path, $secure = null);$/;"	f
assetFrom	bootstrap/cache/compiled.php	/^    public function assetFrom($root, $path, $secure = null)$/;"	f
attempt	bootstrap/cache/compiled.php	/^    public function attempt(array $credentials = [], $remember = false, $login = true)$/;"	f
attempt	bootstrap/cache/compiled.php	/^    public function attempt(array $credentials = [], $remember = false, $login = true);$/;"	f
attemptBasic	bootstrap/cache/compiled.php	/^    protected function attemptBasic(Request $request, $field, $extraConditions = [])$/;"	f
attempting	bootstrap/cache/compiled.php	/^    public function attempting($callback)$/;"	f
attributes	app/ApiResources/Bio.php	/^    public function attributes()$/;"	f
attributes	app/ApiResources/Conference.php	/^    public function attributes()$/;"	f
attributes	app/ApiResources/Me.php	/^    public function attributes()$/;"	f
attributes	app/ApiResources/Talk.php	/^    public function attributes()$/;"	f
attributes	bootstrap/cache/compiled.php	/^            $attributes = $this->mergeGroup($attributes, end($this->groupStack));$/;"	v
attributes	bootstrap/cache/compiled.php	/^            $attributes = func_get_args();$/;"	v
attributes	bootstrap/cache/compiled.php	/^        $attributes = $this->attributes;$/;"	v
attributes	bootstrap/cache/compiled.php	/^        $attributes = $this->attributesToArray();$/;"	v
attributes	bootstrap/cache/compiled.php	/^        $attributes = $this->getArrayableAttributes();$/;"	v
attributes	bootstrap/cache/compiled.php	/^        $attributes = Arr::except($this->attributes, $except);$/;"	v
attributes	bootstrap/cache/compiled.php	/^        $attributes = [];$/;"	v
attributes	bootstrap/cache/compiled.php	/^        $attributes = array();$/;"	v
attributes	bootstrap/cache/compiled.php	/^        $attributes = is_array($attributes) ? $attributes : func_get_args();$/;"	v
attributes	bootstrap/cache/compiled.php	/^        $this->attributes = $attributes;$/;"	v
attributes	bootstrap/cache/compiled.php	/^        $this->attributes = [];$/;"	v
attributes	bootstrap/cache/compiled.php	/^        $this->attributes = array();$/;"	v
attributes	bootstrap/cache/compiled.php	/^        $this->attributes = array_merge($this->attributes, $this->readFromHandler());$/;"	v
attributes	bootstrap/cache/compiled.php	/^        $this->attributes = clone $this->attributes;$/;"	v
attributes	bootstrap/cache/compiled.php	/^        $this->attributes = new ParameterBag($attributes);$/;"	v
attributes	bootstrap/cache/compiled.php	/^        $this->attributes =& $attributes;$/;"	v
attributes	bootstrap/cache/compiled.php	/^    private $attributes = array();$/;"	v
attributes	bootstrap/cache/compiled.php	/^    protected $attributes = [];$/;"	v
attributes	bootstrap/cache/compiled.php	/^    protected $attributes = array();$/;"	v
attributes	bootstrap/cache/compiled.php	/^    public $attributes;$/;"	v
attributes	bootstrap/cache/compiled.php	/^    public function __construct($value, array $attributes = array())$/;"	v
attributes	bootstrap/cache/compiled.php	/^    public function __construct(array $attributes = [])$/;"	v
attributes	bootstrap/cache/compiled.php	/^    public function attributes()$/;"	f
attributes	bootstrap/cache/compiled.php	/^    public function update(array $attributes = [], array $options = [])$/;"	v
attributes	bootstrap/cache/compiled.php	/^    public static function create(array $attributes = [])$/;"	v
attributesToArray	bootstrap/cache/compiled.php	/^    public function attributesToArray()$/;"	f
auth	bootstrap/cache/compiled.php	/^    public function auth()$/;"	f
authenticateAs	tests/Api/ApiTestCase.php	/^    protected function authenticateAs($userId)$/;"	f
author	app/Http/Controllers/AuthorsController.php	/^            $author = User::findOrFail($id);$/;"	v
author	app/models/Conference.php	/^    public function author()$/;"	f
author	app/models/Talk.php	/^    public function author()$/;"	f
author	database/seeds/BiosSeeder.php	/^        $author = User::find(2);$/;"	v
author	database/seeds/BiosSeeder.php	/^        $author = User::first();$/;"	v
author	database/seeds/TalksSeeder.php	/^        $author = User::find(2);$/;"	v
author	database/seeds/TalksSeeder.php	/^        $author = User::first();$/;"	v
authorId	app/JoindIn/ConferenceImporter.php	/^        $this->authorId = $authorId ?: Auth::user()->id;$/;"	v
authorId	app/JoindIn/ConferenceImporter.php	/^    private $authorId;$/;"	v
authorizationHeader	bootstrap/cache/compiled.php	/^                $authorizationHeader = $this->parameters['HTTP_AUTHORIZATION'];$/;"	v
authorizationHeader	bootstrap/cache/compiled.php	/^                $authorizationHeader = $this->parameters['REDIRECT_HTTP_AUTHORIZATION'];$/;"	v
authorizationHeader	bootstrap/cache/compiled.php	/^            $authorizationHeader = null;$/;"	v
authorize	bootstrap/cache/compiled.php	/^    public function authorize($ability, $arguments = [])$/;"	f
authorizeForUser	bootstrap/cache/compiled.php	/^    public function authorizeForUser($user, $ability, $arguments = [])$/;"	f
authorizer	app/Http/Controllers/OAuthController.php	/^        $this->authorizer = $authorizer;$/;"	v
authorizer	app/Http/Controllers/OAuthController.php	/^    protected $authorizer;$/;"	v
authorizer	app/OAuthGuard/OAuthGuard.php	/^        $this->authorizer = $authorizer;$/;"	v
authorizer	app/OAuthGuard/OAuthGuard.php	/^    private $authorizer;$/;"	v
authorizer	tests/Api/ApiTestCase.php	/^            $authorizer = new DummyAuthorizer;$/;"	v
autoload	composer.json	/^    "autoload": {$/;"	f
autoload-dev	composer.json	/^    "autoload-dev": {$/;"	f
availableChars	app/Console/Commands/TweetImportantCFPDates.php	/^        $availableChars = 140 - 22 + 4 - strlen($message);$/;"	v
availableDrivers	bootstrap/cache/compiled.php	/^    public function availableDrivers()$/;"	f
average	bootstrap/cache/compiled.php	/^    public function average($key = null)$/;"	f
avg	bootstrap/cache/compiled.php	/^    public function avg($key = null)$/;"	f
backtrace	bootstrap/cache/compiled.php	/^                $backtrace = $backtrace ?: $throw->getTrace();$/;"	v
backtrace	bootstrap/cache/compiled.php	/^    public function handleError($type, $message, $file, $line, array $context, array $backtrace = null)$/;"	v
bagData	bootstrap/cache/compiled.php	/^    protected $bagData = [];$/;"	v
bags	bootstrap/cache/compiled.php	/^    protected $bags = [];$/;"	v
base	bootstrap/cache/compiled.php	/^        $base = Str::snake(class_basename($this));$/;"	v
basePath	bootstrap/cache/compiled.php	/^            $basePath = $baseUrl;$/;"	v
basePath	bootstrap/cache/compiled.php	/^            $basePath = dirname($baseUrl);$/;"	v
basePath	bootstrap/cache/compiled.php	/^            $basePath = str_replace('\\\\', '\/', $basePath);$/;"	v
basePath	bootstrap/cache/compiled.php	/^            $this->basePath = $this->prepareBasePath();$/;"	v
basePath	bootstrap/cache/compiled.php	/^        $this->basePath = null;$/;"	v
basePath	bootstrap/cache/compiled.php	/^        $this->basePath = rtrim($basePath, '\\\\\/');$/;"	v
basePath	bootstrap/cache/compiled.php	/^    protected $basePath;$/;"	v
basePath	bootstrap/cache/compiled.php	/^    public function basePath()$/;"	f
basePath	bootstrap/cache/compiled.php	/^    public function basePath();$/;"	f
baseUrl	bootstrap/cache/compiled.php	/^                $baseUrl = '\/' . $seg . $baseUrl;$/;"	v
baseUrl	bootstrap/cache/compiled.php	/^            $baseUrl = $this->server->get('ORIG_SCRIPT_NAME');$/;"	v
baseUrl	bootstrap/cache/compiled.php	/^            $baseUrl = $this->server->get('PHP_SELF');$/;"	v
baseUrl	bootstrap/cache/compiled.php	/^            $baseUrl = $this->server->get('SCRIPT_NAME');$/;"	v
baseUrl	bootstrap/cache/compiled.php	/^            $baseUrl = '';$/;"	v
baseUrl	bootstrap/cache/compiled.php	/^            $baseUrl = substr($requestUri, 0, $pos + strlen($baseUrl));$/;"	v
baseUrl	bootstrap/cache/compiled.php	/^            $this->baseUrl = $this->prepareBaseUrl();$/;"	v
baseUrl	bootstrap/cache/compiled.php	/^        $baseUrl = $this->getBaseUrl();$/;"	v
baseUrl	bootstrap/cache/compiled.php	/^        $this->baseUrl = null;$/;"	v
baseUrl	bootstrap/cache/compiled.php	/^    protected $baseUrl;$/;"	v
baseUrl	tests/TestCase.php	/^    protected $baseUrl = 'http:\/\/localhost';$/;"	v
basename	bootstrap/cache/compiled.php	/^        $basename = basename($baseUrl);$/;"	v
basename	bootstrap/cache/compiled.php	/^    public function basename($path)$/;"	f
basic	bootstrap/cache/compiled.php	/^    public function basic($field = 'email', $extraConditions = [])$/;"	f
bearerToken	bootstrap/cache/compiled.php	/^    public function bearerToken()$/;"	f
before	bootstrap/cache/compiled.php	/^    public function before(callable $callback)$/;"	f
before	bootstrap/cache/compiled.php	/^    public function before(callable $callback);$/;"	f
beforeArguments	bootstrap/cache/compiled.php	/^                $beforeArguments = array_merge([$user, $ability], $arguments);$/;"	v
beforeBootstrapping	bootstrap/cache/compiled.php	/^    public function beforeBootstrapping($bootstrapper, Closure $callback)$/;"	f
beforeCallbacks	bootstrap/cache/compiled.php	/^        $this->beforeCallbacks = $beforeCallbacks;$/;"	v
beforeCallbacks	bootstrap/cache/compiled.php	/^    protected $beforeCallbacks = [];$/;"	v
belongsTo	bootstrap/cache/compiled.php	/^    public function belongsTo($related, $foreignKey = null, $otherKey = null, $relation = null)$/;"	f
belongsToMany	bootstrap/cache/compiled.php	/^    public function belongsToMany($related, $table = null, $foreignKey = null, $otherKey = null, $relation = null)$/;"	f
bind	bootstrap/cache/compiled.php	/^    public function bind($abstract, $concrete = null, $shared = false)$/;"	f
bind	bootstrap/cache/compiled.php	/^    public function bind($abstract, $concrete = null, $shared = false);$/;"	f
bind	bootstrap/cache/compiled.php	/^    public function bind($key, $binder)$/;"	f
bind	bootstrap/cache/compiled.php	/^    public function bind(Request $request)$/;"	f
bindHostParameters	bootstrap/cache/compiled.php	/^    protected function bindHostParameters(Request $request, $parameters)$/;"	f
bindIf	bootstrap/cache/compiled.php	/^    public function bindIf($abstract, $concrete = null, $shared = false)$/;"	f
bindIf	bootstrap/cache/compiled.php	/^    public function bindIf($abstract, $concrete = null, $shared = false);$/;"	f
bindParameters	bootstrap/cache/compiled.php	/^    public function bindParameters(Request $request)$/;"	f
bindPathParameters	bootstrap/cache/compiled.php	/^    protected function bindPathParameters(Request $request)$/;"	f
bindPathsInContainer	bootstrap/cache/compiled.php	/^    protected function bindPathsInContainer()$/;"	f
binder	bootstrap/cache/compiled.php	/^            $binder = $this->createClassBinding($binder);$/;"	v
binders	bootstrap/cache/compiled.php	/^    protected $binders = [];$/;"	v
bindings	bootstrap/cache/compiled.php	/^        $this->bindings = [];$/;"	v
bindings	bootstrap/cache/compiled.php	/^    protected $bindings = [];$/;"	v
bindings	bootstrap/cache/compiled.php	/^    public static function hydrateRaw($query, $bindings = [], $connection = null)$/;"	v
bio	app/ApiResources/Bio.php	/^        $this->bio = $bio;$/;"	v
bio	app/ApiResources/Bio.php	/^    private $bio;$/;"	v
bio	app/Http/Controllers/Api/BiosController.php	/^            $bio = OAuthGuard::user()->bios()->findOrFail($id);$/;"	v
bio	app/Http/Controllers/Api/BiosController.php	/^        $bio = new Bio($bio);$/;"	v
bio	app/Http/Controllers/BiosController.php	/^            $bio = $form->complete();$/;"	v
bio	app/Http/Controllers/BiosController.php	/^        $bio = Auth::user()->bios()->findOrFail($id);$/;"	v
bio	app/Http/Controllers/PublicProfileController.php	/^        $bio = $user->bios()->public()->findOrFail($bio_id);$/;"	v
bio	tests/AccountTest.php	/^        $bio = Factory::build('bio');$/;"	v
bio	tests/PublicSpeakerProfileTest.php	/^        $bio = Factory::build('bio');$/;"	v
bioId	tests/Api/BioApiTest.php	/^        $bioId = Bio::first()->id;$/;"	v
bioId	tests/Api/BioApiTest.php	/^        $bioId = Bio::where('user_id', 2)->first()->id;$/;"	v
bios	app/Http/Controllers/BiosController.php	/^        $bios = Auth::user()->bios;$/;"	v
bios	app/Http/Controllers/PublicProfileController.php	/^        $bios = $user->bios()->public()->get();$/;"	v
bios	app/User.php	/^    public function bios()$/;"	f
bits	bootstrap/cache/compiled.php	/^        $bits = preg_split('\/\\\\s*(?:;*("[^"]+");*|;*(\\'[^\\']+\\');*|;+)\\\\s*\/', $itemValue, 0, PREG_SPLIT_NO_EMPTY | PREG_SPLIT_DELIM_CAPTURE);$/;"	v
bold_style	app/Http/Controllers/TalksController.php	/^        $bold_style = 'style="font-weight: bold;"';$/;"	v
boolOrArray	bootstrap/cache/compiled.php	/^        $boolOrArray = is_bool($value) || is_array($value);$/;"	v
boot	app/Providers/AppServiceProvider.php	/^    public function boot()$/;"	f
boot	app/Providers/BusServiceProvider.php	/^    public function boot(Dispatcher $dispatcher)$/;"	f
boot	app/Providers/CaptchaServiceProvider.php	/^    public function boot()$/;"	f
boot	app/Providers/RouteServiceProvider.php	/^    public function boot(Router $router)$/;"	f
boot	app/User.php	/^    protected static function boot()$/;"	f
boot	bootstrap/cache/compiled.php	/^    protected static function boot()$/;"	f
boot	bootstrap/cache/compiled.php	/^    public function boot()$/;"	f
boot	bootstrap/cache/compiled.php	/^    public function boot();$/;"	f
boot	bootstrap/cache/compiled.php	/^    public function boot(Dispatcher $dispatcher)$/;"	f
boot	bootstrap/cache/compiled.php	/^    public function boot(DispatcherContract $events)$/;"	f
boot	bootstrap/cache/compiled.php	/^    public function boot(Router $router)$/;"	f
bootIfNotBooted	bootstrap/cache/compiled.php	/^    protected function bootIfNotBooted()$/;"	f
bootProvider	bootstrap/cache/compiled.php	/^    protected function bootProvider(ServiceProvider $provider)$/;"	f
bootTraits	bootstrap/cache/compiled.php	/^    protected static function bootTraits()$/;"	f
booted	bootstrap/cache/compiled.php	/^        $this->booted = true;$/;"	v
booted	bootstrap/cache/compiled.php	/^    protected $booted = false;$/;"	v
booted	bootstrap/cache/compiled.php	/^    protected static $booted = [];$/;"	v
booted	bootstrap/cache/compiled.php	/^    public function booted($callback)$/;"	f
booted	bootstrap/cache/compiled.php	/^    public function booted($callback);$/;"	f
bootedCallbacks	bootstrap/cache/compiled.php	/^    protected $bootedCallbacks = [];$/;"	v
booting	bootstrap/cache/compiled.php	/^    public function booting($callback)$/;"	f
booting	bootstrap/cache/compiled.php	/^    public function booting($callback);$/;"	f
bootingCallbacks	bootstrap/cache/compiled.php	/^    protected $bootingCallbacks = [];$/;"	v
bootstrap	bootstrap/cache/compiled.php	/^    public function bootstrap()$/;"	f
bootstrap	bootstrap/cache/compiled.php	/^    public function bootstrap();$/;"	f
bootstrap	bootstrap/cache/compiled.php	/^    public function bootstrap(Application $app)$/;"	f
bootstrapPath	bootstrap/cache/compiled.php	/^    public function bootstrapPath()$/;"	f
bootstrapWith	bootstrap/cache/compiled.php	/^    public function bootstrapWith(array $bootstrappers)$/;"	f
bootstrappers	bootstrap/cache/compiled.php	/^    protected $bootstrappers = ['Illuminate\\\\Foundation\\\\Bootstrap\\\\DetectEnvironment', 'Illuminate\\\\Foundation\\\\Bootstrap\\\\LoadConfiguration', 'Illuminate\\\\Foundation\\\\Bootstrap\\\\ConfigureLogging', 'Illuminate\\\\Foundation\\\\Bootstrap\\\\HandleExceptions', 'Illuminate\\\\Foundation\\\\Bootstrap\\\\RegisterFacades', 'Illuminate\\\\Foundation\\\\Bootstrap\\\\RegisterProviders', 'Illuminate\\\\Foundation\\\\Bootstrap\\\\BootProviders'];$/;"	v
bootstrappers	bootstrap/cache/compiled.php	/^    protected function bootstrappers()$/;"	f
bootstrappingLogger	bootstrap/cache/compiled.php	/^            $this->bootstrappingLogger = $bootstrappingLogger;$/;"	v
bootstrappingLogger	bootstrap/cache/compiled.php	/^    private $bootstrappingLogger;$/;"	v
bootstrappingLogger	bootstrap/cache/compiled.php	/^    public function __construct(BufferingLogger $bootstrappingLogger = null)$/;"	v
bound	bootstrap/cache/compiled.php	/^        $bound = $this->bound($abstract);$/;"	v
bound	bootstrap/cache/compiled.php	/^    public function bound($abstract)$/;"	f
bound	bootstrap/cache/compiled.php	/^    public function bound($abstract);$/;"	f
broadcastEvent	bootstrap/cache/compiled.php	/^    protected function broadcastEvent($event)$/;"	f
broker	bootstrap/cache/compiled.php	/^        $broker = $this->getBroker();$/;"	v
bubble	bootstrap/cache/compiled.php	/^        $this->bubble = $bubble;$/;"	v
bubble	bootstrap/cache/compiled.php	/^    protected $bubble = true;$/;"	v
bubble	bootstrap/cache/compiled.php	/^    public function __construct($level = Logger::DEBUG, $bubble = true)$/;"	v
buffer	bootstrap/cache/compiled.php	/^                        $buffer = $cleanBuffer;$/;"	v
bugsnag/bugsnag-laravel	composer.json	/^        "bugsnag\/bugsnag-laravel": "1.*",$/;"	f
build	bootstrap/cache/compiled.php	/^    public function build($concrete, array $parameters = [])$/;"	f
build	bootstrap/cache/compiled.php	/^    public static function build($array, callable $callback)$/;"	f
buildAbilityCallback	bootstrap/cache/compiled.php	/^    protected function buildAbilityCallback($callback)$/;"	f
buildClassEventCallback	bootstrap/cache/compiled.php	/^    protected function buildClassEventCallback($class, $prefix)$/;"	f
buildFailedValidationResponse	bootstrap/cache/compiled.php	/^    protected function buildFailedValidationResponse(Request $request, array $errors)$/;"	f
buildFragment	bootstrap/cache/compiled.php	/^    protected function buildFragment()$/;"	f
buildSession	bootstrap/cache/compiled.php	/^    protected function buildSession($handler)$/;"	f
buildStack	bootstrap/cache/compiled.php	/^    protected $buildStack = [];$/;"	v
builder	bootstrap/cache/compiled.php	/^        $builder = $this->newEloquentBuilder($this->newBaseQueryBuilder());$/;"	v
builder	bootstrap/cache/compiled.php	/^        $builder = $this->newQuery();$/;"	v
builder	bootstrap/cache/compiled.php	/^        $builder = $this->newQueryWithoutScopes();$/;"	v
bytes	bootstrap/cache/compiled.php	/^            $bytes = random_bytes($size);$/;"	v
bytes	bootstrap/cache/compiled.php	/^        $bytes = random_bytes(16);$/;"	v
cache	bootstrap/cache/compiled.php	/^            $cache = $app['config']['view.compiled'];$/;"	v
cacheControl	bootstrap/cache/compiled.php	/^            $this->cacheControl = $this->parseCacheControl($values[0]);$/;"	v
cacheControl	bootstrap/cache/compiled.php	/^            $this->cacheControl = array();$/;"	v
cacheControl	bootstrap/cache/compiled.php	/^        $cacheControl = array();$/;"	v
cacheControl	bootstrap/cache/compiled.php	/^    protected $cacheControl = array();$/;"	v
cacheMutatedAttributes	bootstrap/cache/compiled.php	/^    public static function cacheMutatedAttributes($class)$/;"	f
cachePath	bootstrap/cache/compiled.php	/^        $this->cachePath = $cachePath;$/;"	v
cachePath	bootstrap/cache/compiled.php	/^    protected $cachePath;$/;"	v
cachedRoot	bootstrap/cache/compiled.php	/^                $this->cachedRoot = $this->forcedRoot ?: $this->request->root();$/;"	v
cachedRoot	bootstrap/cache/compiled.php	/^        $this->cachedRoot = null;$/;"	v
cachedRoot	bootstrap/cache/compiled.php	/^    protected $cachedRoot;$/;"	v
cachedSchema	bootstrap/cache/compiled.php	/^                $this->cachedSchema = $this->forceSchema ?: $this->request->getScheme() . ':\/\/';$/;"	v
cachedSchema	bootstrap/cache/compiled.php	/^        $this->cachedSchema = null;$/;"	v
cachedSchema	bootstrap/cache/compiled.php	/^    protected $cachedSchema;$/;"	v
calcMac	bootstrap/cache/compiled.php	/^        $calcMac = hash_hmac('sha256', $this->hash($payload['iv'], $payload['value']), $bytes, true);$/;"	v
call	bootstrap/cache/compiled.php	/^    protected function call($instance, $route, $method)$/;"	f
call	bootstrap/cache/compiled.php	/^    public function call($callback, array $parameters = [], $defaultMethod = null)$/;"	f
call	bootstrap/cache/compiled.php	/^    public function call($callback, array $parameters = [], $defaultMethod = null);$/;"	f
callAction	bootstrap/cache/compiled.php	/^    public function callAction($method, $parameters)$/;"	f
callAfterCallbacks	bootstrap/cache/compiled.php	/^    protected function callAfterCallbacks($user, $ability, array $arguments, $result)$/;"	f
callAuthCallback	bootstrap/cache/compiled.php	/^    protected function callAuthCallback($user, $ability, array $arguments)$/;"	f
callBeforeCallbacks	bootstrap/cache/compiled.php	/^    protected function callBeforeCallbacks($user, $ability, array $arguments)$/;"	f
callClass	bootstrap/cache/compiled.php	/^    protected function callClass($target, array $parameters = [], $defaultMethod = null)$/;"	f
callComposer	bootstrap/cache/compiled.php	/^    public function callComposer(View $view)$/;"	f
callCreator	bootstrap/cache/compiled.php	/^    public function callCreator(View $view)$/;"	f
callCustomCreator	bootstrap/cache/compiled.php	/^    protected function callCustomCreator($driver)$/;"	f
callCustomCreator	bootstrap/cache/compiled.php	/^    protected function callCustomCreator($name, array $config)$/;"	f
callQueueMethodOnHandler	bootstrap/cache/compiled.php	/^    protected function callQueueMethodOnHandler($class, $method, $arguments)$/;"	f
callWithDependencies	bootstrap/cache/compiled.php	/^    protected function callWithDependencies($instance, $method)$/;"	f
callWithinStack	bootstrap/cache/compiled.php	/^    protected function callWithinStack($instance, $route, $request, $method)$/;"	f
callable	bootstrap/cache/compiled.php	/^            $callable = [$this->container->make($class), $method];$/;"	v
callable	bootstrap/cache/compiled.php	/^            $callable = [$this->container->make($segments[0]), $method];$/;"	v
callback	bootstrap/cache/compiled.php	/^            $callback = explode('::', $callback);$/;"	v
callback	bootstrap/cache/compiled.php	/^        $callback = $this->buildClassEventCallback($class, $prefix);$/;"	v
callback	bootstrap/cache/compiled.php	/^        $callback = $this->resolveAuthCallback($user, $ability, $arguments);$/;"	v
callback	bootstrap/cache/compiled.php	/^        $callback = $this->valueRetriever($callback);$/;"	v
callback	bootstrap/cache/compiled.php	/^        $callback = function ($match) {$/;"	v
callback	bootstrap/cache/compiled.php	/^        $callback = function ($matches) {$/;"	v
callback	bootstrap/cache/compiled.php	/^        $callback = function () use($user) {$/;"	v
callback	bootstrap/cache/compiled.php	/^        foreach ($composers as $callback => $views) {$/;"	v
callback	bootstrap/cache/compiled.php	/^        if ($abstract instanceof Closure && $callback === null) {$/;"	v
callback	bootstrap/cache/compiled.php	/^    public function afterResolving($abstract, Closure $callback = null)$/;"	v
callback	bootstrap/cache/compiled.php	/^    public function afterResolving($abstract, Closure $callback = null);$/;"	v
callback	bootstrap/cache/compiled.php	/^    public function filter(callable $callback = null)$/;"	v
callback	bootstrap/cache/compiled.php	/^    public function first(callable $callback = null, $default = null)$/;"	v
callback	bootstrap/cache/compiled.php	/^    public function last(callable $callback = null, $default = null)$/;"	v
callback	bootstrap/cache/compiled.php	/^    public function model($key, $class, Closure $callback = null)$/;"	v
callback	bootstrap/cache/compiled.php	/^    public function render(callable $callback = null)$/;"	v
callback	bootstrap/cache/compiled.php	/^    public function resolving($abstract, Closure $callback = null)$/;"	v
callback	bootstrap/cache/compiled.php	/^    public function resolving($abstract, Closure $callback = null);$/;"	v
callback	bootstrap/cache/compiled.php	/^    public function sort(callable $callback = null)$/;"	v
callback	bootstrap/cache/compiled.php	/^    public static function first($array, callable $callback = null, $default = null)$/;"	v
callback	bootstrap/cache/compiled.php	/^    public static function last($array, callable $callback = null, $default = null)$/;"	v
caller	bootstrap/cache/compiled.php	/^            $caller = $trace['function'];$/;"	v
caller	bootstrap/cache/compiled.php	/^        $caller = $this->getBelongsToManyCaller();$/;"	v
caller	bootstrap/cache/compiled.php	/^        $caller = Arr::first(debug_backtrace(DEBUG_BACKTRACE_IGNORE_ARGS), function ($key, $trace) use($self) {$/;"	v
camel	bootstrap/cache/compiled.php	/^    public static function camel($value)$/;"	f
camelCache	bootstrap/cache/compiled.php	/^    protected static $camelCache = [];$/;"	v
canonicalMimeType	bootstrap/cache/compiled.php	/^            $canonicalMimeType = substr($mimeType, 0, $pos);$/;"	v
canonicalMimeType	bootstrap/cache/compiled.php	/^        $canonicalMimeType = null;$/;"	v
captcha	app/Providers/CaptchaServiceProvider.php	/^            $captcha = new Captcha;$/;"	v
captchaResponse	app/Http/Controllers/PublicProfileController.php	/^        $captchaResponse = $captcha->check();$/;"	v
capture	bootstrap/cache/compiled.php	/^    public static function capture()$/;"	f
car	bootstrap/cache/compiled.php	/^            $car = $glob[$i];$/;"	v
carbonFromIso	app/JoindIn/ConferenceImporter.php	/^    private function carbonFromIso($dateFromApi)$/;"	f
castAttribute	bootstrap/cache/compiled.php	/^    protected function castAttribute($key, $value)$/;"	f
casts	app/models/Talk.php	/^    protected $casts = [$/;"	v
casts	bootstrap/cache/compiled.php	/^    protected $casts = [];$/;"	v
caughtBuffer	bootstrap/cache/compiled.php	/^            $this->caughtBuffer = $buffer;$/;"	v
caughtBuffer	bootstrap/cache/compiled.php	/^        $this->caughtBuffer = null;$/;"	v
caughtBuffer	bootstrap/cache/compiled.php	/^    private $caughtBuffer;$/;"	v
caughtLength	bootstrap/cache/compiled.php	/^            $caughtLength = ob_get_length();$/;"	v
caughtLength	bootstrap/cache/compiled.php	/^            $this->caughtLength = $caughtLength;$/;"	v
caughtLength	bootstrap/cache/compiled.php	/^        $caughtLength = $this->caughtLength = 0;$/;"	v
caughtLength	bootstrap/cache/compiled.php	/^    private $caughtLength;$/;"	v
cfpClosesTomorrowMessage	app/Console/Commands/TweetImportantCFPDates.php	/^    private function cfpClosesTomorrowMessage($conference)$/;"	f
cfpEndsAtDisplay	app/models/Conference.php	/^    public function cfpEndsAtDisplay()$/;"	f
cfpEndsAtSet	app/models/Conference.php	/^    public function cfpEndsAtSet()$/;"	f
cfpIsOpen	app/models/Conference.php	/^    public function cfpIsOpen()$/;"	f
cfpOpensTodayMessage	app/Console/Commands/TweetImportantCFPDates.php	/^    private function cfpOpensTodayMessage($conference)$/;"	f
cfpStartsAtDisplay	app/models/Conference.php	/^    public function cfpStartsAtDisplay()$/;"	f
cfpStartsAtSet	app/models/Conference.php	/^    public function cfpStartsAtSet()$/;"	f
cfp_starts_at	database/seeds/ConferencesSeeder.php	/^            $cfp_starts_at = $faker->dateTimeBetween('now', $starts_at);$/;"	v
cfps_closing_tomorrow_should_be_tweeted	tests/Console/Commands/TweetImportantCFPDatesTest.php	/^    public function cfps_closing_tomorrow_should_be_tweeted()$/;"	f
cfps_not_opening_today_nor_closing_tomorrow_should_not_be_tweeted	tests/Console/Commands/TweetImportantCFPDatesTest.php	/^    public function cfps_not_opening_today_nor_closing_tomorrow_should_not_be_tweeted()$/;"	f
cfps_opening_today_should_be_tweeted	tests/Console/Commands/TweetImportantCFPDatesTest.php	/^    public function cfps_opening_today_should_be_tweeted()$/;"	f
cfps_that_open_and_close_same_day_should_not_be_tweeted	tests/Console/Commands/TweetImportantCFPDatesTest.php	/^    public function cfps_that_open_and_close_same_day_should_not_be_tweeted()$/;"	f
charsArray	bootstrap/cache/compiled.php	/^        return $charsArray = ['0' => ['°', '₀', '۰'], '1' => ['¹', '₁', '۱'], '2' => ['²', '₂', '۲'], '3' => ['³', '₃', '۳'], '4' => ['⁴', '₄', '۴', '٤'], '5' => ['⁵', '₅', '۵', '٥'], '6' => ['⁶', '₆', '۶', '٦'], '7' => ['⁷', '₇', '۷'], '8' => ['⁸', '₈', '۸'], '9' => ['⁹', '₉', '۹'], 'a' => ['à', 'á', 'ả', 'ã', 'ạ', 'ă', 'ắ', 'ằ', 'ẳ', 'ẵ', 'ặ', 'â', 'ấ', 'ầ', 'ẩ', 'ẫ', 'ậ', 'ā', 'ą', 'å', 'α', 'ά', 'ἀ', 'ἁ', 'ἂ', 'ἃ', 'ἄ', 'ἅ', 'ἆ', 'ἇ', 'ᾀ', 'ᾁ', 'ᾂ', 'ᾃ', 'ᾄ', 'ᾅ', 'ᾆ', 'ᾇ', 'ὰ', 'ά', 'ᾰ', 'ᾱ', 'ᾲ', 'ᾳ', 'ᾴ', 'ᾶ', 'ᾷ', 'а', 'أ', 'အ', 'ာ', 'ါ', 'ǻ', 'ǎ', 'ª', 'ა', 'अ', 'ا'], 'b' => ['б', 'β', 'Ъ', 'Ь', 'ب', 'ဗ', 'ბ'], 'c' => ['ç', 'ć', 'č', 'ĉ', 'ċ'], 'd' => ['ď', 'ð', 'đ', 'ƌ', 'ȡ', 'ɖ', 'ɗ', 'ᵭ', 'ᶁ', 'ᶑ', 'д', 'δ', 'د', 'ض', 'ဍ', 'ဒ', 'დ'], 'e' => ['é', 'è', 'ẻ', 'ẽ', 'ẹ', 'ê', 'ế', 'ề', 'ể', 'ễ', 'ệ', 'ë', 'ē', 'ę', 'ě', 'ĕ', 'ė', 'ε', 'έ', 'ἐ', 'ἑ', 'ἒ', 'ἓ', 'ἔ', 'ἕ', 'ὲ', 'έ', 'е', 'ё', 'э', 'є', 'ə', 'ဧ', 'ေ', 'ဲ', 'ე', 'ए', 'إ', 'ئ'], 'f' => ['ф', 'φ', 'ف', 'ƒ', 'ფ'], 'g' => ['ĝ', 'ğ', 'ġ', 'ģ', 'г', 'ґ', 'γ', 'ဂ', 'გ', 'گ'], 'h' => ['ĥ', 'ħ', 'η', 'ή', 'ح', 'ه', 'ဟ', 'ှ', 'ჰ'], 'i' => ['í', 'ì', 'ỉ', 'ĩ', 'ị', 'î', 'ï', 'ī', 'ĭ', 'į', 'ı', 'ι', 'ί', 'ϊ', 'ΐ', 'ἰ', 'ἱ', 'ἲ', 'ἳ', 'ἴ', 'ἵ', 'ἶ', 'ἷ', 'ὶ', 'ί', 'ῐ', 'ῑ', 'ῒ', 'ΐ', 'ῖ', 'ῗ', 'і', 'ї', 'и', 'ဣ', 'ိ', 'ီ', 'ည်', 'ǐ', 'ი', 'इ'], 'j' => ['ĵ', 'ј', 'Ј', 'ჯ', 'ج'], 'k' => ['ķ', 'ĸ', 'к', 'κ', 'Ķ', 'ق', 'ك', 'က', 'კ', 'ქ', 'ک'], 'l' => ['ł', 'ľ', 'ĺ', 'ļ', 'ŀ', 'л', 'λ', 'ل', 'လ', 'ლ'], 'm' => ['м', 'μ', 'م', 'မ', 'მ'], 'n' => ['ñ', 'ń', 'ň', 'ņ', 'ŉ', 'ŋ', 'ν', 'н', 'ن', 'န', 'ნ'], 'o' => ['ó', 'ò', 'ỏ', 'õ', 'ọ', 'ô', 'ố', 'ồ', 'ổ', 'ỗ', 'ộ', 'ơ', 'ớ', 'ờ', 'ở', 'ỡ', 'ợ', 'ø', 'ō', 'ő', 'ŏ', 'ο', 'ὀ', 'ὁ', 'ὂ', 'ὃ', 'ὄ', 'ὅ', 'ὸ', 'ό', 'о', 'و', 'θ', 'ို', 'ǒ', 'ǿ', 'º', 'ო', 'ओ'], 'p' => ['п', 'π', 'ပ', 'პ', 'پ'], 'q' => ['ყ'], 'r' => ['ŕ', 'ř', 'ŗ', 'р', 'ρ', 'ر', 'რ'], 's' => ['ś', 'š', 'ş', 'с', 'σ', 'ș', 'ς', 'س', 'ص', 'စ', 'ſ', 'ს'], 't' => ['ť', 'ţ', 'т', 'τ', 'ț', 'ت', 'ط', 'ဋ', 'တ', 'ŧ', 'თ', 'ტ'], 'u' => ['ú', 'ù', 'ủ', 'ũ', 'ụ', 'ư', 'ứ', 'ừ', 'ử', 'ữ', 'ự', 'û', 'ū', 'ů', 'ű', 'ŭ', 'ų', 'µ', 'у', 'ဉ', 'ု', 'ူ', 'ǔ', 'ǖ', 'ǘ', 'ǚ', 'ǜ', 'უ', 'उ'], 'v' => ['в', 'ვ', 'ϐ'], 'w' => ['ŵ', 'ω', 'ώ', 'ဝ', 'ွ'], 'x' => ['χ', 'ξ'], 'y' => ['ý', 'ỳ', 'ỷ', 'ỹ', 'ỵ', 'ÿ', 'ŷ', 'й', 'ы', 'υ', 'ϋ', 'ύ', 'ΰ', 'ي', 'ယ'], 'z' => ['ź', 'ž', 'ż', 'з', 'ζ', 'ز', 'ဇ', 'ზ'], 'aa' => ['ع', 'आ', 'آ'], 'ae' => ['ä', 'æ', 'ǽ'], 'ai' => ['ऐ'], 'at' => ['@'], 'ch' => ['ч', 'ჩ', 'ჭ', 'چ'], 'dj' => ['ђ', 'đ'], 'dz' => ['џ', 'ძ'], 'ei' => ['ऍ'], 'gh' => ['غ', 'ღ'], 'ii' => ['ई'], 'ij' => ['ĳ'], 'kh' => ['х', 'خ', 'ხ'], 'lj' => ['љ'], 'nj' => ['њ'], 'oe' => ['ö', 'œ', 'ؤ'], 'oi' => ['ऑ'], 'oii' => ['ऒ'], 'ps' => ['ψ'], 'sh' => ['ш', 'შ', 'ش'], 'shch' => ['щ'], 'ss' => ['ß'], 'sx' => ['ŝ'], 'th' => ['þ', 'ϑ', 'ث', 'ذ', 'ظ'], 'ts' => ['ц', 'ც', 'წ'], 'ue' => ['ü'], 'uu' => ['ऊ'], 'ya' => ['я'], 'yu' => ['ю'], 'zh' => ['ж', 'ჟ', 'ژ'], '(c)' => ['©'], 'A' => ['Á', 'À', 'Ả', 'Ã', 'Ạ', 'Ă', 'Ắ', 'Ằ', 'Ẳ', 'Ẵ', 'Ặ', 'Â', 'Ấ', 'Ầ', 'Ẩ', 'Ẫ', 'Ậ', 'Å', 'Ā', 'Ą', 'Α', 'Ά', 'Ἀ', 'Ἁ', 'Ἂ', 'Ἃ', 'Ἄ', 'Ἅ', 'Ἆ', 'Ἇ', 'ᾈ', 'ᾉ', 'ᾊ', 'ᾋ', 'ᾌ', 'ᾍ', 'ᾎ', 'ᾏ', 'Ᾰ', 'Ᾱ', 'Ὰ', 'Ά', 'ᾼ', 'А', 'Ǻ', 'Ǎ'], 'B' => ['Б', 'Β', 'ब'], 'C' => ['Ç', 'Ć', 'Č', 'Ĉ', 'Ċ'], 'D' => ['Ď', 'Ð', 'Đ', 'Ɖ', 'Ɗ', 'Ƌ', 'ᴅ', 'ᴆ', 'Д', 'Δ'], 'E' => ['É', 'È', 'Ẻ', 'Ẽ', 'Ẹ', 'Ê', 'Ế', 'Ề', 'Ể', 'Ễ', 'Ệ', 'Ë', 'Ē', 'Ę', 'Ě', 'Ĕ', 'Ė', 'Ε', 'Έ', 'Ἐ', 'Ἑ', 'Ἒ', 'Ἓ', 'Ἔ', 'Ἕ', 'Έ', 'Ὲ', 'Е', 'Ё', 'Э', 'Є', 'Ə'], 'F' => ['Ф', 'Φ'], 'G' => ['Ğ', 'Ġ', 'Ģ', 'Г', 'Ґ', 'Γ'], 'H' => ['Η', 'Ή', 'Ħ'], 'I' => ['Í', 'Ì', 'Ỉ', 'Ĩ', 'Ị', 'Î', 'Ï', 'Ī', 'Ĭ', 'Į', 'İ', 'Ι', 'Ί', 'Ϊ', 'Ἰ', 'Ἱ', 'Ἳ', 'Ἴ', 'Ἵ', 'Ἶ', 'Ἷ', 'Ῐ', 'Ῑ', 'Ὶ', 'Ί', 'И', 'І', 'Ї', 'Ǐ', 'ϒ'], 'K' => ['К', 'Κ'], 'L' => ['Ĺ', 'Ł', 'Л', 'Λ', 'Ļ', 'Ľ', 'Ŀ', 'ल'], 'M' => ['М', 'Μ'], 'N' => ['Ń', 'Ñ', 'Ň', 'Ņ', 'Ŋ', 'Н', 'Ν'], 'O' => ['Ó', 'Ò', 'Ỏ', 'Õ', 'Ọ', 'Ô', 'Ố', 'Ồ', 'Ổ', 'Ỗ', 'Ộ', 'Ơ', 'Ớ', 'Ờ', 'Ở', 'Ỡ', 'Ợ', 'Ø', 'Ō', 'Ő', 'Ŏ', 'Ο', 'Ό', 'Ὀ', 'Ὁ', 'Ὂ', 'Ὃ', 'Ὄ', 'Ὅ', 'Ὸ', 'Ό', 'О', 'Θ', 'Ө', 'Ǒ', 'Ǿ'], 'P' => ['П', 'Π'], 'R' => ['Ř', 'Ŕ', 'Р', 'Ρ', 'Ŗ'], 'S' => ['Ş', 'Ŝ', 'Ș', 'Š', 'Ś', 'С', 'Σ'], 'T' => ['Ť', 'Ţ', 'Ŧ', 'Ț', 'Т', 'Τ'], 'U' => ['Ú', 'Ù', 'Ủ', 'Ũ', 'Ụ', 'Ư', 'Ứ', 'Ừ', 'Ử', 'Ữ', 'Ự', 'Û', 'Ū', 'Ů', 'Ű', 'Ŭ', 'Ų', 'У', 'Ǔ', 'Ǖ', 'Ǘ', 'Ǚ', 'Ǜ'], 'V' => ['В'], 'W' => ['Ω', 'Ώ', 'Ŵ'], 'X' => ['Χ', 'Ξ'], 'Y' => ['Ý', 'Ỳ', 'Ỷ', 'Ỹ', 'Ỵ', 'Ÿ', 'Ῠ', 'Ῡ', 'Ὺ', 'Ύ', 'Ы', 'Й', 'Υ', 'Ϋ', 'Ŷ'], 'Z' => ['Ź', 'Ž', 'Ż', 'З', 'Ζ'], 'AE' => ['Ä', 'Æ', 'Ǽ'], 'CH' => ['Ч'], 'DJ' => ['Ђ'], 'DZ' => ['Џ'], 'GX' => ['Ĝ'], 'HX' => ['Ĥ'], 'IJ' => ['Ĳ'], 'JX' => ['Ĵ'], 'KH' => ['Х'], 'LJ' => ['Љ'], 'NJ' => ['Њ'], 'OE' => ['Ö', 'Œ'], 'PS' => ['Ψ'], 'SH' => ['Ш'], 'SHCH' => ['Щ'], 'SS' => ['ẞ'], 'TH' => ['Þ'], 'TS' => ['Ц'], 'UE' => ['Ü'], 'YA' => ['Я'], 'YU' => ['Ю'], 'ZH' => ['Ж'], ' ' => [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "　"]];$/;"	v
charsArray	bootstrap/cache/compiled.php	/^        static $charsArray;$/;"	v
charsArray	bootstrap/cache/compiled.php	/^    protected static function charsArray()$/;"	f
charset	bootstrap/cache/compiled.php	/^            $charset = $this->charset ?: 'UTF-8';$/;"	v
charset	bootstrap/cache/compiled.php	/^        $this->charset = $charset ?: ini_get('default_charset') ?: 'UTF-8';$/;"	v
charset	bootstrap/cache/compiled.php	/^        $this->charset = $charset;$/;"	v
charset	bootstrap/cache/compiled.php	/^    private $charset;$/;"	v
charset	bootstrap/cache/compiled.php	/^    protected $charset;$/;"	v
charset	bootstrap/cache/compiled.php	/^    public function __construct($debug = true, $charset = null, $fileLinkFormat = null)$/;"	v
charset	bootstrap/cache/compiled.php	/^    public static function register($debug = true, $charset = null, $fileLinkFormat = null)$/;"	v
charsets	bootstrap/cache/compiled.php	/^        $this->charsets = null;$/;"	v
charsets	bootstrap/cache/compiled.php	/^        return $this->charsets = array_keys(AcceptHeader::fromString($this->headers->get('Accept-Charset'))->all());$/;"	v
charsets	bootstrap/cache/compiled.php	/^    protected $charsets;$/;"	v
check	bootstrap/cache/compiled.php	/^    protected function check(array $routes, $request, $includingMethod = true)$/;"	f
check	bootstrap/cache/compiled.php	/^    public function check($ability, $arguments = [])$/;"	f
check	bootstrap/cache/compiled.php	/^    public function check($ability, $arguments = []);$/;"	f
check	bootstrap/cache/compiled.php	/^    public function check($value, $hashedValue, array $options = [])$/;"	f
check	bootstrap/cache/compiled.php	/^    public function check($value, $hashedValue, array $options = []);$/;"	f
check	bootstrap/cache/compiled.php	/^    public function check();$/;"	f
checkForAlternateVerbs	bootstrap/cache/compiled.php	/^    protected function checkForAlternateVerbs($request)$/;"	f
checkForMorePages	bootstrap/cache/compiled.php	/^    protected function checkForMorePages()$/;"	f
checkForSpecificEnvironmentFile	bootstrap/cache/compiled.php	/^    protected function checkForSpecificEnvironmentFile($app)$/;"	f
checkFormat	bootstrap/cache/compiled.php	/^    protected function checkFormat($format)$/;"	f
children	bootstrap/cache/compiled.php	/^            $children = parent::getChildren();$/;"	v
children	bootstrap/cache/compiled.php	/^        $children = new self($this->iterator->getChildren(), array());$/;"	v
chunk	bootstrap/cache/compiled.php	/^    public function chunk($size)$/;"	f
chunks	bootstrap/cache/compiled.php	/^        $chunks = [];$/;"	v
cipher	bootstrap/cache/compiled.php	/^            $this->cipher = $cipher;$/;"	v
cipher	bootstrap/cache/compiled.php	/^        return $cipher === 'AES-128-CBC' && $length === 16 || $cipher === 'AES-256-CBC' && $length === 32;$/;"	v
cipher	bootstrap/cache/compiled.php	/^    protected $cipher;$/;"	v
cipher	bootstrap/cache/compiled.php	/^    public function __construct($key, $cipher = 'AES-128-CBC')$/;"	v
class	bootstrap/cache/compiled.php	/^                    $class = $this->formatClass($e['class']);$/;"	v
class	bootstrap/cache/compiled.php	/^            $class = $parameter->getClass();$/;"	v
class	bootstrap/cache/compiled.php	/^            $class = $this->getActualClassNameForMorph($class);$/;"	v
class	bootstrap/cache/compiled.php	/^            $class = get_class($class);$/;"	v
class	bootstrap/cache/compiled.php	/^        $class = $parameter->getClass();$/;"	v
class	bootstrap/cache/compiled.php	/^        $class = $this->getOption('compiler_class');$/;"	v
class	bootstrap/cache/compiled.php	/^        $class = '\\\\' . ltrim($this->model, '\\\\');$/;"	v
class	bootstrap/cache/compiled.php	/^        $class = static::class;$/;"	v
class	bootstrap/cache/compiled.php	/^        $class = static::getMockableClass($name);$/;"	v
class	bootstrap/cache/compiled.php	/^        foreach (static::$publishes as $class => $publish) {$/;"	v
className	bootstrap/cache/compiled.php	/^        $className = is_string($class) ? $class : get_class($class);$/;"	v
classmap	composer.json	/^        "classmap": [$/;"	f
cleanBuffer	bootstrap/cache/compiled.php	/^                    $cleanBuffer = substr_replace($buffer, '', 0, $this->caughtLength);$/;"	v
cleanDirectory	bootstrap/cache/compiled.php	/^    public function cleanDirectory($directory)$/;"	f
clear	bootstrap/cache/compiled.php	/^    public function clear()$/;"	f
clear	bootstrap/cache/compiled.php	/^    public function clear();$/;"	f
clearBootedModels	bootstrap/cache/compiled.php	/^    public static function clearBootedModels()$/;"	f
clearCookie	bootstrap/cache/compiled.php	/^    public function clearCookie($name, $path = '\/', $domain = null, $secure = false, $httpOnly = true)$/;"	f
clearResolvedInstance	bootstrap/cache/compiled.php	/^    public static function clearResolvedInstance($name)$/;"	f
clearResolvedInstances	bootstrap/cache/compiled.php	/^    public static function clearResolvedInstances()$/;"	f
clearUserDataFromStorage	bootstrap/cache/compiled.php	/^    protected function clearUserDataFromStorage()$/;"	f
client	app/Console/Commands/syncJoindInEvents.php	/^        $this->client = Client::factory();$/;"	v
client	app/Console/Commands/syncJoindInEvents.php	/^    protected $client;$/;"	v
client	app/JoindIn/ConferenceImporter.php	/^        $this->client = Client::factory();$/;"	v
client	app/JoindIn/ConferenceImporter.php	/^    private $client;$/;"	v
clientIp	bootstrap/cache/compiled.php	/^                $clientIps[$key] = $clientIp = $match[1];$/;"	v
clientIps	bootstrap/cache/compiled.php	/^            $clientIps = $matches[3];$/;"	v
clientIps	bootstrap/cache/compiled.php	/^            $clientIps = array_map('trim', explode(',', $this->headers->get(self::$trustedHeaders[self::HEADER_CLIENT_IP])));$/;"	v
clientIps	bootstrap/cache/compiled.php	/^        $clientIps = array();$/;"	v
cloneArgumentsForQueueing	bootstrap/cache/compiled.php	/^    protected function cloneArgumentsForQueueing(array $arguments)$/;"	f
close	bootstrap/cache/compiled.php	/^    public function close()$/;"	f
closeOutputBuffers	bootstrap/cache/compiled.php	/^    public static function closeOutputBuffers($targetLevel, $flush)$/;"	f
closingSoonest	app/models/Conference.php	/^    public static function closingSoonest()$/;"	f
codes	bootstrap/cache/compiled.php	/^                $codes = explode('-', $lang);$/;"	v
collapse	bootstrap/cache/compiled.php	/^    public function collapse()$/;"	f
collapse	bootstrap/cache/compiled.php	/^    public static function collapse($array)$/;"	f
collectGarbage	bootstrap/cache/compiled.php	/^    protected function collectGarbage(SessionInterface $session)$/;"	f
columns	bootstrap/cache/compiled.php	/^        $columns = is_array($columns) ? $columns : func_get_args();$/;"	v
combine	bootstrap/cache/compiled.php	/^    public function combine($values)$/;"	f
commandShouldBeQueued	bootstrap/cache/compiled.php	/^    protected function commandShouldBeQueued($command)$/;"	f
commands	app/Console/Kernel.php	/^    protected $commands = [$/;"	v
commands	bootstrap/cache/compiled.php	/^        $commands = is_array($commands) ? $commands : func_get_args();$/;"	v
commands	bootstrap/cache/compiled.php	/^    public function commands($commands)$/;"	f
compile	bootstrap/cache/compiled.php	/^    public function compile($path = null)$/;"	f
compile	bootstrap/cache/compiled.php	/^    public function compile($path);$/;"	f
compile	bootstrap/cache/compiled.php	/^    public function compile()$/;"	f
compile	bootstrap/cache/compiled.php	/^    public static function compile(Route $route)$/;"	f
compile	bootstrap/cache/compiled.php	/^    public static function compile(Route $route);$/;"	f
compileAppend	bootstrap/cache/compiled.php	/^    protected function compileAppend($expression)$/;"	f
compileBreak	bootstrap/cache/compiled.php	/^    protected function compileBreak($expression)$/;"	f
compileCan	bootstrap/cache/compiled.php	/^    protected function compileCan($expression)$/;"	f
compileCannot	bootstrap/cache/compiled.php	/^    protected function compileCannot($expression)$/;"	f
compileChoice	bootstrap/cache/compiled.php	/^    protected function compileChoice($expression)$/;"	f
compileComments	bootstrap/cache/compiled.php	/^    protected function compileComments($value)$/;"	f
compileContinue	bootstrap/cache/compiled.php	/^    protected function compileContinue($expression)$/;"	f
compileEach	bootstrap/cache/compiled.php	/^    protected function compileEach($expression)$/;"	f
compileEchoDefaults	bootstrap/cache/compiled.php	/^    public function compileEchoDefaults($value)$/;"	f
compileEchos	bootstrap/cache/compiled.php	/^    protected function compileEchos($value)$/;"	f
compileElse	bootstrap/cache/compiled.php	/^    protected function compileElse($expression)$/;"	f
compileElsecan	bootstrap/cache/compiled.php	/^    protected function compileElsecan($expression)$/;"	f
compileElsecannot	bootstrap/cache/compiled.php	/^    protected function compileElsecannot($expression)$/;"	f
compileElseif	bootstrap/cache/compiled.php	/^    protected function compileElseif($expression)$/;"	f
compileEmpty	bootstrap/cache/compiled.php	/^    protected function compileEmpty($expression)$/;"	f
compileEndcan	bootstrap/cache/compiled.php	/^    protected function compileEndcan($expression)$/;"	f
compileEndcannot	bootstrap/cache/compiled.php	/^    protected function compileEndcannot($expression)$/;"	f
compileEndfor	bootstrap/cache/compiled.php	/^    protected function compileEndfor($expression)$/;"	f
compileEndforeach	bootstrap/cache/compiled.php	/^    protected function compileEndforeach($expression)$/;"	f
compileEndforelse	bootstrap/cache/compiled.php	/^    protected function compileEndforelse($expression)$/;"	f
compileEndif	bootstrap/cache/compiled.php	/^    protected function compileEndif($expression)$/;"	f
compileEndphp	bootstrap/cache/compiled.php	/^    protected function compileEndphp($expression)$/;"	f
compileEndpush	bootstrap/cache/compiled.php	/^    protected function compileEndpush($expression)$/;"	f
compileEndsection	bootstrap/cache/compiled.php	/^    protected function compileEndsection($expression)$/;"	f
compileEndunless	bootstrap/cache/compiled.php	/^    protected function compileEndunless($expression)$/;"	f
compileEndwhile	bootstrap/cache/compiled.php	/^    protected function compileEndwhile($expression)$/;"	f
compileEscapedEchos	bootstrap/cache/compiled.php	/^    protected function compileEscapedEchos($value)$/;"	f
compileExtends	bootstrap/cache/compiled.php	/^    protected function compileExtends($expression)$/;"	f
compileExtensions	bootstrap/cache/compiled.php	/^    protected function compileExtensions($value)$/;"	f
compileFor	bootstrap/cache/compiled.php	/^    protected function compileFor($expression)$/;"	f
compileForeach	bootstrap/cache/compiled.php	/^    protected function compileForeach($expression)$/;"	f
compileForelse	bootstrap/cache/compiled.php	/^    protected function compileForelse($expression)$/;"	f
compileHasSection	bootstrap/cache/compiled.php	/^    protected function compileHasSection($expression)$/;"	f
compileIf	bootstrap/cache/compiled.php	/^    protected function compileIf($expression)$/;"	f
compileInclude	bootstrap/cache/compiled.php	/^    protected function compileInclude($expression)$/;"	f
compileIncludeIf	bootstrap/cache/compiled.php	/^    protected function compileIncludeIf($expression)$/;"	f
compileInject	bootstrap/cache/compiled.php	/^    protected function compileInject($expression)$/;"	f
compileLang	bootstrap/cache/compiled.php	/^    protected function compileLang($expression)$/;"	f
compileManifest	bootstrap/cache/compiled.php	/^    protected function compileManifest($providers)$/;"	f
compileOverwrite	bootstrap/cache/compiled.php	/^    protected function compileOverwrite($expression)$/;"	f
compileParameterNames	bootstrap/cache/compiled.php	/^    protected function compileParameterNames()$/;"	f
compilePattern	bootstrap/cache/compiled.php	/^    private static function compilePattern(Route $route, $pattern, $isHost)$/;"	f
compilePhp	bootstrap/cache/compiled.php	/^    protected function compilePhp($expression)$/;"	f
compilePush	bootstrap/cache/compiled.php	/^    protected function compilePush($expression)$/;"	f
compileRawEchos	bootstrap/cache/compiled.php	/^    protected function compileRawEchos($value)$/;"	f
compileRegularEchos	bootstrap/cache/compiled.php	/^    protected function compileRegularEchos($value)$/;"	f
compileRoute	bootstrap/cache/compiled.php	/^    protected function compileRoute()$/;"	f
compileSection	bootstrap/cache/compiled.php	/^    protected function compileSection($expression)$/;"	f
compileShow	bootstrap/cache/compiled.php	/^    protected function compileShow($expression)$/;"	f
compileStack	bootstrap/cache/compiled.php	/^    protected function compileStack($expression)$/;"	f
compileStatements	bootstrap/cache/compiled.php	/^    protected function compileStatements($value)$/;"	f
compileStop	bootstrap/cache/compiled.php	/^    protected function compileStop($expression)$/;"	f
compileString	bootstrap/cache/compiled.php	/^    public function compileString($value)$/;"	f
compileUnless	bootstrap/cache/compiled.php	/^    protected function compileUnless($expression)$/;"	f
compileUnset	bootstrap/cache/compiled.php	/^    protected function compileUnset($expression)$/;"	f
compileWhile	bootstrap/cache/compiled.php	/^    protected function compileWhile($expression)$/;"	f
compileYield	bootstrap/cache/compiled.php	/^    protected function compileYield($expression)$/;"	f
compiled	bootstrap/cache/compiled.php	/^            $this->compiled = $data['compiled'];$/;"	v
compiled	bootstrap/cache/compiled.php	/^        $compiled = $this->compiler->getCompiledPath($path);$/;"	v
compiled	bootstrap/cache/compiled.php	/^        $compiled = $this->getCompiledPath($path);$/;"	v
compiled	bootstrap/cache/compiled.php	/^        $this->compiled = (new SymfonyRoute($uri, $optionals, $this->wheres, [], $this->domain() ?: ''))->compile();$/;"	v
compiled	bootstrap/cache/compiled.php	/^        $this->compiled = null;$/;"	v
compiled	bootstrap/cache/compiled.php	/^        return $this->compiled = $class::compile($this);$/;"	v
compiled	bootstrap/cache/compiled.php	/^    private $compiled;$/;"	v
compiled	bootstrap/cache/compiled.php	/^    protected $compiled;$/;"	v
compiledPath	bootstrap/autoload.php	/^$compiledPath = __DIR__.'\/cache\/compiled.php';$/;"	v
compiler	bootstrap/cache/compiled.php	/^        $this->compiler = $compiler;$/;"	v
compiler	bootstrap/cache/compiled.php	/^    protected $compiler;$/;"	v
compilers	bootstrap/cache/compiled.php	/^    protected $compilers = ['Extensions', 'Statements', 'Comments', 'Echos'];$/;"	v
compiles	bootstrap/cache/compiled.php	/^    public static function compiles()$/;"	f
complete	app/Services/CreateBioForm.php	/^    public function complete()$/;"	f
complete	app/Services/CreateConferenceForm.php	/^    public function complete()$/;"	f
completing_a_form_returns_the_new_conference	tests/CreateConferenceFormTest.php	/^    public function completing_a_form_returns_the_new_conference()$/;"	f
components	bootstrap/cache/compiled.php	/^        $components = parse_url($uri);$/;"	v
composer	bootstrap/cache/compiled.php	/^        $composer = json_decode(file_get_contents(base_path('composer.json')), true);$/;"	v
composer	bootstrap/cache/compiled.php	/^    public function composer($views, $callback, $priority = null)$/;"	f
composer	bootstrap/cache/compiled.php	/^    public function composer($views, $callback, $priority = null);$/;"	f
composers	bootstrap/cache/compiled.php	/^        $composers = [];$/;"	v
composers	bootstrap/cache/compiled.php	/^    protected $composers = [];$/;"	v
composers	bootstrap/cache/compiled.php	/^    public function composers(array $composers)$/;"	f
computeCacheControlValue	bootstrap/cache/compiled.php	/^    protected function computeCacheControlValue()$/;"	f
computeRegexp	bootstrap/cache/compiled.php	/^    private static function computeRegexp(array $tokens, $index, $firstOptional)$/;"	f
computed	bootstrap/cache/compiled.php	/^            $computed = $this->computeCacheControlValue();$/;"	v
computedCacheControl	bootstrap/cache/compiled.php	/^            $this->computedCacheControl = $this->parseCacheControl($computed);$/;"	v
computedCacheControl	bootstrap/cache/compiled.php	/^            $this->computedCacheControl = array();$/;"	v
computedCacheControl	bootstrap/cache/compiled.php	/^    protected $computedCacheControl = array();$/;"	v
concrete	bootstrap/cache/compiled.php	/^            $concrete = $abstract;$/;"	v
concrete	bootstrap/cache/compiled.php	/^            $concrete = $this->getClosure($abstract, $concrete);$/;"	v
concrete	bootstrap/cache/compiled.php	/^        $concrete = $this->getConcrete($abstract);$/;"	v
concrete	bootstrap/cache/compiled.php	/^        $concrete = $this->normalize($concrete);$/;"	v
concrete	bootstrap/cache/compiled.php	/^        return $concrete === $abstract || $concrete instanceof Closure;$/;"	v
concrete	bootstrap/cache/compiled.php	/^    public function bind($abstract, $concrete = null, $shared = false)$/;"	v
concrete	bootstrap/cache/compiled.php	/^    public function bind($abstract, $concrete = null, $shared = false);$/;"	v
concrete	bootstrap/cache/compiled.php	/^    public function bindIf($abstract, $concrete = null, $shared = false)$/;"	v
concrete	bootstrap/cache/compiled.php	/^    public function bindIf($abstract, $concrete = null, $shared = false);$/;"	v
concrete	bootstrap/cache/compiled.php	/^    public function singleton($abstract, $concrete = null)$/;"	v
concrete	bootstrap/cache/compiled.php	/^    public function singleton($abstract, $concrete = null);$/;"	v
condition	bootstrap/cache/compiled.php	/^            $this->condition = $data['condition'];$/;"	v
condition	bootstrap/cache/compiled.php	/^        $this->condition = (string) $condition;$/;"	v
condition	bootstrap/cache/compiled.php	/^    private $condition = '';$/;"	v
conference	app/ApiResources/Conference.php	/^        $this->conference = $conference;$/;"	v
conference	app/ApiResources/Conference.php	/^    private $conference;$/;"	v
conference	app/Commands/CreateSubmission.php	/^        $conference = Conference::findOrFail($this->conferenceId);$/;"	v
conference	app/Commands/DestroySubmission.php	/^        $conference = Conference::findOrFail($this->conferenceId);$/;"	v
conference	app/Http/Controllers/Api/ConferencesController.php	/^        $conference = EloquentConference::findOrFail($id);$/;"	v
conference	app/Http/Controllers/Api/ConferencesController.php	/^        $conference = new Conference($conference);$/;"	v
conference	app/Http/Controllers/ConferencesController.php	/^            $conference = $form->complete();$/;"	v
conference	app/Http/Controllers/ConferencesController.php	/^            $conference = Auth::user()->conferences()->findOrFail($id);$/;"	v
conference	app/Http/Controllers/ConferencesController.php	/^            $conference = Conference::findOrFail($id);$/;"	v
conference	app/Http/Controllers/ConferencesController.php	/^        $conference = Conference::findOrFail($id);$/;"	v
conference	app/JoindIn/ConferenceImporter.php	/^        $conference = Conference::firstOrNew(['joindin_id' => $eventId]);$/;"	v
conference	app/Services/CreateConferenceForm.php	/^        $conference = Conference::create(array_merge($this->input, [$/;"	v
conference	tests/AccountTest.php	/^        $conference = Factory::build('conference');$/;"	v
conference	tests/Api/ConferenceApiTest.php	/^        $conference = Conference::create([$/;"	v
conference	tests/ConferenceTest.php	/^        $conference = Factory::build('conference');$/;"	v
conference	tests/ConferenceTest.php	/^        $conference = Factory::create('conference', [$/;"	v
conference	tests/CreateConferenceFormTest.php	/^        $conference = $form->complete();$/;"	v
conference	tests/CreateConferenceFormTest.php	/^        $conference = Conference::first();$/;"	v
conference	tests/SubmissionTest.php	/^        $conference = Factory::create('conference');$/;"	v
conference	tests/TalkTest.php	/^        $conference = Factory::create('conference');$/;"	v
conference1	tests/SubmissionTest.php	/^        $conference1 = Factory::create('conference');$/;"	v
conference2	tests/SubmissionTest.php	/^        $conference2 = Factory::create('conference');$/;"	v
conferenceId	app/Commands/CreateSubmission.php	/^        $this->conferenceId = $conferenceId;$/;"	v
conferenceId	app/Commands/CreateSubmission.php	/^    private $conferenceId;$/;"	v
conferenceId	app/Commands/DestroySubmission.php	/^        $this->conferenceId = $conferenceId;$/;"	v
conferenceId	app/Commands/DestroySubmission.php	/^    private $conferenceId;$/;"	v
conferenceId	tests/Api/ConferenceApiTest.php	/^        $conferenceId = Conference::first()->id;$/;"	v
conference_cfp_end_date_must_be_a_valid_date	tests/CreateConferenceFormTest.php	/^    public function conference_cfp_end_date_must_be_a_valid_date()$/;"	f
conference_cfp_end_date_must_be_before_the_conference_start_date	tests/CreateConferenceFormTest.php	/^    public function conference_cfp_end_date_must_be_before_the_conference_start_date()$/;"	f
conference_cfp_end_date_must_not_be_before_cfp_start_date	tests/CreateConferenceFormTest.php	/^    public function conference_cfp_end_date_must_not_be_before_cfp_start_date()$/;"	f
conference_cfp_start_date_must_be_a_valid_date	tests/CreateConferenceFormTest.php	/^    public function conference_cfp_start_date_must_be_a_valid_date()$/;"	f
conference_cfp_start_date_must_be_before_the_conference_start_date	tests/CreateConferenceFormTest.php	/^    public function conference_cfp_start_date_must_be_before_the_conference_start_date()$/;"	f
conference_cfp_url_is_saved_if_provided	tests/CreateConferenceFormTest.php	/^    public function conference_cfp_url_is_saved_if_provided()$/;"	f
conference_dates_are_saved_if_provided	tests/CreateConferenceFormTest.php	/^    public function conference_dates_are_saved_if_provided()$/;"	f
conference_description_is_required	tests/CreateConferenceFormTest.php	/^    public function conference_description_is_required()$/;"	f
conference_end_date_must_be_a_valid_date	tests/CreateConferenceFormTest.php	/^    public function conference_end_date_must_be_a_valid_date()$/;"	f
conference_end_date_must_not_be_before_start_date	tests/CreateConferenceFormTest.php	/^    public function conference_end_date_must_not_be_before_start_date()$/;"	f
conference_names	database/seeds/ConferencesSeeder.php	/^        $conference_names = collect([$/;"	v
conference_start_date_must_be_a_valid_date	tests/CreateConferenceFormTest.php	/^    public function conference_start_date_must_be_a_valid_date()$/;"	f
conference_title_is_required	tests/CreateConferenceFormTest.php	/^    public function conference_title_is_required()$/;"	f
conference_url_is_required	tests/CreateConferenceFormTest.php	/^    public function conference_url_is_required()$/;"	f
conferences	app/Console/Commands/TweetImportantCFPDates.php	/^        $conferences = Conference::cfpClosingTomorrow()->get();$/;"	v
conferences	app/Console/Commands/TweetImportantCFPDates.php	/^        $conferences = Conference::cfpOpeningToday()->get();$/;"	v
conferences	app/Http/Controllers/Api/ConferencesController.php	/^                $conferences = EloquentConference::all();$/;"	v
conferences	app/Http/Controllers/Api/ConferencesController.php	/^                $conferences = EloquentConference::future()->get();$/;"	v
conferences	app/Http/Controllers/Api/ConferencesController.php	/^                $conferences = EloquentConference::openCfp()->get();$/;"	v
conferences	app/Http/Controllers/Api/ConferencesController.php	/^                $conferences = EloquentConference::unclosedCfp()->get();$/;"	v
conferences	app/Http/Controllers/ConferencesController.php	/^                $conferences = $conferences$/;"	v
conferences	app/Http/Controllers/ConferencesController.php	/^                $conferences = $conferences->sortBy(function (Conference $model) {$/;"	v
conferences	app/Http/Controllers/ConferencesController.php	/^                $conferences = Auth::user()->favoritedConferences()->get();$/;"	v
conferences	app/Http/Controllers/ConferencesController.php	/^                $conferences = Conference::all();$/;"	v
conferences	app/Http/Controllers/ConferencesController.php	/^                $conferences = Conference::future()->get();$/;"	v
conferences	app/Http/Controllers/ConferencesController.php	/^                $conferences = Conference::openCfp()->get();$/;"	v
conferences	app/Http/Controllers/ConferencesController.php	/^                $conferences = Conference::unclosedCfp()->get();$/;"	v
conferences	app/User.php	/^    public function conferences()$/;"	f
conferences_accept_proposals_during_the_call_for_papers	tests/ConferenceTest.php	/^    public function conferences_accept_proposals_during_the_call_for_papers()$/;"	f
conferences_dont_accept_proposals_outside_of_the_call_for_papers	tests/ConferenceTest.php	/^    public function conferences_dont_accept_proposals_outside_of_the_call_for_papers()$/;"	f
conferences_that_havent_announced_their_cfp_are_not_accepting_proposals	tests/ConferenceTest.php	/^    public function conferences_that_havent_announced_their_cfp_are_not_accepting_proposals()$/;"	f
config	bootstrap/cache/compiled.php	/^            $config = $app->make('config')->get('app');$/;"	v
config	bootstrap/cache/compiled.php	/^            $config = $app['config']['session'];$/;"	v
config	bootstrap/cache/compiled.php	/^        $app->instance('config', $config = new Repository($items));$/;"	v
config	bootstrap/cache/compiled.php	/^        $config = $app->make('config');$/;"	v
config	bootstrap/cache/compiled.php	/^        $config = $config ?: $this->manager->getSessionConfig();$/;"	v
config	bootstrap/cache/compiled.php	/^        $config = $this->app['config']->get($key, []);$/;"	v
config	bootstrap/cache/compiled.php	/^        $config = $this->getConfig($name);$/;"	v
config	bootstrap/cache/compiled.php	/^        $config = $this->manager->getSessionConfig();$/;"	v
config	bootstrap/cache/compiled.php	/^        $config = $this->parseConfig($config, $name);$/;"	v
config	bootstrap/cache/compiled.php	/^        $config = config('session');$/;"	v
config	bootstrap/cache/compiled.php	/^    protected function sessionIsPersistent(array $config = null)$/;"	v
config	composer.json	/^    "config": {$/;"	f
configHitsLottery	bootstrap/cache/compiled.php	/^    protected function configHitsLottery(array $config)$/;"	f
configPath	bootstrap/cache/compiled.php	/^        $configPath = realpath($app->configPath());$/;"	v
configPath	bootstrap/cache/compiled.php	/^    public function configPath()$/;"	f
configurationIsCached	bootstrap/cache/compiled.php	/^    public function configurationIsCached()$/;"	f
configureDailyHandler	bootstrap/cache/compiled.php	/^    protected function configureDailyHandler(Application $app, Writer $log)$/;"	f
configureErrorlogHandler	bootstrap/cache/compiled.php	/^    protected function configureErrorlogHandler(Application $app, Writer $log)$/;"	f
configureFormRequests	bootstrap/cache/compiled.php	/^    protected function configureFormRequests()$/;"	f
configureHandlers	bootstrap/cache/compiled.php	/^    protected function configureHandlers(Application $app, Writer $log)$/;"	f
configureMonologUsing	bootstrap/cache/compiled.php	/^    public function configureMonologUsing(callable $callback)$/;"	f
configureSingleHandler	bootstrap/cache/compiled.php	/^    protected function configureSingleHandler(Application $app, Writer $log)$/;"	f
configureSyslogHandler	bootstrap/cache/compiled.php	/^    protected function configureSyslogHandler(Application $app, Writer $log)$/;"	f
conn	bootstrap/cache/compiled.php	/^        $conn = $this->getConnection();$/;"	v
connection	bootstrap/cache/compiled.php	/^            $connection = $event instanceof ShouldBroadcastNow ? 'sync' : null;$/;"	v
connection	bootstrap/cache/compiled.php	/^            $connection = $this->makeConnection($name);$/;"	v
connection	bootstrap/cache/compiled.php	/^        $connection = $this->app['config']['session.connection'];$/;"	v
connection	bootstrap/cache/compiled.php	/^        $connection = $this->createSingleConnection($this->getWriteConfig($config));$/;"	v
connection	bootstrap/cache/compiled.php	/^        $connection = $this->getDatabaseConnection();$/;"	v
connection	bootstrap/cache/compiled.php	/^        $connection = isset($command->connection) ? $command->connection : null;$/;"	v
connection	bootstrap/cache/compiled.php	/^        $this->connection = $name;$/;"	v
connection	bootstrap/cache/compiled.php	/^    protected $connection;$/;"	v
connection	bootstrap/cache/compiled.php	/^    public function connection($name = null)$/;"	f
connection	bootstrap/cache/compiled.php	/^    public function connection($name = null);$/;"	f
connection	bootstrap/cache/compiled.php	/^    public function newFromBuilder($attributes = [], $connection = null)$/;"	v
connection	bootstrap/cache/compiled.php	/^    public static function hydrate(array $items, $connection = null)$/;"	v
connections	bootstrap/cache/compiled.php	/^        $connections = $this->app['config']['database.connections'];$/;"	v
connections	bootstrap/cache/compiled.php	/^    protected $connections = [];$/;"	v
consoleArgs	bootstrap/cache/compiled.php	/^    public function detect(Closure $callback, $consoleArgs = null)$/;"	v
constructor	bootstrap/cache/compiled.php	/^        $constructor = $reflector->getConstructor();$/;"	v
container	bootstrap/cache/compiled.php	/^        $container = $this->container;$/;"	v
container	bootstrap/cache/compiled.php	/^        $this->container = $container ?: new Container();$/;"	v
container	bootstrap/cache/compiled.php	/^        $this->container = $container;$/;"	v
container	bootstrap/cache/compiled.php	/^        $this->container = $this->container ?: new Container();$/;"	v
container	bootstrap/cache/compiled.php	/^    protected $container;$/;"	v
container	bootstrap/cache/compiled.php	/^    public function __construct(ContainerContract $container = null)$/;"	v
container	bootstrap/cache/compiled.php	/^    public function __construct(Dispatcher $events, Container $container = null)$/;"	v
container	bootstrap/cache/compiled.php	/^    public function __construct(Router $router, Container $container = null)$/;"	v
contains	bootstrap/cache/compiled.php	/^    private $contains = array();$/;"	v
contains	bootstrap/cache/compiled.php	/^    public function contains($key, $value = null)$/;"	f
contains	bootstrap/cache/compiled.php	/^    public function contains($key, $value)$/;"	f
contains	bootstrap/cache/compiled.php	/^    public function contains($pattern)$/;"	f
contains	bootstrap/cache/compiled.php	/^    public static function contains($haystack, $needles)$/;"	f
content	bootstrap/cache/compiled.php	/^                $content = $this->{"compile{$type}"}($content);$/;"	v
content	bootstrap/cache/compiled.php	/^            $content = $content->render();$/;"	v
content	bootstrap/cache/compiled.php	/^            $content = $this->getContent();$/;"	v
content	bootstrap/cache/compiled.php	/^            $content = $this->morphToJson($content);$/;"	v
content	bootstrap/cache/compiled.php	/^            $content = str_replace('@parent', $content, $this->sections[$section]);$/;"	v
content	bootstrap/cache/compiled.php	/^            $this->content = false;$/;"	v
content	bootstrap/cache/compiled.php	/^            $this->content = file_get_contents('php:\/\/input');$/;"	v
content	bootstrap/cache/compiled.php	/^        $content = $request->content;$/;"	v
content	bootstrap/cache/compiled.php	/^        $content = '';$/;"	v
content	bootstrap/cache/compiled.php	/^        $content = file_get_contents($this->getPathname());$/;"	v
content	bootstrap/cache/compiled.php	/^        $this->content = $content;$/;"	v
content	bootstrap/cache/compiled.php	/^        $this->content = (string) $content;$/;"	v
content	bootstrap/cache/compiled.php	/^    protected $content;$/;"	v
content	bootstrap/cache/compiled.php	/^    public function content()$/;"	f
content	bootstrap/cache/compiled.php	/^    public function startPush($section, $content = '')$/;"	v
content	bootstrap/cache/compiled.php	/^    public function startSection($section, $content = '')$/;"	v
contentHeaders	bootstrap/cache/compiled.php	/^        $contentHeaders = array('CONTENT_LENGTH' => true, 'CONTENT_MD5' => true, 'CONTENT_TYPE' => true);$/;"	v
contentTags	bootstrap/cache/compiled.php	/^    protected $contentTags = ['{{', '}}'];$/;"	v
contentTypes	bootstrap/cache/compiled.php	/^        $contentTypes = (array) $contentTypes;$/;"	v
contents	bootstrap/cache/compiled.php	/^            $contents = $this->compileString($this->files->get($this->getPath()));$/;"	v
contents	bootstrap/cache/compiled.php	/^            $contents = $this->renderContents();$/;"	v
contents	bootstrap/cache/compiled.php	/^        $contents = $this->getContents();$/;"	v
contents	bootstrap/cache/compiled.php	/^        $contents = '';$/;"	v
context	bootstrap/cache/compiled.php	/^    protected function fireLogEvent($level, $message, array $context = [])$/;"	v
context	bootstrap/cache/compiled.php	/^    public function addAlert($message, array $context = array())$/;"	v
context	bootstrap/cache/compiled.php	/^    public function addCritical($message, array $context = array())$/;"	v
context	bootstrap/cache/compiled.php	/^    public function addDebug($message, array $context = array())$/;"	v
context	bootstrap/cache/compiled.php	/^    public function addEmergency($message, array $context = array())$/;"	v
context	bootstrap/cache/compiled.php	/^    public function addError($message, array $context = array())$/;"	v
context	bootstrap/cache/compiled.php	/^    public function addInfo($message, array $context = array())$/;"	v
context	bootstrap/cache/compiled.php	/^    public function addNotice($message, array $context = array())$/;"	v
context	bootstrap/cache/compiled.php	/^    public function addRecord($level, $message, array $context = array())$/;"	v
context	bootstrap/cache/compiled.php	/^    public function addWarning($message, array $context = array())$/;"	v
context	bootstrap/cache/compiled.php	/^    public function alert($message, array $context = [])$/;"	v
context	bootstrap/cache/compiled.php	/^    public function alert($message, array $context = []);$/;"	v
context	bootstrap/cache/compiled.php	/^    public function alert($message, array $context = array())$/;"	v
context	bootstrap/cache/compiled.php	/^    public function alert($message, array $context = array());$/;"	v
context	bootstrap/cache/compiled.php	/^    public function crit($message, array $context = array())$/;"	v
context	bootstrap/cache/compiled.php	/^    public function critical($message, array $context = [])$/;"	v
context	bootstrap/cache/compiled.php	/^    public function critical($message, array $context = []);$/;"	v
context	bootstrap/cache/compiled.php	/^    public function critical($message, array $context = array())$/;"	v
context	bootstrap/cache/compiled.php	/^    public function critical($message, array $context = array());$/;"	v
context	bootstrap/cache/compiled.php	/^    public function debug($message, array $context = [])$/;"	v
context	bootstrap/cache/compiled.php	/^    public function debug($message, array $context = []);$/;"	v
context	bootstrap/cache/compiled.php	/^    public function debug($message, array $context = array())$/;"	v
context	bootstrap/cache/compiled.php	/^    public function debug($message, array $context = array());$/;"	v
context	bootstrap/cache/compiled.php	/^    public function emerg($message, array $context = array())$/;"	v
context	bootstrap/cache/compiled.php	/^    public function emergency($message, array $context = [])$/;"	v
context	bootstrap/cache/compiled.php	/^    public function emergency($message, array $context = array())$/;"	v
context	bootstrap/cache/compiled.php	/^    public function emergency($message, array $context = array());$/;"	v
context	bootstrap/cache/compiled.php	/^    public function err($message, array $context = array())$/;"	v
context	bootstrap/cache/compiled.php	/^    public function error($message, array $context = [])$/;"	v
context	bootstrap/cache/compiled.php	/^    public function error($message, array $context = []);$/;"	v
context	bootstrap/cache/compiled.php	/^    public function error($message, array $context = array())$/;"	v
context	bootstrap/cache/compiled.php	/^    public function error($message, array $context = array());$/;"	v
context	bootstrap/cache/compiled.php	/^    public function info($message, array $context = [])$/;"	v
context	bootstrap/cache/compiled.php	/^    public function info($message, array $context = []);$/;"	v
context	bootstrap/cache/compiled.php	/^    public function info($message, array $context = array())$/;"	v
context	bootstrap/cache/compiled.php	/^    public function info($message, array $context = array());$/;"	v
context	bootstrap/cache/compiled.php	/^    public function log($level, $message, array $context = [])$/;"	v
context	bootstrap/cache/compiled.php	/^    public function log($level, $message, array $context = []);$/;"	v
context	bootstrap/cache/compiled.php	/^    public function log($level, $message, array $context = array())$/;"	v
context	bootstrap/cache/compiled.php	/^    public function log($level, $message, array $context = array());$/;"	v
context	bootstrap/cache/compiled.php	/^    public function notice($message, array $context = [])$/;"	v
context	bootstrap/cache/compiled.php	/^    public function notice($message, array $context = []);$/;"	v
context	bootstrap/cache/compiled.php	/^    public function notice($message, array $context = array())$/;"	v
context	bootstrap/cache/compiled.php	/^    public function notice($message, array $context = array());$/;"	v
context	bootstrap/cache/compiled.php	/^    public function warn($message, array $context = array())$/;"	v
context	bootstrap/cache/compiled.php	/^    public function warning($message, array $context = [])$/;"	v
context	bootstrap/cache/compiled.php	/^    public function warning($message, array $context = []);$/;"	v
context	bootstrap/cache/compiled.php	/^    public function warning($message, array $context = array())$/;"	v
context	bootstrap/cache/compiled.php	/^    public function warning($message, array $context = array());$/;"	v
context	bootstrap/cache/compiled.php	/^    public function write($level, $message, array $context = [])$/;"	v
contextual	bootstrap/cache/compiled.php	/^    public $contextual = [];$/;"	v
controller	bootstrap/cache/compiled.php	/^        $controller = $this->container->make($class);$/;"	v
controller	bootstrap/cache/compiled.php	/^    public function controller($uri, $controller, $names = [])$/;"	f
controllerMiddleware	bootstrap/cache/compiled.php	/^    protected function controllerMiddleware()$/;"	f
controllers	bootstrap/cache/compiled.php	/^    public function controllers(array $controllers)$/;"	f
convertFileInformation	bootstrap/cache/compiled.php	/^    protected function convertFileInformation($file)$/;"	f
convertToControllerAction	bootstrap/cache/compiled.php	/^    protected function convertToControllerAction($action)$/;"	f
convertToString	bootstrap/cache/compiled.php	/^    protected function convertToString($data)$/;"	f
convertUploadedFiles	bootstrap/cache/compiled.php	/^    protected function convertUploadedFiles(array $files)$/;"	f
convertedFiles	bootstrap/cache/compiled.php	/^    protected $convertedFiles;$/;"	v
cookie	bootstrap/cache/compiled.php	/^            $cookie = call_user_func_array('cookie', func_get_args());$/;"	v
cookie	bootstrap/cache/compiled.php	/^            $cookie = call_user_func_array([$this, 'make'], func_get_args());$/;"	v
cookie	bootstrap/cache/compiled.php	/^            $cookie = head(func_get_args());$/;"	v
cookie	bootstrap/cache/compiled.php	/^        $this->cookie = $cookie;$/;"	v
cookie	bootstrap/cache/compiled.php	/^    protected $cookie;$/;"	v
cookie	bootstrap/cache/compiled.php	/^    public function cookie($cookie)$/;"	f
cookie	bootstrap/cache/compiled.php	/^    public function cookie($key = null, $default = null)$/;"	f
cookies	bootstrap/cache/compiled.php	/^        $cookies = '';$/;"	v
cookies	bootstrap/cache/compiled.php	/^        $this->cookies = $cookies;$/;"	v
cookies	bootstrap/cache/compiled.php	/^        $this->cookies = clone $this->cookies;$/;"	v
cookies	bootstrap/cache/compiled.php	/^        $this->cookies = new ParameterBag($cookies);$/;"	v
cookies	bootstrap/cache/compiled.php	/^    protected $cookies = array();$/;"	v
cookies	bootstrap/cache/compiled.php	/^    protected $cookies;$/;"	v
cookies	bootstrap/cache/compiled.php	/^    public $cookies;$/;"	v
copy	bootstrap/cache/compiled.php	/^    public function copy($path, $target)$/;"	f
copyDirectory	bootstrap/cache/compiled.php	/^    public function copyDirectory($directory, $destination, $options = null)$/;"	f
cost	bootstrap/cache/compiled.php	/^        $cost = isset($options['rounds']) ? $options['rounds'] : $this->rounds;$/;"	v
count	bootstrap/cache/compiled.php	/^                $count = count($exception->getAllPrevious());$/;"	v
count	bootstrap/cache/compiled.php	/^            $count = 1;$/;"	v
count	bootstrap/cache/compiled.php	/^        $count = 0;$/;"	v
count	bootstrap/cache/compiled.php	/^    public function count()$/;"	f
count	bootstrap/cache/compiled.php	/^    public function count();$/;"	f
count	bootstrap/cache/compiled.php	/^    public static function plural($value, $count = 2)$/;"	v
create	app/Http/Controllers/AccountController.php	/^    public function create()$/;"	f
create	app/Http/Controllers/BiosController.php	/^    public function create()$/;"	f
create	app/Http/Controllers/ConferencesController.php	/^    public function create()$/;"	f
create	app/Http/Controllers/TalksController.php	/^    public function create()$/;"	f
create	app/Services/Registrar.php	/^    public function create(array $data)$/;"	f
create	bootstrap/cache/compiled.php	/^    public static function create($content = '', $status = 200, $headers = array())$/;"	f
create	bootstrap/cache/compiled.php	/^    public static function create($uri, $method = 'GET', $parameters = array(), $cookies = array(), $files = array(), $server = array(), $content = null)$/;"	f
create	bootstrap/cache/compiled.php	/^    public static function create()$/;"	f
create	bootstrap/cache/compiled.php	/^    public static function create(array $attributes = [])$/;"	f
createApcDriver	bootstrap/cache/compiled.php	/^    protected function createApcDriver()$/;"	f
createApplication	tests/TestCase.php	/^    public function createApplication()$/;"	f
createArrayDriver	bootstrap/cache/compiled.php	/^    protected function createArrayDriver()$/;"	f
createCacheBased	bootstrap/cache/compiled.php	/^    protected function createCacheBased($driver)$/;"	f
createCacheHandler	bootstrap/cache/compiled.php	/^    protected function createCacheHandler($driver)$/;"	f
createClassBinding	bootstrap/cache/compiled.php	/^    public function createClassBinding($binding)$/;"	f
createClassCallable	bootstrap/cache/compiled.php	/^    protected function createClassCallable($listener, $container)$/;"	f
createClassListener	bootstrap/cache/compiled.php	/^    public function createClassListener($listener)$/;"	f
createConnection	bootstrap/cache/compiled.php	/^    protected function createConnection($driver, $connection, $database, $prefix = '', array $config = [])$/;"	f
createConnector	bootstrap/cache/compiled.php	/^    public function createConnector(array $config)$/;"	f
createCookieDriver	bootstrap/cache/compiled.php	/^    protected function createCookieDriver()$/;"	f
createDatabaseDriver	bootstrap/cache/compiled.php	/^    protected function createDatabaseDriver()$/;"	f
createDir	bootstrap/cache/compiled.php	/^    private function createDir()$/;"	f
createDriver	bootstrap/cache/compiled.php	/^    protected function createDriver($driver)$/;"	f
createFileDriver	bootstrap/cache/compiled.php	/^    protected function createFileDriver()$/;"	f
createFreshMockInstance	bootstrap/cache/compiled.php	/^    protected static function createFreshMockInstance($name)$/;"	f
createFromBase	bootstrap/cache/compiled.php	/^    public static function createFromBase(SymfonyRequest $request)$/;"	f
createFromGlobals	bootstrap/cache/compiled.php	/^    public static function createFromGlobals()$/;"	f
createLegacyDatabaseDriver	bootstrap/cache/compiled.php	/^    protected function createLegacyDatabaseDriver()$/;"	f
createMemcachedDriver	bootstrap/cache/compiled.php	/^    protected function createMemcachedDriver()$/;"	f
createMockByName	bootstrap/cache/compiled.php	/^    protected static function createMockByName($name)$/;"	f
createModel	bootstrap/cache/compiled.php	/^    public function createModel()$/;"	f
createNativeDriver	bootstrap/cache/compiled.php	/^    protected function createNativeDriver()$/;"	f
createProvider	bootstrap/cache/compiled.php	/^    public function createProvider($provider)$/;"	f
createQueuedHandlerCallable	bootstrap/cache/compiled.php	/^    protected function createQueuedHandlerCallable($class, $method)$/;"	f
createReadPdo	bootstrap/cache/compiled.php	/^    protected function createReadPdo(array $config)$/;"	f
createReadWriteConnection	bootstrap/cache/compiled.php	/^    protected function createReadWriteConnection(array $config)$/;"	f
createRecaller	bootstrap/cache/compiled.php	/^    protected function createRecaller($value)$/;"	f
createRedisDriver	bootstrap/cache/compiled.php	/^    protected function createRedisDriver()$/;"	f
createRememberTokenIfDoesntExist	bootstrap/cache/compiled.php	/^    protected function createRememberTokenIfDoesntExist(AuthenticatableContract $user)$/;"	f
createRequestFromFactory	bootstrap/cache/compiled.php	/^    private static function createRequestFromFactory(array $query = array(), array $request = array(), array $attributes = array(), array $cookies = array(), array $files = array(), array $server = array(), $content = null)$/;"	f
createRoute	bootstrap/cache/compiled.php	/^    protected function createRoute($methods, $uri, $action)$/;"	f
createSessionDriver	bootstrap/cache/compiled.php	/^    public function createSessionDriver($name, $config)$/;"	f
createSingleConnection	bootstrap/cache/compiled.php	/^    protected function createSingleConnection(array $config)$/;"	f
createTokenDriver	bootstrap/cache/compiled.php	/^    public function createTokenDriver($name, $config)$/;"	f
createWincacheDriver	bootstrap/cache/compiled.php	/^    protected function createWincacheDriver()$/;"	f
created	bootstrap/cache/compiled.php	/^    public static function created($callback, $priority = 0)$/;"	f
creating	bootstrap/cache/compiled.php	/^    public static function creating($callback, $priority = 0)$/;"	f
creator	bootstrap/cache/compiled.php	/^    public function creator($views, $callback)$/;"	f
creator	bootstrap/cache/compiled.php	/^    public function creator($views, $callback);$/;"	f
creators	bootstrap/cache/compiled.php	/^        $creators = [];$/;"	v
credentials	bootstrap/cache/compiled.php	/^        $credentials = $request->only('email', 'password', 'password_confirmation', 'token');$/;"	v
credentials	bootstrap/cache/compiled.php	/^        $credentials = $this->getBasicCredentials($request, $field);$/;"	v
credentials	bootstrap/cache/compiled.php	/^        $credentials = $this->getBasicCredentials($this->getRequest(), $field);$/;"	v
credentials	bootstrap/cache/compiled.php	/^        $credentials = $this->getCredentials($request);$/;"	v
credentials	bootstrap/cache/compiled.php	/^    public function attempt(array $credentials = [], $remember = false, $login = true)$/;"	v
credentials	bootstrap/cache/compiled.php	/^    public function attempt(array $credentials = [], $remember = false, $login = true);$/;"	v
credentials	bootstrap/cache/compiled.php	/^    public function once(array $credentials = [])$/;"	v
credentials	bootstrap/cache/compiled.php	/^    public function once(array $credentials = []);$/;"	v
credentials	bootstrap/cache/compiled.php	/^    public function validate(array $credentials = [])$/;"	v
credentials	bootstrap/cache/compiled.php	/^    public function validate(array $credentials = []);$/;"	v
crit	bootstrap/cache/compiled.php	/^    public function crit($message, array $context = array())$/;"	f
critical	bootstrap/cache/compiled.php	/^    public function critical($message, array $context = [])$/;"	f
critical	bootstrap/cache/compiled.php	/^    public function critical($message, array $context = []);$/;"	f
critical	bootstrap/cache/compiled.php	/^    public function critical($message, array $context = array())$/;"	f
critical	bootstrap/cache/compiled.php	/^    public function critical($message, array $context = array());$/;"	f
cssClass	app/macros.php	/^        $cssClass = isset($attributes['class']) ? $attributes['class'] : '';$/;"	v
current	app/Http/Controllers/TalksController.php	/^        $current = Input::has('revision') ? $talk->revisions()->findOrFail(Input::get('revision')) : $talk->current();$/;"	v
current	app/Http/Controllers/TalksController.php	/^        $current = new TalkRevision([$/;"	v
current	app/models/Talk.php	/^    public function current()$/;"	f
current	bootstrap/cache/compiled.php	/^        $current = $this->attributes[$key];$/;"	v
current	bootstrap/cache/compiled.php	/^        $this->current = $route = $this->routes->match($request);$/;"	v
current	bootstrap/cache/compiled.php	/^    protected $current;$/;"	v
current	bootstrap/cache/compiled.php	/^    public function current()$/;"	f
current	bootstrap/cache/compiled.php	/^    public function current();$/;"	f
currentContentIsResource	bootstrap/cache/compiled.php	/^        $currentContentIsResource = is_resource($this->content);$/;"	v
currentPage	bootstrap/cache/compiled.php	/^        $currentPage = $currentPage ?: static::resolveCurrentPage();$/;"	v
currentPage	bootstrap/cache/compiled.php	/^        $this->currentPage = $this->setCurrentPage($currentPage);$/;"	v
currentPage	bootstrap/cache/compiled.php	/^    protected $currentPage;$/;"	v
currentPage	bootstrap/cache/compiled.php	/^    public function __construct($items, $perPage, $currentPage = null, array $options = [])$/;"	v
currentPage	bootstrap/cache/compiled.php	/^    public function currentPage()$/;"	f
currentPage	bootstrap/cache/compiled.php	/^    public function currentPage();$/;"	f
currentPageResolver	bootstrap/cache/compiled.php	/^    protected static $currentPageResolver;$/;"	v
currentPageResolver	bootstrap/cache/compiled.php	/^    public static function currentPageResolver(Closure $resolver)$/;"	f
currentPathResolver	bootstrap/cache/compiled.php	/^    protected static $currentPathResolver;$/;"	v
currentPathResolver	bootstrap/cache/compiled.php	/^    public static function currentPathResolver(Closure $resolver)$/;"	f
currentRequest	bootstrap/cache/compiled.php	/^        $this->currentRequest = $request;$/;"	v
currentRequest	bootstrap/cache/compiled.php	/^    protected $currentRequest;$/;"	v
currentRouteAction	bootstrap/cache/compiled.php	/^    public function currentRouteAction()$/;"	f
currentRouteName	bootstrap/cache/compiled.php	/^    public function currentRouteName()$/;"	f
currentRouteNamed	bootstrap/cache/compiled.php	/^    public function currentRouteNamed($name)$/;"	f
currentRouteUses	bootstrap/cache/compiled.php	/^    public function currentRouteUses($action)$/;"	f
customCreators	bootstrap/cache/compiled.php	/^    protected $customCreators = [];$/;"	v
customDirectives	bootstrap/cache/compiled.php	/^    protected $customDirectives = [];$/;"	v
customErrorHandler	bootstrap/cache/compiled.php	/^    private function customErrorHandler($code, $msg)$/;"	f
data	bootstrap/cache/compiled.php	/^                $data = $this->getMethodData($method, $prefix);$/;"	v
data	bootstrap/cache/compiled.php	/^                $data = ['key' => $key, $iterator => $value];$/;"	v
data	bootstrap/cache/compiled.php	/^            $data = @unserialize($this->prepareForUnserialize($data));$/;"	v
data	bootstrap/cache/compiled.php	/^            $data = preg_replace_callback('\/[\\\\x80-\\\\xFF]+\/', function ($m) {$/;"	v
data	bootstrap/cache/compiled.php	/^            $data = str_replace(array('¤', '¦', '¨', '´', '¸', '¼', '½', '¾'), array('€', 'Š', 'š', 'Ž', 'ž', 'Œ', 'œ', 'Ÿ'), $data);$/;"	v
data	bootstrap/cache/compiled.php	/^            $this->data = array_merge($this->data, $key);$/;"	v
data	bootstrap/cache/compiled.php	/^        $data = "<?php echo \\$__env->make({$expression}, array_except(get_defined_vars(), array('__data', '__path')))->render(); ?>";$/;"	v
data	bootstrap/cache/compiled.php	/^        $data = $this->handler->read($this->getId());$/;"	v
data	bootstrap/cache/compiled.php	/^        $data = array('class' => get_class($e), 'message' => $e->getMessage(), 'code' => $e->getCode(), 'file' => $e->getFile() . ':' . $e->getLine());$/;"	v
data	bootstrap/cache/compiled.php	/^        $data = array_merge($mergeData, $this->parseData($data));$/;"	v
data	bootstrap/cache/compiled.php	/^        $data = array_merge($this->factory->getShared(), $this->data);$/;"	v
data	bootstrap/cache/compiled.php	/^        $data = unserialize($serialized);$/;"	v
data	bootstrap/cache/compiled.php	/^        $this->data = $data instanceof Arrayable ? $data->toArray() : (array) $data;$/;"	v
data	bootstrap/cache/compiled.php	/^    protected $data;$/;"	v
data	bootstrap/cache/compiled.php	/^    public function __construct(Factory $factory, EngineInterface $engine, $view, $path, $data = [])$/;"	v
data	bootstrap/cache/compiled.php	/^    public function file($path, $data = [], $mergeData = [])$/;"	v
data	bootstrap/cache/compiled.php	/^    public function file($path, $data = [], $mergeData = []);$/;"	v
data	bootstrap/cache/compiled.php	/^    public function get($path, array $data = [])$/;"	v
data	bootstrap/cache/compiled.php	/^    public function get($path, array $data = []);$/;"	v
data	bootstrap/cache/compiled.php	/^    public function jsonp($callback, $data = [], $status = 200, array $headers = [], $options = 0);$/;"	v
data	bootstrap/cache/compiled.php	/^    public function make($view, $data = [], $mergeData = [])$/;"	v
data	bootstrap/cache/compiled.php	/^    public function make($view, $data = [], $mergeData = []);$/;"	v
data	bootstrap/cache/compiled.php	/^    public function nest($key, $view, array $data = [])$/;"	v
data	bootstrap/cache/compiled.php	/^    public function of($view, $data = [])$/;"	v
data	bootstrap/cache/compiled.php	/^    public function view($view, $data = [], $status = 200, array $headers = []);$/;"	v
data	tests/Api/BioApiTest.php	/^        $data = $this->parseJson($response);$/;"	v
data	tests/Api/ConferenceApiTest.php	/^        $data = $this->parseJson($response);$/;"	v
data	tests/Api/MeApiTest.php	/^        $data = $this->parseJson($response);$/;"	v
data	tests/Api/OAuthTest.php	/^        $data = json_decode($response->getContent());$/;"	v
data	tests/Api/TalkApiTest.php	/^        $data = $this->parseJson($response);$/;"	v
data	tests/Api/TalkApiTest.php	/^        $data = collect($this->parseJson($response)->data);$/;"	v
databasePath	bootstrap/cache/compiled.php	/^        $this->databasePath = $path;$/;"	v
databasePath	bootstrap/cache/compiled.php	/^    protected $databasePath;$/;"	v
databasePath	bootstrap/cache/compiled.php	/^    public function databasePath()$/;"	f
date	bootstrap/cache/compiled.php	/^            $date = clone $date;$/;"	v
date	bootstrap/cache/compiled.php	/^    public function date($date)$/;"	f
date	bootstrap/cache/compiled.php	/^    public function setExpires(\\DateTime $date = null)$/;"	v
date	bootstrap/cache/compiled.php	/^    public function setLastModified(\\DateTime $date = null)$/;"	v
dateFormat	bootstrap/cache/compiled.php	/^        $this->dateFormat = $dateFormat ?: static::SIMPLE_DATE;$/;"	v
dateFormat	bootstrap/cache/compiled.php	/^        $this->dateFormat = $dateFormat;$/;"	v
dateFormat	bootstrap/cache/compiled.php	/^        $this->dateFormat = $format;$/;"	v
dateFormat	bootstrap/cache/compiled.php	/^        $this->dateFormat = 'Y-m-d';$/;"	v
dateFormat	bootstrap/cache/compiled.php	/^    protected $dateFormat;$/;"	v
dateFormat	bootstrap/cache/compiled.php	/^    public function __construct($format = null, $dateFormat = null, $allowInlineLineBreaks = false, $ignoreEmptyContextAndExtra = false)$/;"	v
dates	app/models/Conference.php	/^    protected $dates = [$/;"	v
dates	bootstrap/cache/compiled.php	/^    private $dates = array();$/;"	v
dates	bootstrap/cache/compiled.php	/^    protected $dates = [];$/;"	v
days	bootstrap/cache/compiled.php	/^    public function useDailyFiles($path, $days = 0, $level = 'debug')$/;"	v
days	bootstrap/cache/compiled.php	/^    public function useDailyFiles($path, $days = 0, $level = 'debug');$/;"	v
debug	bootstrap/cache/compiled.php	/^        $this->debug = $debug;$/;"	v
debug	bootstrap/cache/compiled.php	/^    private $debug;$/;"	v
debug	bootstrap/cache/compiled.php	/^    public function debug($message, array $context = [])$/;"	f
debug	bootstrap/cache/compiled.php	/^    public function debug($message, array $context = []);$/;"	f
debug	bootstrap/cache/compiled.php	/^    public function debug($message, array $context = array())$/;"	f
debug	bootstrap/cache/compiled.php	/^    public function debug($message, array $context = array());$/;"	f
decodedPath	bootstrap/cache/compiled.php	/^    public function decodedPath()$/;"	f
decorate	bootstrap/cache/compiled.php	/^    private function decorate($content, $css)$/;"	f
decrement	bootstrap/cache/compiled.php	/^    protected function decrement($column, $amount = 1, array $extra = [])$/;"	f
decrementRender	bootstrap/cache/compiled.php	/^    public function decrementRender()$/;"	f
decrypt	bootstrap/cache/compiled.php	/^    protected function decrypt(Request $request)$/;"	f
decrypt	bootstrap/cache/compiled.php	/^    public function decrypt($payload)$/;"	f
decrypt	bootstrap/cache/compiled.php	/^    public function decrypt($payload);$/;"	f
decryptArray	bootstrap/cache/compiled.php	/^    protected function decryptArray(array $cookie)$/;"	f
decryptCookie	bootstrap/cache/compiled.php	/^    protected function decryptCookie($cookie)$/;"	f
decrypted	bootstrap/cache/compiled.php	/^        $decrypted = [];$/;"	v
decrypted	bootstrap/cache/compiled.php	/^        $decrypted = \\openssl_decrypt($payload['value'], $this->cipher, $this->key, 0, $iv);$/;"	v
default	bootstrap/cache/compiled.php	/^    public function cookie($key = null, $default = null)$/;"	v
default	bootstrap/cache/compiled.php	/^    public function file($key = null, $default = null)$/;"	v
default	bootstrap/cache/compiled.php	/^    public function filter($key, $default = null, $filter = FILTER_DEFAULT, $options = array())$/;"	v
default	bootstrap/cache/compiled.php	/^    public function get($key, $default = null)$/;"	v
default	bootstrap/cache/compiled.php	/^    public function get($key, $default = null);$/;"	v
default	bootstrap/cache/compiled.php	/^    public function get($key, $default = null, $first = true)$/;"	v
default	bootstrap/cache/compiled.php	/^    public function get($name, $default = null)$/;"	v
default	bootstrap/cache/compiled.php	/^    public function get($name, $default = null);$/;"	v
default	bootstrap/cache/compiled.php	/^    public function getAlnum($key, $default = '')$/;"	v
default	bootstrap/cache/compiled.php	/^    public function getAlpha($key, $default = '')$/;"	v
default	bootstrap/cache/compiled.php	/^    public function getAttribute($name, $default = null)$/;"	v
default	bootstrap/cache/compiled.php	/^    public function getBoolean($key, $default = false)$/;"	v
default	bootstrap/cache/compiled.php	/^    public function getDate($key, \\DateTime $default = null)$/;"	v
default	bootstrap/cache/compiled.php	/^    public function getDigits($key, $default = '')$/;"	v
default	bootstrap/cache/compiled.php	/^    public function getInt($key, $default = 0)$/;"	v
default	bootstrap/cache/compiled.php	/^    public function getOldInput($key = null, $default = null)$/;"	v
default	bootstrap/cache/compiled.php	/^    public function getOriginal($key = null, $default = null)$/;"	v
default	bootstrap/cache/compiled.php	/^    public function getParameter($name, $default = null)$/;"	v
default	bootstrap/cache/compiled.php	/^    public function header($key = null, $default = null)$/;"	v
default	bootstrap/cache/compiled.php	/^    public function input($key = null, $default = null)$/;"	v
default	bootstrap/cache/compiled.php	/^    public function input($key, $default = null)$/;"	v
default	bootstrap/cache/compiled.php	/^    public function json($key = null, $default = null)$/;"	v
default	bootstrap/cache/compiled.php	/^    public function old($key = null, $default = null)$/;"	v
default	bootstrap/cache/compiled.php	/^    public function parameter($name, $default = null)$/;"	v
default	bootstrap/cache/compiled.php	/^    public function pull($key, $default = null)$/;"	v
default	bootstrap/cache/compiled.php	/^    public function query($key = null, $default = null)$/;"	v
default	bootstrap/cache/compiled.php	/^    public function queued($key, $default = null)$/;"	v
default	bootstrap/cache/compiled.php	/^    public function segment($index, $default = null)$/;"	v
default	bootstrap/cache/compiled.php	/^    public function server($key = null, $default = null)$/;"	v
default	bootstrap/cache/compiled.php	/^    public function shared($key, $default = null)$/;"	v
default	bootstrap/cache/compiled.php	/^    public function yieldContent($section, $default = '')$/;"	v
default	bootstrap/cache/compiled.php	/^    public function yieldPushContent($section, $default = '')$/;"	v
default	bootstrap/cache/compiled.php	/^    public static function get($array, $key, $default = null)$/;"	v
default	bootstrap/cache/compiled.php	/^    public static function pull(&$array, $key, $default = null)$/;"	v
default	bootstrap/cache/compiled.php	/^    public static function resolveCurrentPage($pageName = 'page', $default = 1)$/;"	v
defaultLocale	bootstrap/cache/compiled.php	/^        $this->defaultLocale = $locale;$/;"	v
defaultLocale	bootstrap/cache/compiled.php	/^    protected $defaultLocale = 'en';$/;"	v
defaultSeparator	bootstrap/cache/compiled.php	/^        $defaultSeparator = $isHost ? '.' : '\/';$/;"	v
defaults	bootstrap/cache/compiled.php	/^        $defaults = [$this->getKeyName(), $this->getCreatedAtColumn(), $this->getUpdatedAtColumn()];$/;"	v
defaults	bootstrap/cache/compiled.php	/^        $defaults = [static::CREATED_AT, static::UPDATED_AT];$/;"	v
defaults	bootstrap/cache/compiled.php	/^        $this->defaults = $data['defaults'];$/;"	v
defaults	bootstrap/cache/compiled.php	/^        $this->defaults = array();$/;"	v
defaults	bootstrap/cache/compiled.php	/^    private $defaults = array();$/;"	v
defaults	bootstrap/cache/compiled.php	/^    protected $defaults = [];$/;"	v
defaults	bootstrap/cache/compiled.php	/^    public function __construct($path, array $defaults = array(), array $requirements = array(), array $options = array(), $host = '', $schemes = array(), $methods = array(), $condition = '')$/;"	v
defaults	bootstrap/cache/compiled.php	/^    public function defaults($key, $value)$/;"	f
defer	bootstrap/cache/compiled.php	/^    protected $defer = false;$/;"	v
defer	bootstrap/cache/compiled.php	/^    protected $defer = true;$/;"	v
deferredServices	bootstrap/cache/compiled.php	/^        $this->deferredServices = $services;$/;"	v
deferredServices	bootstrap/cache/compiled.php	/^        $this->deferredServices = [];$/;"	v
deferredServices	bootstrap/cache/compiled.php	/^        $this->deferredServices = array_merge($this->deferredServices, $services);$/;"	v
deferredServices	bootstrap/cache/compiled.php	/^    protected $deferredServices = [];$/;"	v
define	bootstrap/cache/compiled.php	/^    public function define($ability, $callback)$/;"	f
define	bootstrap/cache/compiled.php	/^    public function define($ability, $callback);$/;"	f
delete	app/Http/Controllers/AccountController.php	/^    public function delete()$/;"	f
delete	bootstrap/cache/compiled.php	/^    public function delete($paths)$/;"	f
delete	bootstrap/cache/compiled.php	/^    public function delete($uri, $action = null)$/;"	f
delete	bootstrap/cache/compiled.php	/^    public function delete($uri, $action);$/;"	f
delete	bootstrap/cache/compiled.php	/^    public function delete()$/;"	f
deleteDirectory	bootstrap/cache/compiled.php	/^    public function deleteDirectory($directory, $preserve = false)$/;"	f
deleted	bootstrap/cache/compiled.php	/^    public static function deleted($callback, $priority = 0)$/;"	f
deleting	bootstrap/cache/compiled.php	/^    public static function deleting($callback, $priority = 0)$/;"	f
delimiter	bootstrap/cache/compiled.php	/^        $delimiter = ViewFinderInterface::HINT_PATH_DELIMITER;$/;"	v
delimiter	bootstrap/cache/compiled.php	/^    public static function snake($value, $delimiter = '_')$/;"	v
denies	bootstrap/cache/compiled.php	/^    public function denies($ability, $arguments = [])$/;"	f
denies	bootstrap/cache/compiled.php	/^    public function denies($ability, $arguments = []);$/;"	f
dependencies	bootstrap/cache/compiled.php	/^        $dependencies = $constructor->getParameters();$/;"	v
dependencies	bootstrap/cache/compiled.php	/^        $dependencies = $this->getMethodDependencies($callback, $parameters);$/;"	v
dependencies	bootstrap/cache/compiled.php	/^        $dependencies = [];$/;"	v
dependency	bootstrap/cache/compiled.php	/^            $dependency = $parameter->getClass();$/;"	v
depth	bootstrap/cache/compiled.php	/^    public function depth($level)$/;"	f
depth	bootstrap/cache/compiled.php	/^    public static function flatten($array, $depth = INF)$/;"	v
depths	bootstrap/cache/compiled.php	/^    private $depths = array();$/;"	v
description	app/Console/Commands/GenerateOAuthClient.php	/^    protected $description = 'Generate OAuth Client Details. NOTE: Does not insert into db right now! OUTPUT ONLY.';$/;"	v
description	app/Console/Commands/Inspire.php	/^    protected $description = 'Display an inspiring quote';$/;"	v
description	app/Console/Commands/TweetImportantCFPDates.php	/^    protected $description = 'Send out a tweet with important upcoming CFP dates.';$/;"	v
description	app/Console/Commands/syncJoindInEvents.php	/^    protected $description = 'Sync down Joind.in events.';$/;"	v
description	app/models/TalkRevision.php	/^    protected $description;$/;"	v
description	composer.json	/^    "description": "The Laravel Framework.",$/;"	f
destroy	app/Http/Controllers/AccountController.php	/^    public function destroy()$/;"	f
destroy	app/Http/Controllers/BiosController.php	/^    public function destroy($id)$/;"	f
destroy	app/Http/Controllers/ConferencesController.php	/^    public function destroy($id)$/;"	f
destroy	app/Http/Controllers/SubmissionsController.php	/^    public function destroy(Request $request)$/;"	f
destroy	app/Http/Controllers/TalksController.php	/^    public function destroy($id)$/;"	f
destroy	bootstrap/cache/compiled.php	/^    public static function destroy($ids)$/;"	f
detect	bootstrap/cache/compiled.php	/^    public function detect(Closure $callback, $consoleArgs = null)$/;"	f
detectAndCleanUtf8	bootstrap/cache/compiled.php	/^    public function detectAndCleanUtf8(&$data)$/;"	f
detectConsoleEnvironment	bootstrap/cache/compiled.php	/^    protected function detectConsoleEnvironment(Closure $callback, array $args)$/;"	f
detectEnvironment	bootstrap/cache/compiled.php	/^    public function detectEnvironment(Closure $callback)$/;"	f
detectWebEnvironment	bootstrap/cache/compiled.php	/^    protected function detectWebEnvironment(Closure $callback)$/;"	f
devDependencies	package.json	/^  "devDependencies": {$/;"	f
diff	bootstrap/cache/compiled.php	/^    public function diff($items)$/;"	f
diffKeys	bootstrap/cache/compiled.php	/^    public function diffKeys($items)$/;"	f
dir	bootstrap/cache/compiled.php	/^            if (isset($targetDirs[$i]) && $dir === $targetDirs[$i]) {$/;"	v
dir	bootstrap/cache/compiled.php	/^        $dir = $this->getDirFromStream($this->url);$/;"	v
dirCreated	bootstrap/cache/compiled.php	/^        $this->dirCreated = true;$/;"	v
dirCreated	bootstrap/cache/compiled.php	/^    private $dirCreated;$/;"	v
directive	bootstrap/cache/compiled.php	/^    public function directive($name, callable $handler)$/;"	f
directories	bootstrap/cache/compiled.php	/^        $directories = [];$/;"	v
directories	bootstrap/cache/compiled.php	/^    public function directories($directory)$/;"	f
directories	bootstrap/cache/compiled.php	/^    public function directories()$/;"	f
directory	bootstrap/cache/compiled.php	/^        $directory = dirname($file->getRealPath());$/;"	v
directorySeparator	bootstrap/cache/compiled.php	/^            $this->directorySeparator = DIRECTORY_SEPARATOR;$/;"	v
directorySeparator	bootstrap/cache/compiled.php	/^    private $directorySeparator = '\/';$/;"	v
dirname	bootstrap/cache/compiled.php	/^    public function dirname($path)$/;"	f
dirs	bootstrap/cache/compiled.php	/^        $this->dirs = array_merge($this->dirs, $resolvedDirs);$/;"	v
dirs	bootstrap/cache/compiled.php	/^    private $dirs = array();$/;"	v
dirty	bootstrap/cache/compiled.php	/^            $dirty = $this->getDirty();$/;"	v
dirty	bootstrap/cache/compiled.php	/^        $dirty = $this->getDirty();$/;"	v
dirty	bootstrap/cache/compiled.php	/^        $dirty = [];$/;"	v
disableFor	bootstrap/cache/compiled.php	/^    public function disableFor($cookieName)$/;"	f
disconnect	bootstrap/cache/compiled.php	/^    public function disconnect($name = null)$/;"	f
dispatch	bootstrap/cache/compiled.php	/^    protected function dispatch($job)$/;"	f
dispatch	bootstrap/cache/compiled.php	/^    public function dispatch($command)$/;"	f
dispatch	bootstrap/cache/compiled.php	/^    public function dispatch($command);$/;"	f
dispatch	bootstrap/cache/compiled.php	/^    public function dispatch(Request $request)$/;"	f
dispatch	bootstrap/cache/compiled.php	/^    public function dispatch(Route $route, Request $request, $controller, $method)$/;"	f
dispatchNow	bootstrap/cache/compiled.php	/^    public function dispatchNow($command)$/;"	f
dispatchNow	bootstrap/cache/compiled.php	/^    public function dispatchNow($command);$/;"	f
dispatchNow	bootstrap/cache/compiled.php	/^    public function dispatchNow($job)$/;"	f
dispatchToQueue	bootstrap/cache/compiled.php	/^    public function dispatchToQueue($command)$/;"	f
dispatchToQueue	bootstrap/cache/compiled.php	/^    public function dispatchToQueue($command);$/;"	f
dispatchToRoute	bootstrap/cache/compiled.php	/^    public function dispatchToRoute(Request $request)$/;"	f
dispatchToRouter	bootstrap/cache/compiled.php	/^    protected function dispatchToRouter()$/;"	f
dispatcher	bootstrap/cache/compiled.php	/^            $this->dispatcher = $dispatcher;$/;"	v
dispatcher	bootstrap/cache/compiled.php	/^        $this->dispatcher = $dispatcher;$/;"	v
dispatcher	bootstrap/cache/compiled.php	/^    protected $dispatcher;$/;"	v
dispatcher	bootstrap/cache/compiled.php	/^    protected static $dispatcher;$/;"	v
dispatcher	bootstrap/cache/compiled.php	/^    public function __construct(MonologLogger $monolog, Dispatcher $dispatcher = null)$/;"	v
divide	bootstrap/cache/compiled.php	/^    public static function divide($array)$/;"	f
doctrine/dbal	composer.json	/^        "doctrine\/dbal": "~2.5",$/;"	f
domain	bootstrap/cache/compiled.php	/^        $domain = $this->getRouteDomain($route, $parameters);$/;"	v
domain	bootstrap/cache/compiled.php	/^        $this->domain = $domain;$/;"	v
domain	bootstrap/cache/compiled.php	/^    protected $domain = null;$/;"	v
domain	bootstrap/cache/compiled.php	/^    protected $domain;$/;"	v
domain	bootstrap/cache/compiled.php	/^    public function domain()$/;"	f
domainAndUri	bootstrap/cache/compiled.php	/^        $domainAndUri = $route->domain() . $route->getUri();$/;"	v
doneRendering	bootstrap/cache/compiled.php	/^    public function doneRendering()$/;"	f
dontEncode	bootstrap/cache/compiled.php	/^    protected $dontEncode = ['%2F' => '\/', '%40' => '@', '%3A' => ':', '%3B' => ';', '%2C' => ',', '%3D' => '=', '%2B' => '+', '%21' => '!', '%2A' => '*', '%7C' => '|', '%3F' => '?', '%26' => '&', '%23' => '#', '%25' => '%'];$/;"	v
dontFlash	bootstrap/cache/compiled.php	/^    protected $dontFlash = ['password', 'password_confirmation'];$/;"	v
dontReport	app/Exceptions/Handler.php	/^    protected $dontReport = [$/;"	v
dot	bootstrap/cache/compiled.php	/^    public static function dot($array, $prepend = '')$/;"	f
down	database/migrations/2013_12_03_023320_create_users_table.php	/^    public function down()$/;"	f
down	database/migrations/2013_12_03_160343_create_talks_table.php	/^    public function down()$/;"	f
down	database/migrations/2014_02_20_141801_add_remember_token.php	/^    public function down()$/;"	f
down	database/migrations/2014_04_24_110151_create_oauth_scopes_table.php	/^    public function down()$/;"	f
down	database/migrations/2014_04_24_110304_create_oauth_grants_table.php	/^    public function down()$/;"	f
down	database/migrations/2014_04_24_110403_create_oauth_grant_scopes_table.php	/^    public function down()$/;"	f
down	database/migrations/2014_04_24_110459_create_oauth_clients_table.php	/^    public function down()$/;"	f
down	database/migrations/2014_04_24_110557_create_oauth_client_endpoints_table.php	/^    public function down()$/;"	f
down	database/migrations/2014_04_24_110705_create_oauth_client_scopes_table.php	/^    public function down()$/;"	f
down	database/migrations/2014_04_24_110817_create_oauth_client_grants_table.php	/^    public function down()$/;"	f
down	database/migrations/2014_04_24_111002_create_oauth_sessions_table.php	/^    public function down()$/;"	f
down	database/migrations/2014_04_24_111109_create_oauth_session_scopes_table.php	/^    public function down()$/;"	f
down	database/migrations/2014_04_24_111254_create_oauth_auth_codes_table.php	/^    public function down()$/;"	f
down	database/migrations/2014_04_24_111403_create_oauth_auth_code_scopes_table.php	/^    public function down()$/;"	f
down	database/migrations/2014_04_24_111518_create_oauth_access_tokens_table.php	/^    public function down()$/;"	f
down	database/migrations/2014_04_24_111657_create_oauth_access_token_scopes_table.php	/^    public function down()$/;"	f
down	database/migrations/2014_04_24_111810_create_oauth_refresh_tokens_table.php	/^    public function down()$/;"	f
down	database/migrations/2014_10_12_100000_create_password_resets_table.php	/^    public function down()$/;"	f
down	database/migrations/2014_12_20_194450_drop_talk_slug.php	/^    public function down()$/;"	f
down	database/migrations/2014_12_20_194826_ununique_talk_title.php	/^    public function down()$/;"	f
down	database/migrations/2014_12_20_201427_uuidize_talks_table.php	/^    public function down()$/;"	f
down	database/migrations/2014_12_20_205957_create_conferences_table.php	/^    public function down()$/;"	f
down	database/migrations/2014_12_21_035318_flesh_out_conferences.php	/^    public function down()$/;"	f
down	database/migrations/2014_12_21_165443_add_joindin_id_to_conferences_table.php	/^    public function down()$/;"	f
down	database/migrations/2014_12_21_214307_allow_null_conference_dates.php	/^    public function down()$/;"	f
down	database/migrations/2014_12_22_203655_add_favorites_table.php	/^    public function down()$/;"	f
down	database/migrations/2014_12_23_130853_version_and_revision_talks.php	/^    public function down()$/;"	f
down	database/migrations/2015_01_05_170059_add_roles_to_users.php	/^    public function down()$/;"	f
down	database/migrations/2015_01_08_145004_drop_unique_conference_title.php	/^    public function down()$/;"	f
down	database/migrations/2015_01_19_210855_allow_null_conference_dates_take_two.php	/^    public function down()$/;"	f
down	database/migrations/2015_01_30_023351_create_submissions_table.php	/^    public function down()$/;"	f
down	database/migrations/2015_05_08_033314_create_bios_table.php	/^    public function down()$/;"	f
down	database/migrations/2015_05_24_113910_drop_versions.php	/^    public function down()$/;"	f
down	database/migrations/2015_07_09_224728_remove_outline.php	/^    public function down()$/;"	f
down	database/migrations/2015_08_27_125402_add_public_profile_fields_to_users_table.php	/^    public function down()$/;"	f
down	database/migrations/2015_10_25_125123_add_talk_revision_slides.php	/^    public function down()$/;"	f
down	database/migrations/2015_11_18_151911_merge_first_and_last_name_into_name.php	/^    public function down()$/;"	f
down	database/migrations/2015_11_22_085323_add_public_field_to_talks.php	/^    public function down()$/;"	f
down	database/migrations/2015_11_24_235241_add_public_field_to_bios_table.php	/^    public function down()$/;"	f
down	database/migrations/2016_06_25_234552_add_cfp_url_to_conferences_table.php	/^    public function down()$/;"	f
download	bootstrap/cache/compiled.php	/^    public function download($file, $name = null, array $headers = [], $disposition = 'attachment');$/;"	f
driver	bootstrap/cache/compiled.php	/^        $driver = $config['driver'];$/;"	v
driver	bootstrap/cache/compiled.php	/^        $driver = $driver ?: $this->getDefaultDriver();$/;"	v
driver	bootstrap/cache/compiled.php	/^    public function driver($driver = null)$/;"	f
driverMethod	bootstrap/cache/compiled.php	/^            $driverMethod = 'create' . ucfirst($config['driver']) . 'Driver';$/;"	v
drivers	bootstrap/cache/compiled.php	/^    protected $drivers = [];$/;"	v
dropStaleInstances	bootstrap/cache/compiled.php	/^    protected function dropStaleInstances($abstract)$/;"	f
dup	bootstrap/cache/compiled.php	/^        $dup = clone $this;$/;"	v
duplicate	bootstrap/cache/compiled.php	/^    protected function duplicate(Cookie $c, $value)$/;"	f
duplicate	bootstrap/cache/compiled.php	/^    public function duplicate(array $query = null, array $request = null, array $attributes = null, array $cookies = null, array $files = null, array $server = null)$/;"	f
e	app/Exceptions/Handler.php	/^            $e = new NotFoundHttpException($e->getMessage(), $e);$/;"	v
e	bootstrap/cache/compiled.php	/^            $e = array('type' => $type, 'file' => $exception->getFile(), 'line' => $exception->getLine(), 'level' => error_reporting(), 'stack' => $exception->getTrace());$/;"	v
e	bootstrap/cache/compiled.php	/^            $e = error_reporting($level);$/;"	v
e	bootstrap/cache/compiled.php	/^            $e = new FatalThrowableError($e);$/;"	v
e	bootstrap/cache/compiled.php	/^        $e = compact('type', 'file', 'line', 'level');$/;"	v
e	bootstrap/cache/compiled.php	/^        $e = md5("{$type}\/{$line}\/{$file}/;"	v
e	bootstrap/cache/compiled.php	/^        $e = new ErrorException($this->getMessage($e), 0, 1, $e->getFile(), $e->getLine(), $e);$/;"	v
each	bootstrap/cache/compiled.php	/^    public function each(callable $callback)$/;"	f
echoFormat	bootstrap/cache/compiled.php	/^        $this->echoFormat = $format;$/;"	v
echoFormat	bootstrap/cache/compiled.php	/^    protected $echoFormat = 'e(%s)';$/;"	v
edit	app/Http/Controllers/AccountController.php	/^    public function edit()$/;"	f
edit	app/Http/Controllers/BiosController.php	/^    public function edit($id)$/;"	f
edit	app/Http/Controllers/ConferencesController.php	/^    public function edit($id)$/;"	f
edit	app/Http/Controllers/TalksController.php	/^    public function edit($talkId)$/;"	f
elements	bootstrap/cache/compiled.php	/^            $elements = explode(',', $host);$/;"	v
elixir	gulpfile.js	/^var elixir = require('laravel-elixir');$/;"	v
email	bootstrap/cache/compiled.php	/^        $email = $request->input('email');$/;"	v
emerg	bootstrap/cache/compiled.php	/^    public function emerg($message, array $context = array())$/;"	f
emergency	bootstrap/cache/compiled.php	/^    public function emergency($message, array $context = [])$/;"	f
emergency	bootstrap/cache/compiled.php	/^    public function emergency($message, array $context = array())$/;"	f
emergency	bootstrap/cache/compiled.php	/^    public function emergency($message, array $context = array());$/;"	f
empty	bootstrap/cache/compiled.php	/^        $empty = '$__empty_' . $this->forelseCounter--;$/;"	v
empty	bootstrap/cache/compiled.php	/^        $empty = '$__empty_' . ++$this->forelseCounter;$/;"	v
empty	bootstrap/cache/compiled.php	/^    public function renderEach($view, $data, $iterator, $empty = 'raw|')$/;"	v
empty_dates_are_treated_as_null	tests/CreateConferenceFormTest.php	/^    public function empty_dates_are_treated_as_null()$/;"	f
enableHttpMethodParameterOverride	bootstrap/cache/compiled.php	/^    public static function enableHttpMethodParameterOverride()$/;"	f
encodings	bootstrap/cache/compiled.php	/^        $this->encodings = null;$/;"	v
encodings	bootstrap/cache/compiled.php	/^        return $this->encodings = array_keys(AcceptHeader::fromString($this->headers->get('Accept-Encoding'))->all());$/;"	v
encodings	bootstrap/cache/compiled.php	/^    protected $encodings;$/;"	v
encrypt	bootstrap/cache/compiled.php	/^    protected function encrypt(Response $response)$/;"	f
encrypt	bootstrap/cache/compiled.php	/^    public function encrypt($value)$/;"	f
encrypt	bootstrap/cache/compiled.php	/^    public function encrypt($value);$/;"	f
encrypter	bootstrap/cache/compiled.php	/^        $this->encrypter = $encrypter;$/;"	v
encrypter	bootstrap/cache/compiled.php	/^    protected $encrypter;$/;"	v
end	bootstrap/cache/compiled.php	/^                if ($start === $delimiters[0] && $end === $delimiters[1]) {$/;"	v
end	bootstrap/cache/compiled.php	/^            $end = substr($m[1], -1);$/;"	v
ends	app/Console/Commands/TweetImportantCFPDates.php	/^            $ends = $conference->cfp_ends_at;$/;"	v
endsAtDisplay	app/models/Conference.php	/^    public function endsAtDisplay()$/;"	f
endsAtSet	app/models/Conference.php	/^    public function endsAtSet()$/;"	f
endsWith	bootstrap/cache/compiled.php	/^    public static function endsWith($haystack, $needles)$/;"	f
engine	bootstrap/cache/compiled.php	/^        $engine = $this->extensions[$extension];$/;"	v
engine	bootstrap/cache/compiled.php	/^        $this->engine = $engine;$/;"	v
engine	bootstrap/cache/compiled.php	/^    protected $engine;$/;"	v
engines	bootstrap/cache/compiled.php	/^        $this->engines = $engines;$/;"	v
engines	bootstrap/cache/compiled.php	/^    protected $engines;$/;"	v
ensureIEOverSSLCompatibility	bootstrap/cache/compiled.php	/^    protected function ensureIEOverSSLCompatibility(Request $request)$/;"	f
env	bootstrap/cache/compiled.php	/^            $env = new Factory($resolver, $finder, $app['events']);$/;"	v
environment	bootstrap/cache/compiled.php	/^    public function environment()$/;"	f
environment	bootstrap/cache/compiled.php	/^    public function environment();$/;"	f
environmentFile	bootstrap/cache/compiled.php	/^        $this->environmentFile = $file;$/;"	v
environmentFile	bootstrap/cache/compiled.php	/^    protected $environmentFile = '.env';$/;"	v
environmentFile	bootstrap/cache/compiled.php	/^    public function environmentFile()$/;"	f
environmentFilePath	bootstrap/cache/compiled.php	/^    public function environmentFilePath()$/;"	f
environmentPath	bootstrap/cache/compiled.php	/^        $this->environmentPath = $path;$/;"	v
environmentPath	bootstrap/cache/compiled.php	/^    protected $environmentPath;$/;"	v
environmentPath	bootstrap/cache/compiled.php	/^    public function environmentPath()$/;"	f
equals	bootstrap/cache/compiled.php	/^    public static function equals($knownString, $userInput)$/;"	f
err	bootstrap/cache/compiled.php	/^    public function err($message, array $context = array())$/;"	f
error	bootstrap/cache/compiled.php	/^                    $error = array('type' => $type, 'message' => $message = $exception->getMessage(), 'file' => $e['file'], 'line' => $e['line']);$/;"	v
error	bootstrap/cache/compiled.php	/^            $error = error_get_last();$/;"	v
error	bootstrap/cache/compiled.php	/^    public function error($message, array $context = [])$/;"	f
error	bootstrap/cache/compiled.php	/^    public function error($message, array $context = []);$/;"	f
error	bootstrap/cache/compiled.php	/^    public function error($message, array $context = array())$/;"	f
error	bootstrap/cache/compiled.php	/^    public function error($message, array $context = array());$/;"	f
error	bootstrap/cache/compiled.php	/^    public function handleException($exception, array $error = null)$/;"	v
error	bootstrap/cache/compiled.php	/^    public static function handleFatalError(array $error = null)$/;"	v
errorBag	bootstrap/cache/compiled.php	/^    protected $errorBag = 'default';$/;"	v
errorBag	bootstrap/cache/compiled.php	/^    protected function errorBag()$/;"	f
errorMessage	bootstrap/cache/compiled.php	/^            $this->errorMessage = null;$/;"	v
errorMessage	bootstrap/cache/compiled.php	/^        $this->errorMessage = preg_replace('{^(fopen|mkdir)\\\\(.*?\\\\): }', '', $msg);$/;"	v
errorMessage	bootstrap/cache/compiled.php	/^    private $errorMessage;$/;"	v
error_messages_are_available_if_creating_a_conference_fails	tests/CreateConferenceFormTest.php	/^    public function error_messages_are_available_if_creating_a_conference_fails()$/;"	f
errors	app/Exceptions/ValidationException.php	/^        $this->errors = $errors;$/;"	v
errors	app/Exceptions/ValidationException.php	/^    protected $errors;$/;"	v
errors	app/Exceptions/ValidationException.php	/^    public function errors()$/;"	f
errors	bootstrap/cache/compiled.php	/^            $errors = self::$stackedErrors;$/;"	v
escapeHtml	bootstrap/cache/compiled.php	/^    private function escapeHtml($str)$/;"	f
escaped	bootstrap/cache/compiled.php	/^    public function setContentTags($openTag, $closeTag, $escaped = false)$/;"	v
escapedTags	bootstrap/cache/compiled.php	/^    protected $escapedTags = ['{{{', '}}}'];$/;"	v
escaping	bootstrap/cache/compiled.php	/^                    $escaping = false;$/;"	v
escaping	bootstrap/cache/compiled.php	/^                    $escaping = true;$/;"	v
escaping	bootstrap/cache/compiled.php	/^            $escaping = false;$/;"	v
escaping	bootstrap/cache/compiled.php	/^        $escaping = false;$/;"	v
etag	bootstrap/cache/compiled.php	/^                $etag = '"' . $etag . '"';$/;"	v
evaluatePath	bootstrap/cache/compiled.php	/^    protected function evaluatePath($__path, $__data)$/;"	f
event	app/JoindIn/ConferenceImporter.php	/^            $event = $this->client->getEvent((int)$eventId);$/;"	v
event	app/JoindIn/ConferenceImporter.php	/^        $event = $event[0];$/;"	v
event	app/JoindIn/ConferenceImporter.php	/^        $event = $this->getJoindInEvent($eventId);$/;"	v
event	bootstrap/cache/compiled.php	/^        $event = "eloquent.{$event}: " . static::class;$/;"	v
event	bootstrap/cache/compiled.php	/^        foreach ($this->listens() as $event => $listeners) {$/;"	v
events	bootstrap/cache/compiled.php	/^        $events = $this->app['events'];$/;"	v
events	bootstrap/cache/compiled.php	/^        $this->events = $events;$/;"	v
events	bootstrap/cache/compiled.php	/^    protected $events;$/;"	v
every	bootstrap/cache/compiled.php	/^    public function every($step, $offset = 0)$/;"	f
except	app/Http/Middleware/EncryptCookies.php	/^    protected $except = [$/;"	v
except	app/Http/Middleware/VerifyCsrfToken.php	/^    protected $except = [$/;"	v
except	bootstrap/cache/compiled.php	/^                $except = trim($except, '\/');$/;"	v
except	bootstrap/cache/compiled.php	/^        $except = $except ? array_unique(array_merge($except, $defaults)) : $defaults;$/;"	v
except	bootstrap/cache/compiled.php	/^        $this->except = array_merge($this->except, (array) $cookieName);$/;"	v
except	bootstrap/cache/compiled.php	/^    protected $except = [];$/;"	v
except	bootstrap/cache/compiled.php	/^    public function except($keys)$/;"	f
except	bootstrap/cache/compiled.php	/^    public function replicate(array $except = null)$/;"	v
except	bootstrap/cache/compiled.php	/^    public static function except($array, $keys)$/;"	f
exception	bootstrap/cache/compiled.php	/^                    $exception = $e;$/;"	v
exception	bootstrap/cache/compiled.php	/^                $exception = new FatalErrorException($handler->levels[$error['type']] . ': ' . $error['message'], 0, $error['type'], $error['file'], $error['line'], 2, true, $trace);$/;"	v
exception	bootstrap/cache/compiled.php	/^                $exception = new OutOfMemoryException($handler->levels[$error['type']] . ': ' . $error['message'], 0, $error['type'], $error['file'], $error['line'], 2, false, $trace);$/;"	v
exception	bootstrap/cache/compiled.php	/^            $exception = FlattenException::create($exception);$/;"	v
exception	bootstrap/cache/compiled.php	/^            $exception = new FatalThrowableError($exception);$/;"	v
exception	bootstrap/cache/compiled.php	/^        $this->exception = $e;$/;"	v
exception	bootstrap/cache/compiled.php	/^    public $exception;$/;"	v
exceptionHandler	bootstrap/cache/compiled.php	/^            $this->exceptionHandler = null;$/;"	v
exceptionHandler	bootstrap/cache/compiled.php	/^        $this->exceptionHandler = $handler;$/;"	v
exceptionHandler	bootstrap/cache/compiled.php	/^    private $exceptionHandler;$/;"	v
exclude	bootstrap/cache/compiled.php	/^            $this->exclude = array_merge($this->exclude, self::$vcsPatterns);$/;"	v
exclude	bootstrap/cache/compiled.php	/^        $this->exclude = array_merge($this->exclude, (array) $dirs);$/;"	v
exclude	bootstrap/cache/compiled.php	/^    private $exclude = array();$/;"	v
exclude	bootstrap/cache/compiled.php	/^    public function exclude($dirs)$/;"	f
excludedDirs	bootstrap/cache/compiled.php	/^    private $excludedDirs = array();$/;"	v
excludedPattern	bootstrap/cache/compiled.php	/^            $this->excludedPattern = '#(?:^|\/)(?:' . implode('|', $patterns) . ')(?:\/|$)#';$/;"	v
excludedPattern	bootstrap/cache/compiled.php	/^    private $excludedPattern;$/;"	v
exists	bootstrap/cache/compiled.php	/^            $this->exists = false;$/;"	v
exists	bootstrap/cache/compiled.php	/^        $exists = [];$/;"	v
exists	bootstrap/cache/compiled.php	/^        $this->exists = true;$/;"	v
exists	bootstrap/cache/compiled.php	/^    public $exists = false;$/;"	v
exists	bootstrap/cache/compiled.php	/^    public function exists($key)$/;"	f
exists	bootstrap/cache/compiled.php	/^    public function exists($path)$/;"	f
exists	bootstrap/cache/compiled.php	/^    public function exists($view)$/;"	f
exists	bootstrap/cache/compiled.php	/^    public function exists($view);$/;"	f
exists	bootstrap/cache/compiled.php	/^    public function newInstance($attributes = [], $exists = false)$/;"	v
exists	bootstrap/cache/compiled.php	/^    public static function exists($array, $key)$/;"	f
expected	bootstrap/cache/compiled.php	/^        $expected = $function->getParameters()[0];$/;"	v
expire	bootstrap/cache/compiled.php	/^            $expire = $expire->format('U');$/;"	v
expire	bootstrap/cache/compiled.php	/^            $expire = strtotime($expire);$/;"	v
expire	bootstrap/cache/compiled.php	/^        $this->expire = $expire;$/;"	v
expire	bootstrap/cache/compiled.php	/^    protected $expire;$/;"	v
expire	bootstrap/cache/compiled.php	/^    public function expire()$/;"	f
explodePluckParameters	bootstrap/cache/compiled.php	/^    protected static function explodePluckParameters($value, $key)$/;"	f
exploded	bootstrap/cache/compiled.php	/^                    $exploded = explode(':', base64_decode(substr($authorizationHeader, 6)), 2);$/;"	v
export	app/Http/Controllers/AccountController.php	/^        $export = [$/;"	v
export	app/Http/Controllers/AccountController.php	/^    public function export(\\Illuminate\\Contracts\\Filesystem\\Factory $storage)$/;"	f
exportName	app/Http/Controllers/AccountController.php	/^        $exportName = sprintf('export_%s.json', date('Y_m_d'));$/;"	v
expression	bootstrap/cache/compiled.php	/^            $expression = substr($expression, 1, -1);$/;"	v
expression	bootstrap/cache/compiled.php	/^        $expression = $this->stripParentheses($expression);$/;"	v
expression	bootstrap/cache/compiled.php	/^    public function where($name, $expression = null)$/;"	v
ext-mcrypt	composer.json	/^        "ext-mcrypt": "*",$/;"	f
extend	bootstrap/cache/compiled.php	/^    public function extend($abstract, Closure $closure)$/;"	f
extend	bootstrap/cache/compiled.php	/^    public function extend($abstract, Closure $closure);$/;"	f
extend	bootstrap/cache/compiled.php	/^    public function extend($driver, Closure $callback)$/;"	f
extend	bootstrap/cache/compiled.php	/^    public function extend($name, callable $resolver)$/;"	f
extend	bootstrap/cache/compiled.php	/^    public function extend(callable $compiler)$/;"	f
extendPush	bootstrap/cache/compiled.php	/^    protected function extendPush($section, $content)$/;"	f
extendSection	bootstrap/cache/compiled.php	/^    protected function extendSection($section, $content)$/;"	f
extendedPreferredLanguages	bootstrap/cache/compiled.php	/^        $extendedPreferredLanguages = array();$/;"	v
extenders	bootstrap/cache/compiled.php	/^    protected $extenders = [];$/;"	v
extension	bootstrap/cache/compiled.php	/^    public function extension($path)$/;"	f
extensions	bootstrap/cache/compiled.php	/^            $this->extensions = $extensions;$/;"	v
extensions	bootstrap/cache/compiled.php	/^        $extensions = array_keys($this->extensions);$/;"	v
extensions	bootstrap/cache/compiled.php	/^        $this->extensions = array_merge([$extension => $engine], $this->extensions);$/;"	v
extensions	bootstrap/cache/compiled.php	/^    protected $extensions = ['blade.php' => 'blade', 'php' => 'php'];$/;"	v
extensions	bootstrap/cache/compiled.php	/^    protected $extensions = ['blade.php', 'php'];$/;"	v
extensions	bootstrap/cache/compiled.php	/^    protected $extensions = [];$/;"	v
extensions	bootstrap/cache/compiled.php	/^    public function __construct(Filesystem $files, array $paths, array $extensions = null)$/;"	v
extra	bootstrap/cache/compiled.php	/^        $extra = $this->formatParameters($extra);$/;"	v
extra	bootstrap/cache/compiled.php	/^    public function to($path, $extra = [], $secure = null)$/;"	v
extra	bootstrap/cache/compiled.php	/^    public function to($path, $extra = [], $secure = null);$/;"	v
extraConditions	bootstrap/cache/compiled.php	/^    protected function attemptBasic(Request $request, $field, $extraConditions = [])$/;"	v
extraConditions	bootstrap/cache/compiled.php	/^    public function basic($field = 'email', $extraConditions = [])$/;"	v
extraConditions	bootstrap/cache/compiled.php	/^    public function onceBasic($field = 'email', $extraConditions = [])$/;"	v
extractAlias	bootstrap/cache/compiled.php	/^    protected function extractAlias(array $definition)$/;"	f
extractOptionalParameters	bootstrap/cache/compiled.php	/^    protected function extractOptionalParameters()$/;"	f
factory	bootstrap/cache/compiled.php	/^        $factory = $this->container->make(ValidationFactory::class);$/;"	v
factory	bootstrap/cache/compiled.php	/^        $this->factory = $factory;$/;"	v
factory	bootstrap/cache/compiled.php	/^    protected $factory;$/;"	v
failedAuthorization	bootstrap/cache/compiled.php	/^    protected function failedAuthorization()$/;"	f
failedValidation	bootstrap/cache/compiled.php	/^    protected function failedValidation(Validator $validator)$/;"	f
faker	bootstrap/cache/compiled.php	/^            $faker = $app->make(FakerGenerator::class);$/;"	v
faker	database/seeds/ConferencesSeeder.php	/^        $faker = Faker::create();$/;"	v
faker	database/seeds/UsersSeeder.php	/^        $faker = Faker::create();$/;"	v
falseBio	database/seeds/BiosSeeder.php	/^        $falseBio = $author->bios()->create(['nickname' => 'False Bio', 'body' => 'I am an elephant.']);$/;"	v
fatalExceptionFromError	bootstrap/cache/compiled.php	/^    protected function fatalExceptionFromError(array $error, $traceOffset = null)$/;"	f
favorite	app/Http/Controllers/ConferencesController.php	/^    public function favorite($conferenceId)$/;"	f
favoriteConference	tests/AccountTest.php	/^        $favoriteConference = Factory::build('conference');$/;"	v
favoritedConferences	app/User.php	/^    public function favoritedConferences()$/;"	f
file	bootstrap/autoload.php	/^| compiled class file which contains all of the classes commonly used$/;"	c
file	bootstrap/cache/compiled.php	/^                    $file = new UploadedFile($file['tmp_name'], $file['name'], $file['type'], $file['size'], $file['error']);$/;"	v
file	bootstrap/cache/compiled.php	/^                    $file = null;$/;"	v
file	bootstrap/cache/compiled.php	/^                $file = array_map(array($this, 'convertFileInformation'), $file);$/;"	v
file	bootstrap/cache/compiled.php	/^            $file = $this->server->get('SCRIPT_FILENAME', '');$/;"	v
file	bootstrap/cache/compiled.php	/^            $file = '.env';$/;"	v
file	bootstrap/cache/compiled.php	/^        $file = $app->environmentFile() . '.' . env('APP_ENV');$/;"	v
file	bootstrap/cache/compiled.php	/^        $file = $this->fixPhpFilesArray($file);$/;"	v
file	bootstrap/cache/compiled.php	/^        $file = preg_match('#[^\/\\\\\\\\]*$#', $path, $file) ? $file[0] : $path;$/;"	v
file	bootstrap/cache/compiled.php	/^    public function __construct($path, $file = '.env')$/;"	v
file	bootstrap/cache/compiled.php	/^    public function file($key = null, $default = null)$/;"	f
file	bootstrap/cache/compiled.php	/^    public function file($path, $data = [], $mergeData = [])$/;"	f
file	bootstrap/cache/compiled.php	/^    public function file($path, $data = [], $mergeData = []);$/;"	f
file	bootstrap/cache/compiled.php	/^    public function handleError($level, $message, $file = '', $line = 0, $context = [])$/;"	v
fileInfo	bootstrap/cache/compiled.php	/^        $fileInfo = pathinfo($this->filename);$/;"	v
fileKeys	bootstrap/cache/compiled.php	/^    private static $fileKeys = array('error', 'name', 'size', 'tmp_name', 'type');$/;"	v
fileLinkFormat	bootstrap/cache/compiled.php	/^        $this->fileLinkFormat = $fileLinkFormat ?: ini_get('xdebug.file_link_format') ?: get_cfg_var('xdebug.file_link_format');$/;"	v
fileLinkFormat	bootstrap/cache/compiled.php	/^        $this->fileLinkFormat = $format;$/;"	v
fileLinkFormat	bootstrap/cache/compiled.php	/^    private $fileLinkFormat;$/;"	v
filePath	bootstrap/cache/compiled.php	/^        $filePath = rtrim($path, DIRECTORY_SEPARATOR) . DIRECTORY_SEPARATOR . $file;$/;"	v
filePath	bootstrap/cache/compiled.php	/^        $this->filePath = $this->getFilePath($path, $file);$/;"	v
filePath	bootstrap/cache/compiled.php	/^    protected $filePath;$/;"	v
filePermission	bootstrap/cache/compiled.php	/^        $this->filePermission = $filePermission;$/;"	v
filePermission	bootstrap/cache/compiled.php	/^    protected $filePermission;$/;"	v
fileinfo	bootstrap/cache/compiled.php	/^        $fileinfo = $this->current();$/;"	v
filename	bootstrap/cache/compiled.php	/^            $filename = str_replace('\\\\', '\/', $filename);$/;"	v
filename	bootstrap/cache/compiled.php	/^        $filename = $this->current()->getRelativePathname();$/;"	v
filename	bootstrap/cache/compiled.php	/^        $filename = basename($this->server->get('SCRIPT_FILENAME'));$/;"	v
filename	bootstrap/cache/compiled.php	/^        $this->filename = $filename;$/;"	v
filename	bootstrap/cache/compiled.php	/^    protected $filename;$/;"	v
filenameFallback	bootstrap/cache/compiled.php	/^            $filenameFallback = $filename;$/;"	v
filenameFallback	bootstrap/cache/compiled.php	/^    public function makeDisposition($disposition, $filename, $filenameFallback = '')$/;"	v
filenameFormat	bootstrap/cache/compiled.php	/^        $this->filenameFormat = $filenameFormat;$/;"	v
filenameFormat	bootstrap/cache/compiled.php	/^        $this->filenameFormat = '{filename}-{date}';$/;"	v
filenameFormat	bootstrap/cache/compiled.php	/^    protected $filenameFormat;$/;"	v
files	bootstrap/cache/compiled.php	/^            $files = [$files];$/;"	v
files	bootstrap/cache/compiled.php	/^        $files = $current->files->all();$/;"	v
files	bootstrap/cache/compiled.php	/^        $files = $data;$/;"	v
files	bootstrap/cache/compiled.php	/^        $files = $this->files->all();$/;"	v
files	bootstrap/cache/compiled.php	/^        $files = [];$/;"	v
files	bootstrap/cache/compiled.php	/^        $files = is_array($files) ? array_filter($files) : $files;$/;"	v
files	bootstrap/cache/compiled.php	/^        $this->files = $files;$/;"	v
files	bootstrap/cache/compiled.php	/^        $this->files = clone $this->files;$/;"	v
files	bootstrap/cache/compiled.php	/^        $this->files = new FileBag($files);$/;"	v
files	bootstrap/cache/compiled.php	/^    protected $files;$/;"	v
files	bootstrap/cache/compiled.php	/^    public $files;$/;"	v
files	bootstrap/cache/compiled.php	/^    public function add(array $files = array())$/;"	v
files	bootstrap/cache/compiled.php	/^    public function files($directory)$/;"	f
files	bootstrap/cache/compiled.php	/^    public function files()$/;"	f
files	bootstrap/cache/compiled.php	/^    public function replace(array $files = array())$/;"	v
fill	bootstrap/cache/compiled.php	/^    public function fill(array $attributes)$/;"	f
fillOut	app/Services/CreateBioForm.php	/^    public static function fillOut($input, $user)$/;"	f
fillOut	app/Services/CreateConferenceForm.php	/^    public static function fillOut($input, $user)$/;"	f
fillable	app/User.php	/^    protected $fillable = ['email', 'password'];$/;"	v
fillable	app/models/Bio.php	/^    protected $fillable = [$/;"	v
fillable	app/models/Conference.php	/^    protected $fillable = [$/;"	v
fillable	bootstrap/cache/compiled.php	/^        $this->fillable = $fillable;$/;"	v
fillable	bootstrap/cache/compiled.php	/^    protected $fillable = [];$/;"	v
fillable	bootstrap/cache/compiled.php	/^    public function fillable(array $fillable)$/;"	f
fillableFromArray	bootstrap/cache/compiled.php	/^    protected function fillableFromArray(array $attributes)$/;"	f
filter	bootstrap/cache/compiled.php	/^    public function filter($key, $default = null, $filter = FILTER_DEFAULT, $options = array())$/;"	f
filter	bootstrap/cache/compiled.php	/^    public function filter($pattern)$/;"	f
filter	bootstrap/cache/compiled.php	/^    public function filter(\\Closure $closure)$/;"	f
filter	bootstrap/cache/compiled.php	/^    public function filter(callable $callback = null)$/;"	f
filtered	bootstrap/cache/compiled.php	/^        $filtered = [];$/;"	v
filters	bootstrap/cache/compiled.php	/^    private $filters = array();$/;"	v
find	bootstrap/cache/compiled.php	/^    public function find($name)$/;"	f
find	bootstrap/cache/compiled.php	/^    public function find($view);$/;"	f
findCallable	bootstrap/cache/compiled.php	/^    protected function findCallable(array $action)$/;"	f
findInPaths	bootstrap/cache/compiled.php	/^    protected function findInPaths($name, $paths)$/;"	f
findNamedPathView	bootstrap/cache/compiled.php	/^    protected function findNamedPathView($name)$/;"	f
findNextSeparator	bootstrap/cache/compiled.php	/^    private static function findNextSeparator($pattern)$/;"	f
findRoute	bootstrap/cache/compiled.php	/^    protected function findRoute($request)$/;"	f
finder	bootstrap/cache/compiled.php	/^            $finder = $app['view.finder'];$/;"	v
finder	bootstrap/cache/compiled.php	/^        $this->finder = $finder;$/;"	v
finder	bootstrap/cache/compiled.php	/^    protected $finder;$/;"	v
fingerprint	bootstrap/cache/compiled.php	/^    public function fingerprint()$/;"	f
finish	bootstrap/cache/compiled.php	/^    public static function finish($value, $cap)$/;"	f
finishSave	bootstrap/cache/compiled.php	/^    protected function finishSave(array $options)$/;"	f
fire	app/Console/Commands/TweetImportantCFPDates.php	/^    public function fire()$/;"	f
fire	app/Console/Commands/syncJoindInEvents.php	/^    public function fire()$/;"	f
fire	bootstrap/cache/compiled.php	/^    public function fire($event, $payload = [], $halt = false)$/;"	f
fire	bootstrap/cache/compiled.php	/^    public function fire($event, $payload = [], $halt = false);$/;"	f
fireAppCallbacks	bootstrap/cache/compiled.php	/^    protected function fireAppCallbacks(array $callbacks)$/;"	f
fireAttemptEvent	bootstrap/cache/compiled.php	/^    protected function fireAttemptEvent(array $credentials, $remember, $login)$/;"	f
fireCallbackArray	bootstrap/cache/compiled.php	/^    protected function fireCallbackArray($object, array $callbacks)$/;"	f
fireFailedEvent	bootstrap/cache/compiled.php	/^    protected function fireFailedEvent($user, array $credentials)$/;"	f
fireLogEvent	bootstrap/cache/compiled.php	/^    protected function fireLogEvent($level, $message, array $context = [])$/;"	f
fireLoginEvent	bootstrap/cache/compiled.php	/^    protected function fireLoginEvent($user, $remember = false)$/;"	f
fireModelEvent	bootstrap/cache/compiled.php	/^    protected function fireModelEvent($event, $halt = true)$/;"	f
fireResolvingCallbacks	bootstrap/cache/compiled.php	/^    protected function fireResolvingCallbacks($abstract, $object)$/;"	f
firing	bootstrap/cache/compiled.php	/^    protected $firing = [];$/;"	v
firing	bootstrap/cache/compiled.php	/^    public function firing()$/;"	f
firing	bootstrap/cache/compiled.php	/^    public function firing();$/;"	f
first	bootstrap/cache/compiled.php	/^        $first = $this->first();$/;"	v
first	bootstrap/cache/compiled.php	/^    public function first($key = null, $format = null)$/;"	f
first	bootstrap/cache/compiled.php	/^    public function first($key = null, $format = null);$/;"	f
first	bootstrap/cache/compiled.php	/^    public function first()$/;"	f
first	bootstrap/cache/compiled.php	/^    public function first(callable $callback = null, $default = null)$/;"	f
first	bootstrap/cache/compiled.php	/^    public static function first($array, callable $callback = null, $default = null)$/;"	f
firstArgumentCorrespondsToPolicy	bootstrap/cache/compiled.php	/^    protected function firstArgumentCorrespondsToPolicy(array $arguments)$/;"	f
firstByte	bootstrap/cache/compiled.php	/^                $firstByte = false;$/;"	v
firstByte	bootstrap/cache/compiled.php	/^                $firstByte = true;$/;"	v
firstByte	bootstrap/cache/compiled.php	/^        $firstByte = true;$/;"	v
firstItem	bootstrap/cache/compiled.php	/^    public function firstItem()$/;"	f
firstItem	bootstrap/cache/compiled.php	/^    public function firstItem();$/;"	f
firstKey	bootstrap/cache/compiled.php	/^        $firstKey = $firstKey ?: $this->getForeignKey();$/;"	v
firstKey	bootstrap/cache/compiled.php	/^    public function hasManyThrough($related, $through, $firstKey = null, $secondKey = null, $localKey = null)$/;"	v
firstOptional	bootstrap/cache/compiled.php	/^                    $firstOptional = $i;$/;"	v
firstOptional	bootstrap/cache/compiled.php	/^        $firstOptional = PHP_INT_MAX;$/;"	v
firstSlice	bootstrap/cache/compiled.php	/^        $firstSlice = $this->getInitialSlice($destination);$/;"	v
firstTrustedIp	bootstrap/cache/compiled.php	/^                    $firstTrustedIp = $clientIp;$/;"	v
firstTrustedIp	bootstrap/cache/compiled.php	/^        $firstTrustedIp = null;$/;"	v
fixPhpFilesArray	bootstrap/cache/compiled.php	/^    protected function fixPhpFilesArray($data)$/;"	f
flags	bootstrap/cache/compiled.php	/^        $flags = \\RecursiveDirectoryIterator::SKIP_DOTS;$/;"	v
flags	bootstrap/cache/compiled.php	/^        $flags = defined('PHP_OUTPUT_HANDLER_REMOVABLE') ? PHP_OUTPUT_HANDLER_REMOVABLE | ($flush ? PHP_OUTPUT_HANDLER_FLUSHABLE : PHP_OUTPUT_HANDLER_CLEANABLE) : -1;$/;"	v
flags	bootstrap/cache/compiled.php	/^        while ($level-- > $targetLevel && ($s = $status[$level]) && (!isset($s['del']) ? !isset($s['flags']) || $flags === ($s['flags'] & $flags) : $s['del'])) {$/;"	v
flags	bootstrap/cache/compiled.php	/^    public function glob($pattern, $flags = 0)$/;"	v
flash	bootstrap/cache/compiled.php	/^        $flash = !is_null($filter) ? $this->{$filter}($keys) : $this->input();$/;"	v
flash	bootstrap/cache/compiled.php	/^    public function flash($filter = null, $keys = [])$/;"	f
flash	bootstrap/cache/compiled.php	/^    public function flash($key, $value)$/;"	f
flashExcept	bootstrap/cache/compiled.php	/^    public function flashExcept($keys)$/;"	f
flashInput	bootstrap/cache/compiled.php	/^    public function flashInput(array $value)$/;"	f
flashOnly	bootstrap/cache/compiled.php	/^    public function flashOnly($keys)$/;"	f
flatMap	bootstrap/cache/compiled.php	/^    public function flatMap(callable $callback)$/;"	f
flatten	bootstrap/cache/compiled.php	/^    public function flatten($depth = INF)$/;"	f
flatten	bootstrap/cache/compiled.php	/^    public static function flatten($array, $depth = INF)$/;"	f
flattenedCookies	bootstrap/cache/compiled.php	/^        $flattenedCookies = array();$/;"	v
flip	bootstrap/cache/compiled.php	/^        $flip = $separator == '-' ? '_' : '-';$/;"	v
flip	bootstrap/cache/compiled.php	/^    public function flip()$/;"	f
flush	bootstrap/cache/compiled.php	/^        $flush = array();$/;"	v
flush	bootstrap/cache/compiled.php	/^    public function flush($event)$/;"	f
flush	bootstrap/cache/compiled.php	/^    public function flush($event);$/;"	f
flush	bootstrap/cache/compiled.php	/^    public function flush()$/;"	f
flushEventListeners	bootstrap/cache/compiled.php	/^    public static function flushEventListeners()$/;"	f
flushSections	bootstrap/cache/compiled.php	/^    public function flushSections()$/;"	f
flushSectionsIfDoneRendering	bootstrap/cache/compiled.php	/^    public function flushSectionsIfDoneRendering()$/;"	f
followLinks	bootstrap/cache/compiled.php	/^        $this->followLinks = true;$/;"	v
followLinks	bootstrap/cache/compiled.php	/^    private $followLinks = false;$/;"	v
followLinks	bootstrap/cache/compiled.php	/^    public function followLinks()$/;"	f
followingPattern	bootstrap/cache/compiled.php	/^                $followingPattern = (string) substr($pattern, $pos);$/;"	v
footer	bootstrap/cache/compiled.php	/^        $this->footer = [];$/;"	v
footer	bootstrap/cache/compiled.php	/^    protected $footer = [];$/;"	v
forPage	bootstrap/cache/compiled.php	/^    public function forPage($page, $perPage)$/;"	f
forUser	bootstrap/cache/compiled.php	/^    public function forUser($user)$/;"	f
forUser	bootstrap/cache/compiled.php	/^    public function forUser($user);$/;"	f
forbiddenResponse	bootstrap/cache/compiled.php	/^    public function forbiddenResponse()$/;"	f
forceCreate	bootstrap/cache/compiled.php	/^    public static function forceCreate(array $attributes)$/;"	f
forceDelete	bootstrap/cache/compiled.php	/^    public function forceDelete()$/;"	f
forceFill	bootstrap/cache/compiled.php	/^    public function forceFill(array $attributes)$/;"	f
forceRootUrl	bootstrap/cache/compiled.php	/^    public function forceRootUrl($root)$/;"	f
forceSchema	bootstrap/cache/compiled.php	/^        $this->forceSchema = $schema . ':\/\/';$/;"	v
forceSchema	bootstrap/cache/compiled.php	/^    protected $forceSchema;$/;"	v
forceSchema	bootstrap/cache/compiled.php	/^    public function forceSchema($schema)$/;"	f
forcedRoot	bootstrap/cache/compiled.php	/^        $this->forcedRoot = rtrim($root, '\/');$/;"	v
forcedRoot	bootstrap/cache/compiled.php	/^    protected $forcedRoot;$/;"	v
foreignKey	bootstrap/cache/compiled.php	/^            $foreignKey = Str::snake($relation) . '_id';$/;"	v
foreignKey	bootstrap/cache/compiled.php	/^        $foreignKey = $foreignKey ?: $name . '_id';$/;"	v
foreignKey	bootstrap/cache/compiled.php	/^        $foreignKey = $foreignKey ?: $this->getForeignKey();$/;"	v
foreignKey	bootstrap/cache/compiled.php	/^    public function belongsTo($related, $foreignKey = null, $otherKey = null, $relation = null)$/;"	v
foreignKey	bootstrap/cache/compiled.php	/^    public function hasMany($related, $foreignKey = null, $localKey = null)$/;"	v
foreignKey	bootstrap/cache/compiled.php	/^    public function hasOne($related, $foreignKey = null, $localKey = null)$/;"	v
forelseCounter	bootstrap/cache/compiled.php	/^    protected $forelseCounter = 0;$/;"	v
forever	bootstrap/cache/compiled.php	/^    public function forever($name, $value, $path = null, $domain = null, $secure = false, $httpOnly = true)$/;"	f
forever	bootstrap/cache/compiled.php	/^    public function forever($name, $value, $path = null, $domain = null, $secure = false, $httpOnly = true);$/;"	f
forget	bootstrap/cache/compiled.php	/^    public function forget($event)$/;"	f
forget	bootstrap/cache/compiled.php	/^    public function forget($event);$/;"	f
forget	bootstrap/cache/compiled.php	/^    public function forget($keys)$/;"	f
forget	bootstrap/cache/compiled.php	/^    public function forget($name, $path = null, $domain = null)$/;"	f
forget	bootstrap/cache/compiled.php	/^    public function forget($name, $path = null, $domain = null);$/;"	f
forget	bootstrap/cache/compiled.php	/^    public static function forget(&$array, $keys)$/;"	f
forgetInstance	bootstrap/cache/compiled.php	/^    public function forgetInstance($abstract)$/;"	f
forgetInstances	bootstrap/cache/compiled.php	/^    public function forgetInstances()$/;"	f
forgetParameter	bootstrap/cache/compiled.php	/^    public function forgetParameter($name)$/;"	f
forgetPushed	bootstrap/cache/compiled.php	/^    public function forgetPushed()$/;"	f
forgetPushed	bootstrap/cache/compiled.php	/^    public function forgetPushed();$/;"	f
form	app/Http/Controllers/BiosController.php	/^        $form = CreateBioForm::fillOut(Input::all(), Auth::user());$/;"	v
form	app/Http/Controllers/ConferencesController.php	/^        $form = CreateConferenceForm::fillOut(Input::all(), Auth::user());$/;"	v
form	tests/CreateConferenceFormTest.php	/^        $form = CreateConferenceForm::fillOut($input, Factory::create('user'));$/;"	v
form	tests/CreateConferenceFormTest.php	/^        $form = CreateConferenceForm::fillOut([], Factory::create('user'));$/;"	v
format	bootstrap/cache/compiled.php	/^                $format = $request->getRequestFormat();$/;"	v
format	bootstrap/cache/compiled.php	/^            $this->format = $this->attributes->get('_format', $default);$/;"	v
format	bootstrap/cache/compiled.php	/^        $format = $this->checkFormat($format);$/;"	v
format	bootstrap/cache/compiled.php	/^        $format = $this->getDateFormat();$/;"	v
format	bootstrap/cache/compiled.php	/^        $this->format = $format ?: static::SIMPLE_FORMAT;$/;"	v
format	bootstrap/cache/compiled.php	/^        $this->format = $format;$/;"	v
format	bootstrap/cache/compiled.php	/^        $this->format = null;$/;"	v
format	bootstrap/cache/compiled.php	/^        foreach (static::$formats as $format => $mimeTypes) {$/;"	v
format	bootstrap/cache/compiled.php	/^    protected $format = ':message';$/;"	v
format	bootstrap/cache/compiled.php	/^    protected $format;$/;"	v
format	bootstrap/cache/compiled.php	/^    public function first($key = null, $format = null)$/;"	v
format	bootstrap/cache/compiled.php	/^    public function first($key = null, $format = null);$/;"	v
format	bootstrap/cache/compiled.php	/^    public function format($default = 'html')$/;"	f
format	bootstrap/cache/compiled.php	/^    public function format(array $record)$/;"	f
format	bootstrap/cache/compiled.php	/^    public function format(array $record);$/;"	f
format	bootstrap/cache/compiled.php	/^    public function get($key, $format = null)$/;"	v
format	bootstrap/cache/compiled.php	/^    public function get($key, $format = null);$/;"	v
formatArgs	bootstrap/cache/compiled.php	/^    private function formatArgs(array $args)$/;"	f
formatBatch	bootstrap/cache/compiled.php	/^    public function formatBatch(array $records)$/;"	f
formatBatch	bootstrap/cache/compiled.php	/^    public function formatBatch(array $records);$/;"	f
formatClass	bootstrap/cache/compiled.php	/^    private function formatClass($class)$/;"	f
formatDomain	bootstrap/cache/compiled.php	/^    protected function formatDomain($route, &$parameters)$/;"	f
formatErrors	bootstrap/cache/compiled.php	/^    protected function formatErrors(Validator $validator)$/;"	f
formatGroupPrefix	bootstrap/cache/compiled.php	/^    protected static function formatGroupPrefix($new, $old)$/;"	f
formatMessage	bootstrap/cache/compiled.php	/^    protected function formatMessage($message)$/;"	f
formatParameters	bootstrap/cache/compiled.php	/^    protected function formatParameters($parameters)$/;"	f
formatPath	bootstrap/cache/compiled.php	/^    private function formatPath($path, $line)$/;"	f
formatUsesPrefix	bootstrap/cache/compiled.php	/^    protected static function formatUsesPrefix($new, $old)$/;"	f
formatValidationErrors	bootstrap/cache/compiled.php	/^    protected function formatValidationErrors(Validator $validator)$/;"	f
formats	bootstrap/cache/compiled.php	/^    protected static $formats;$/;"	v
formattedValue	bootstrap/cache/compiled.php	/^                $formattedValue = '<em>' . strtolower(var_export($item[1], true)) . '<\/em>';$/;"	v
formattedValue	bootstrap/cache/compiled.php	/^                $formattedValue = '<em>null<\/em>';$/;"	v
formattedValue	bootstrap/cache/compiled.php	/^                $formattedValue = '<em>resource<\/em>';$/;"	v
formattedValue	bootstrap/cache/compiled.php	/^                $formattedValue = sprintf("'%s'", $this->escapeHtml($item[1]));$/;"	v
formattedValue	bootstrap/cache/compiled.php	/^                $formattedValue = sprintf('<em>array<\/em>(%s)', is_array($item[1]) ? $this->formatArgs($item[1]) : $item[1]);$/;"	v
formattedValue	bootstrap/cache/compiled.php	/^                $formattedValue = sprintf('<em>object<\/em>(%s)', $this->formatClass($item[1]));$/;"	v
formattedValue	bootstrap/cache/compiled.php	/^                $formattedValue = str_replace("\\n", '', var_export($this->escapeHtml((string) $item[1]), true));$/;"	v
formatter	bootstrap/cache/compiled.php	/^            $this->formatter = $this->getDefaultFormatter();$/;"	v
formatter	bootstrap/cache/compiled.php	/^        $this->formatter = $formatter;$/;"	v
formatter	bootstrap/cache/compiled.php	/^    protected $formatter;$/;"	v
forwardedHeader	bootstrap/cache/compiled.php	/^            $forwardedHeader = $this->headers->get(self::$trustedHeaders[self::HEADER_FORWARDED]);$/;"	v
fragment	bootstrap/cache/compiled.php	/^        $this->fragment = $fragment;$/;"	v
fragment	bootstrap/cache/compiled.php	/^    protected $fragment = null;$/;"	v
fragment	bootstrap/cache/compiled.php	/^    public function fragment($fragment = null)$/;"	f
fragment	bootstrap/cache/compiled.php	/^    public function fragment($fragment = null);$/;"	f
fresh	bootstrap/cache/compiled.php	/^        $fresh = $this->makeConnection($name);$/;"	v
fresh	bootstrap/cache/compiled.php	/^    public function fresh($with = [])$/;"	f
freshManifest	bootstrap/cache/compiled.php	/^    protected function freshManifest(array $providers)$/;"	f
freshTimestamp	bootstrap/cache/compiled.php	/^    public function freshTimestamp()$/;"	f
freshTimestampString	bootstrap/cache/compiled.php	/^    public function freshTimestampString()$/;"	f
fromDateTime	bootstrap/cache/compiled.php	/^    public function fromDateTime($value)$/;"	f
fromJson	bootstrap/cache/compiled.php	/^    public function fromJson($value, $asObject = false)$/;"	f
fromString	bootstrap/cache/compiled.php	/^    public static function fromString($headerValue)$/;"	f
fromString	bootstrap/cache/compiled.php	/^    public static function fromString($itemValue)$/;"	f
full	bootstrap/cache/compiled.php	/^    public function full()$/;"	f
fullUrl	bootstrap/cache/compiled.php	/^    public function fullUrl()$/;"	f
fullUrlIs	bootstrap/cache/compiled.php	/^    public function fullUrlIs()$/;"	f
fullUrlWithQuery	bootstrap/cache/compiled.php	/^    public function fullUrlWithQuery(array $query)$/;"	f
function	bootstrap/cache/compiled.php	/^        $function = new ReflectionFunction($callback);$/;"	v
gatherData	bootstrap/cache/compiled.php	/^    protected function gatherData()$/;"	f
gatherRouteMiddlewares	bootstrap/cache/compiled.php	/^    protected function gatherRouteMiddlewares($request)$/;"	f
gatherRouteMiddlewares	bootstrap/cache/compiled.php	/^    public function gatherRouteMiddlewares(Route $route)$/;"	f
generateSessionId	bootstrap/cache/compiled.php	/^    protected function generateSessionId()$/;"	f
get	bootstrap/cache/compiled.php	/^    public function get($key, $default = null)$/;"	f
get	bootstrap/cache/compiled.php	/^    public function get($key, $default = null);$/;"	f
get	bootstrap/cache/compiled.php	/^    public function get($key, $default = null, $first = true)$/;"	f
get	bootstrap/cache/compiled.php	/^    public function get($key, $format = null)$/;"	f
get	bootstrap/cache/compiled.php	/^    public function get($key, $format = null);$/;"	f
get	bootstrap/cache/compiled.php	/^    public function get($method = null)$/;"	f
get	bootstrap/cache/compiled.php	/^    public function get($name, $default = null)$/;"	f
get	bootstrap/cache/compiled.php	/^    public function get($name, $default = null);$/;"	f
get	bootstrap/cache/compiled.php	/^    public function get($path, $lock = false)$/;"	f
get	bootstrap/cache/compiled.php	/^    public function get($path, array $data = [])$/;"	f
get	bootstrap/cache/compiled.php	/^    public function get($path, array $data = []);$/;"	f
get	bootstrap/cache/compiled.php	/^    public function get($uri, $action = null)$/;"	f
get	bootstrap/cache/compiled.php	/^    public function get($uri, $action);$/;"	f
get	bootstrap/cache/compiled.php	/^    public function get($value)$/;"	f
get	bootstrap/cache/compiled.php	/^    public static function get($array, $key, $default = null)$/;"	f
getAcceptableContentTypes	bootstrap/cache/compiled.php	/^    public function getAcceptableContentTypes()$/;"	f
getAction	bootstrap/cache/compiled.php	/^    public function getAction()$/;"	f
getActionName	bootstrap/cache/compiled.php	/^    public function getActionName()$/;"	f
getActualClassNameForMorph	bootstrap/cache/compiled.php	/^    public function getActualClassNameForMorph($class)$/;"	f
getAge	bootstrap/cache/compiled.php	/^    public function getAge()$/;"	f
getAlias	bootstrap/cache/compiled.php	/^    protected function getAlias($abstract)$/;"	f
getAliases	bootstrap/cache/compiled.php	/^    public function getAliases()$/;"	f
getAlnum	bootstrap/cache/compiled.php	/^    public function getAlnum($key, $default = '')$/;"	f
getAlpha	bootstrap/cache/compiled.php	/^    public function getAlpha($key, $default = '')$/;"	f
getApplication	bootstrap/cache/compiled.php	/^    public function getApplication()$/;"	f
getApplication	bootstrap/cache/compiled.php	/^    public function getApplication();$/;"	f
getArrayableAppends	bootstrap/cache/compiled.php	/^    protected function getArrayableAppends()$/;"	f
getArrayableAttributes	bootstrap/cache/compiled.php	/^    protected function getArrayableAttributes()$/;"	f
getArrayableItems	bootstrap/cache/compiled.php	/^    protected function getArrayableItems($items)$/;"	f
getArrayableItems	bootstrap/cache/compiled.php	/^    protected function getArrayableItems(array $values)$/;"	f
getArrayableRelations	bootstrap/cache/compiled.php	/^    protected function getArrayableRelations()$/;"	f
getAttribute	bootstrap/cache/compiled.php	/^    public function getAttribute($key)$/;"	f
getAttribute	bootstrap/cache/compiled.php	/^    public function getAttribute($name, $default = null)$/;"	f
getAttributeFromArray	bootstrap/cache/compiled.php	/^    protected function getAttributeFromArray($key)$/;"	f
getAttributeValue	bootstrap/cache/compiled.php	/^    public function getAttributeValue($key)$/;"	f
getAttributes	bootstrap/cache/compiled.php	/^    public function getAttributes()$/;"	f
getAuthorize	app/Http/Controllers/OAuthController.php	/^    public function getAuthorize()$/;"	f
getBag	bootstrap/cache/compiled.php	/^    public function getBag($key)$/;"	f
getBag	bootstrap/cache/compiled.php	/^    public function getBag($name)$/;"	f
getBag	bootstrap/cache/compiled.php	/^    public function getBag($name);$/;"	f
getBagData	bootstrap/cache/compiled.php	/^    public function getBagData($name)$/;"	f
getBags	bootstrap/cache/compiled.php	/^    public function getBags()$/;"	f
getBasePath	bootstrap/cache/compiled.php	/^    public function getBasePath()$/;"	f
getBaseUrl	bootstrap/cache/compiled.php	/^    public function getBaseUrl()$/;"	f
getBasicCredentials	bootstrap/cache/compiled.php	/^    protected function getBasicCredentials(Request $request, $field)$/;"	f
getBasicResponse	bootstrap/cache/compiled.php	/^    protected function getBasicResponse()$/;"	f
getBelongsToManyCaller	bootstrap/cache/compiled.php	/^    protected function getBelongsToManyCaller()$/;"	f
getBindings	bootstrap/cache/compiled.php	/^    public function getBindings()$/;"	f
getBoolean	bootstrap/cache/compiled.php	/^    public function getBoolean($key, $default = false)$/;"	f
getBroker	bootstrap/cache/compiled.php	/^    public function getBroker()$/;"	f
getBubble	bootstrap/cache/compiled.php	/^    public function getBubble()$/;"	f
getByAction	bootstrap/cache/compiled.php	/^    public function getByAction($action)$/;"	f
getByName	bootstrap/cache/compiled.php	/^    public function getByName($name)$/;"	f
getCacheControlDirective	bootstrap/cache/compiled.php	/^    public function getCacheControlDirective($key)$/;"	f
getCacheControlHeader	bootstrap/cache/compiled.php	/^    protected function getCacheControlHeader()$/;"	f
getCachedCompilePath	bootstrap/cache/compiled.php	/^    public function getCachedCompilePath()$/;"	f
getCachedCompilePath	bootstrap/cache/compiled.php	/^    public function getCachedCompilePath();$/;"	f
getCachedConfigPath	bootstrap/cache/compiled.php	/^    public function getCachedConfigPath()$/;"	f
getCachedRoutesPath	bootstrap/cache/compiled.php	/^    public function getCachedRoutesPath()$/;"	f
getCachedServicesPath	bootstrap/cache/compiled.php	/^    public function getCachedServicesPath()$/;"	f
getCachedServicesPath	bootstrap/cache/compiled.php	/^    public function getCachedServicesPath();$/;"	f
getCachingIterator	bootstrap/cache/compiled.php	/^    public function getCachingIterator($flags = CachingIterator::CALL_TOSTRING)$/;"	f
getCallReflector	bootstrap/cache/compiled.php	/^    protected function getCallReflector($callback)$/;"	f
getCallbacksForType	bootstrap/cache/compiled.php	/^    protected function getCallbacksForType($abstract, $object, array $callbacksPerType)$/;"	f
getCastType	bootstrap/cache/compiled.php	/^    protected function getCastType($key)$/;"	f
getCasts	bootstrap/cache/compiled.php	/^    public function getCasts()$/;"	f
getCharset	bootstrap/cache/compiled.php	/^    public function getCharset()$/;"	f
getCharsets	bootstrap/cache/compiled.php	/^    public function getCharsets()$/;"	f
getChildren	bootstrap/cache/compiled.php	/^    public function getChildren()$/;"	f
getClientIp	bootstrap/cache/compiled.php	/^    public function getClientIp()$/;"	f
getClientIps	bootstrap/cache/compiled.php	/^    public function getClientIps()$/;"	f
getClosure	bootstrap/cache/compiled.php	/^    protected function getClosure($abstract, $concrete)$/;"	f
getCloudDriver	bootstrap/cache/compiled.php	/^    protected function getCloudDriver()$/;"	f
getCollection	bootstrap/cache/compiled.php	/^    public function getCollection()$/;"	f
getCompiled	bootstrap/cache/compiled.php	/^    public function getCompiled()$/;"	f
getCompiledPath	bootstrap/cache/compiled.php	/^    public function getCompiledPath($path)$/;"	f
getCompiledPath	bootstrap/cache/compiled.php	/^    public function getCompiledPath($path);$/;"	f
getCompiler	bootstrap/cache/compiled.php	/^    public function getCompiler()$/;"	f
getConcrete	bootstrap/cache/compiled.php	/^    protected function getConcrete($abstract)$/;"	f
getCondition	bootstrap/cache/compiled.php	/^    public function getCondition()$/;"	f
getConfig	bootstrap/cache/compiled.php	/^    protected function getConfig($name)$/;"	f
getConfigurationFiles	bootstrap/cache/compiled.php	/^    protected function getConfigurationFiles(Application $app)$/;"	f
getConfigurationNesting	bootstrap/cache/compiled.php	/^    protected function getConfigurationNesting(SplFileInfo $file, $configPath)$/;"	f
getConnection	bootstrap/cache/compiled.php	/^    public function getConnection()$/;"	f
getConnectionName	bootstrap/cache/compiled.php	/^    public function getConnectionName()$/;"	f
getConnectionResolver	bootstrap/cache/compiled.php	/^    public static function getConnectionResolver()$/;"	f
getConnections	bootstrap/cache/compiled.php	/^    public function getConnections()$/;"	f
getContainer	bootstrap/cache/compiled.php	/^    public function getContainer()$/;"	f
getContent	bootstrap/cache/compiled.php	/^    public function getContent($asResource = false)$/;"	f
getContent	bootstrap/cache/compiled.php	/^    public function getContent()$/;"	f
getContent	bootstrap/cache/compiled.php	/^    public function getContent(FlattenException $exception)$/;"	f
getContentTags	bootstrap/cache/compiled.php	/^    public function getContentTags()$/;"	f
getContentType	bootstrap/cache/compiled.php	/^    public function getContentType()$/;"	f
getContents	bootstrap/cache/compiled.php	/^    protected function getContents()$/;"	f
getContents	bootstrap/cache/compiled.php	/^    public function getContents()$/;"	f
getContextualConcrete	bootstrap/cache/compiled.php	/^    protected function getContextualConcrete($abstract)$/;"	f
getCookieExpirationDate	bootstrap/cache/compiled.php	/^    protected function getCookieExpirationDate()$/;"	f
getCookieJar	bootstrap/cache/compiled.php	/^    public function getCookieJar()$/;"	f
getCookies	bootstrap/cache/compiled.php	/^    public function getCookies($format = self::COOKIES_FLAT)$/;"	f
getCreated	bootstrap/cache/compiled.php	/^    public function getCreated()$/;"	f
getCreatedAtColumn	bootstrap/cache/compiled.php	/^    public function getCreatedAtColumn()$/;"	f
getCredentials	bootstrap/cache/compiled.php	/^    protected function getCredentials(Request $request)$/;"	f
getCurrentRequest	bootstrap/cache/compiled.php	/^    public function getCurrentRequest()$/;"	f
getCurrentRoute	bootstrap/cache/compiled.php	/^    public function getCurrentRoute()$/;"	f
getCustomDirectives	bootstrap/cache/compiled.php	/^    public function getCustomDirectives()$/;"	f
getData	bootstrap/cache/compiled.php	/^    public function getData()$/;"	f
getDatabaseConnection	bootstrap/cache/compiled.php	/^    protected function getDatabaseConnection()$/;"	f
getDate	bootstrap/cache/compiled.php	/^    public function getDate($key, \\DateTime $default = null)$/;"	f
getDate	bootstrap/cache/compiled.php	/^    public function getDate()$/;"	f
getDateFormat	bootstrap/cache/compiled.php	/^    protected function getDateFormat()$/;"	f
getDates	bootstrap/cache/compiled.php	/^    public function getDates()$/;"	f
getDefault	bootstrap/cache/compiled.php	/^    public function getDefault($name)$/;"	f
getDefaultConnection	bootstrap/cache/compiled.php	/^    public function getDefaultConnection()$/;"	f
getDefaultConnection	bootstrap/cache/compiled.php	/^    public function getDefaultConnection();$/;"	f
getDefaultDriver	bootstrap/cache/compiled.php	/^    protected function getDefaultDriver()$/;"	f
getDefaultDriver	bootstrap/cache/compiled.php	/^    public abstract function getDefaultDriver();$/;"	f
getDefaultDriver	bootstrap/cache/compiled.php	/^    public function getDefaultDriver()$/;"	f
getDefaultFormatter	bootstrap/cache/compiled.php	/^    protected function getDefaultFormatter()$/;"	f
getDefaultLocale	bootstrap/cache/compiled.php	/^    public function getDefaultLocale()$/;"	f
getDefaults	bootstrap/cache/compiled.php	/^    public function getDefaults()$/;"	f
getDeferredServices	bootstrap/cache/compiled.php	/^    public function getDeferredServices()$/;"	f
getDependencies	bootstrap/cache/compiled.php	/^    protected function getDependencies(array $parameters, array $primitives = [])$/;"	f
getDigits	bootstrap/cache/compiled.php	/^    public function getDigits($key, $default = '')$/;"	f
getDirFromStream	bootstrap/cache/compiled.php	/^    private function getDirFromStream($stream)$/;"	f
getDirty	bootstrap/cache/compiled.php	/^    public function getDirty()$/;"	f
getDispatcher	bootstrap/cache/compiled.php	/^    public function getDispatcher()$/;"	f
getDomain	bootstrap/cache/compiled.php	/^    public function getDomain()$/;"	f
getDomainAndScheme	bootstrap/cache/compiled.php	/^    protected function getDomainAndScheme($route)$/;"	f
getDrivers	bootstrap/cache/compiled.php	/^    public function getDrivers()$/;"	f
getETags	bootstrap/cache/compiled.php	/^    public function getETags()$/;"	f
getEchoMethods	bootstrap/cache/compiled.php	/^    protected function getEchoMethods()$/;"	f
getEmail	app/Http/Controllers/PublicProfileController.php	/^    public function getEmail($profile_slug)$/;"	f
getEmail	bootstrap/cache/compiled.php	/^    public function getEmail()$/;"	f
getEmailSubject	bootstrap/cache/compiled.php	/^    protected function getEmailSubject()$/;"	f
getEncodings	bootstrap/cache/compiled.php	/^    public function getEncodings()$/;"	f
getEncrypterForKeyAndCipher	bootstrap/cache/compiled.php	/^    protected function getEncrypterForKeyAndCipher($key, $cipher)$/;"	f
getEngine	bootstrap/cache/compiled.php	/^    public function getEngine()$/;"	f
getEngineFromPath	bootstrap/cache/compiled.php	/^    public function getEngineFromPath($path)$/;"	f
getEngineResolver	bootstrap/cache/compiled.php	/^    public function getEngineResolver()$/;"	f
getEnvironmentArgument	bootstrap/cache/compiled.php	/^    protected function getEnvironmentArgument(array $args)$/;"	f
getEscapedContentTags	bootstrap/cache/compiled.php	/^    public function getEscapedContentTags()$/;"	f
getEtag	bootstrap/cache/compiled.php	/^    public function getEtag()$/;"	f
getEventDispatcher	bootstrap/cache/compiled.php	/^    public function getEventDispatcher()$/;"	f
getEventDispatcher	bootstrap/cache/compiled.php	/^    public static function getEventDispatcher()$/;"	f
getExceptionHandler	bootstrap/cache/compiled.php	/^    protected function getExceptionHandler()$/;"	f
getExpires	bootstrap/cache/compiled.php	/^    public function getExpires()$/;"	f
getExpiresTime	bootstrap/cache/compiled.php	/^    public function getExpiresTime()$/;"	f
getExtenders	bootstrap/cache/compiled.php	/^    protected function getExtenders($abstract)$/;"	f
getExtension	bootstrap/cache/compiled.php	/^    protected function getExtension($path)$/;"	f
getExtensions	bootstrap/cache/compiled.php	/^    public function getExtensions()$/;"	f
getFacadeAccessor	app/OAuthGuard/Facades/OAuthGuard.php	/^    protected static function getFacadeAccessor()$/;"	f
getFacadeAccessor	bootstrap/cache/compiled.php	/^    protected static function getFacadeAccessor()$/;"	f
getFacadeApplication	bootstrap/cache/compiled.php	/^    public static function getFacadeApplication()$/;"	f
getFacadeRoot	bootstrap/cache/compiled.php	/^    public static function getFacadeRoot()$/;"	f
getFactory	bootstrap/cache/compiled.php	/^    public function getFactory()$/;"	f
getFailedLoginMessage	bootstrap/cache/compiled.php	/^    protected function getFailedLoginMessage()$/;"	f
getFatalErrorHandlers	bootstrap/cache/compiled.php	/^    protected function getFatalErrorHandlers()$/;"	f
getFilePath	bootstrap/cache/compiled.php	/^    protected function getFilePath($path, $file)$/;"	f
getFilesystem	bootstrap/cache/compiled.php	/^    public function getFilesystem()$/;"	f
getFillable	bootstrap/cache/compiled.php	/^    public function getFillable()$/;"	f
getFinder	bootstrap/cache/compiled.php	/^    public function getFinder()$/;"	f
getForeignKey	bootstrap/cache/compiled.php	/^    public function getForeignKey()$/;"	f
getFormat	bootstrap/cache/compiled.php	/^    public function getFormat($mimeType)$/;"	f
getFormat	bootstrap/cache/compiled.php	/^    public function getFormat()$/;"	f
getFormat	bootstrap/cache/compiled.php	/^    public function getFormat();$/;"	f
getFormatter	bootstrap/cache/compiled.php	/^    public function getFormatter()$/;"	f
getFormatter	bootstrap/cache/compiled.php	/^    public function getFormatter();$/;"	f
getFunctionHint	bootstrap/cache/compiled.php	/^    protected function getFunctionHint(Closure $callback)$/;"	f
getGlobPattern	bootstrap/cache/compiled.php	/^    protected function getGlobPattern()$/;"	f
getGlobalScope	bootstrap/cache/compiled.php	/^    public static function getGlobalScope($scope)$/;"	f
getGlobalScopes	bootstrap/cache/compiled.php	/^    public function getGlobalScopes()$/;"	f
getGroupStack	bootstrap/cache/compiled.php	/^    public function getGroupStack()$/;"	f
getGuard	bootstrap/cache/compiled.php	/^    protected function getGuard()$/;"	f
getGuarded	bootstrap/cache/compiled.php	/^    public function getGuarded()$/;"	f
getHandler	bootstrap/cache/compiled.php	/^    public function getHandler()$/;"	f
getHandler	bootstrap/cache/compiled.php	/^    public function getHandler();$/;"	f
getHandlers	bootstrap/cache/compiled.php	/^    public function getHandlers()$/;"	f
getHasher	bootstrap/cache/compiled.php	/^    public function getHasher()$/;"	f
getHeaders	bootstrap/cache/compiled.php	/^    public function getHeaders()$/;"	f
getHidden	bootstrap/cache/compiled.php	/^    public function getHidden()$/;"	f
getHints	bootstrap/cache/compiled.php	/^    public function getHints()$/;"	f
getHost	bootstrap/cache/compiled.php	/^    public function getHost()$/;"	f
getHostRegex	bootstrap/cache/compiled.php	/^    public function getHostRegex()$/;"	f
getHostTokens	bootstrap/cache/compiled.php	/^    public function getHostTokens()$/;"	f
getHostVariables	bootstrap/cache/compiled.php	/^    public function getHostVariables()$/;"	f
getHtml	bootstrap/cache/compiled.php	/^    public function getHtml($exception)$/;"	f
getHtmledDescription	app/models/TalkRevision.php	/^    public function getHtmledDescription()$/;"	f
getHtmledOrganizerNotes	app/models/TalkRevision.php	/^    public function getHtmledOrganizerNotes()$/;"	f
getHttpHost	bootstrap/cache/compiled.php	/^    public function getHttpHost()$/;"	f
getHttpMethodParameterOverride	bootstrap/cache/compiled.php	/^    public static function getHttpMethodParameterOverride()$/;"	f
getId	app/ApiResources/Bio.php	/^    public function getId()$/;"	f
getId	app/ApiResources/Conference.php	/^    public function getId()$/;"	f
getId	app/ApiResources/Me.php	/^    public function getId()$/;"	f
getId	app/ApiResources/Talk.php	/^    public function getId()$/;"	f
getId	bootstrap/cache/compiled.php	/^    public function getId()$/;"	f
getId	bootstrap/cache/compiled.php	/^    public function getId();$/;"	f
getIncrementing	bootstrap/cache/compiled.php	/^    public function getIncrementing()$/;"	f
getIndex	bootstrap/cache/compiled.php	/^    public function getIndex()$/;"	f
getIndexData	bootstrap/cache/compiled.php	/^    protected function getIndexData($data, $prefix)$/;"	f
getInitialSlice	bootstrap/cache/compiled.php	/^    protected function getInitialSlice(Closure $destination)$/;"	f
getInputSource	bootstrap/cache/compiled.php	/^    protected function getInputSource()$/;"	f
getInstance	bootstrap/cache/compiled.php	/^    public static function getInstance()$/;"	f
getInstance	bootstrap/cache/compiled.php	/^    public static function getInstance(array $aliases = [])$/;"	f
getInt	bootstrap/cache/compiled.php	/^    public function getInt($key, $default = 0)$/;"	f
getIterator	bootstrap/cache/compiled.php	/^    public function getIterator()$/;"	f
getIvSize	bootstrap/cache/compiled.php	/^    protected function getIvSize()$/;"	f
getJoindInEvent	app/JoindIn/ConferenceImporter.php	/^    private function getJoindInEvent($eventId)$/;"	f
getJsonPayload	bootstrap/cache/compiled.php	/^    protected function getJsonPayload($payload)$/;"	f
getKey	bootstrap/cache/compiled.php	/^    public function getKey()$/;"	f
getKeyForSaveQuery	bootstrap/cache/compiled.php	/^    protected function getKeyForSaveQuery()$/;"	f
getKeyName	bootstrap/cache/compiled.php	/^    public function getKeyName()$/;"	f
getLanguages	bootstrap/cache/compiled.php	/^    public function getLanguages()$/;"	f
getLastAttempted	bootstrap/cache/compiled.php	/^    public function getLastAttempted()$/;"	f
getLastGroupPrefix	bootstrap/cache/compiled.php	/^    public function getLastGroupPrefix()$/;"	f
getLastModified	bootstrap/cache/compiled.php	/^    public function getLastModified()$/;"	f
getLastUsed	bootstrap/cache/compiled.php	/^    public function getLastUsed()$/;"	f
getLevel	bootstrap/cache/compiled.php	/^    public function getLevel()$/;"	f
getLevelName	bootstrap/cache/compiled.php	/^    public static function getLevelName($level)$/;"	f
getLevels	bootstrap/cache/compiled.php	/^    public static function getLevels()$/;"	f
getLifetime	bootstrap/cache/compiled.php	/^    public function getLifetime()$/;"	f
getLinkAttribute	app/models/Conference.php	/^    public function getLinkAttribute()$/;"	f
getListeners	bootstrap/cache/compiled.php	/^    public function getListeners($eventName)$/;"	f
getLoadedProviders	bootstrap/cache/compiled.php	/^    public function getLoadedProviders()$/;"	f
getLocale	bootstrap/cache/compiled.php	/^    public function getLocale()$/;"	f
getLogin	app/Http/Controllers/AuthController.php	/^    public function getLogin()$/;"	f
getLogin	bootstrap/cache/compiled.php	/^    public function getLogin()$/;"	f
getLogout	bootstrap/cache/compiled.php	/^    public function getLogout()$/;"	f
getMaxAge	bootstrap/cache/compiled.php	/^    public function getMaxAge()$/;"	f
getMessage	bootstrap/cache/compiled.php	/^    protected function getMessage(Exception $e)$/;"	f
getMessageBag	bootstrap/cache/compiled.php	/^    public function getMessageBag()$/;"	f
getMessageBag	bootstrap/cache/compiled.php	/^    public function getMessageBag();$/;"	f
getMessages	bootstrap/cache/compiled.php	/^    public function getMessages()$/;"	f
getMetadataBag	bootstrap/cache/compiled.php	/^    public function getMetadataBag()$/;"	f
getMetadataBag	bootstrap/cache/compiled.php	/^    public function getMetadataBag();$/;"	f
getMethod	bootstrap/cache/compiled.php	/^    public function getMethod()$/;"	f
getMethodData	bootstrap/cache/compiled.php	/^    public function getMethodData(ReflectionMethod $method, $prefix)$/;"	f
getMethodDependencies	bootstrap/cache/compiled.php	/^    protected function getMethodDependencies($callback, array $parameters = [])$/;"	f
getMethods	bootstrap/cache/compiled.php	/^    public function getMethods()$/;"	f
getMiddleware	bootstrap/cache/compiled.php	/^    public function getMiddleware($instance, $method)$/;"	f
getMiddleware	bootstrap/cache/compiled.php	/^    public function getMiddleware()$/;"	f
getMimeType	bootstrap/cache/compiled.php	/^    public function getMimeType($format)$/;"	f
getMockableClass	bootstrap/cache/compiled.php	/^    protected static function getMockableClass()$/;"	f
getModel	bootstrap/cache/compiled.php	/^    public function getModel()$/;"	f
getMonolog	bootstrap/cache/compiled.php	/^    public function getMonolog()$/;"	f
getMonologConfigurator	bootstrap/cache/compiled.php	/^    public function getMonologConfigurator()$/;"	f
getMorphClass	bootstrap/cache/compiled.php	/^    public function getMorphClass()$/;"	f
getMorphs	bootstrap/cache/compiled.php	/^    protected function getMorphs($name, $type, $id)$/;"	f
getMutatedAttributes	bootstrap/cache/compiled.php	/^    public function getMutatedAttributes()$/;"	f
getName	bootstrap/cache/compiled.php	/^    public function getName()$/;"	f
getName	bootstrap/cache/compiled.php	/^    public function getName();$/;"	f
getNames	bootstrap/cache/compiled.php	/^    public function getNames()$/;"	f
getNamespace	bootstrap/cache/compiled.php	/^    public function getNamespace()$/;"	f
getNamespaceSegments	bootstrap/cache/compiled.php	/^    protected function getNamespaceSegments($name)$/;"	f
getNumericParameters	bootstrap/cache/compiled.php	/^    protected function getNumericParameters(array $parameters)$/;"	f
getObservableEvents	bootstrap/cache/compiled.php	/^    public function getObservableEvents()$/;"	f
getOldInput	bootstrap/cache/compiled.php	/^    public function getOldInput($key = null, $default = null)$/;"	f
getOption	bootstrap/cache/compiled.php	/^    public function getOption($name)$/;"	f
getOptions	bootstrap/cache/compiled.php	/^    public function getOptions()$/;"	f
getOriginal	bootstrap/cache/compiled.php	/^    public function getOriginal($key = null, $default = null)$/;"	f
getOriginalContent	bootstrap/cache/compiled.php	/^    public function getOriginalContent()$/;"	f
getPageName	bootstrap/cache/compiled.php	/^    public function getPageName()$/;"	f
getParameter	bootstrap/cache/compiled.php	/^    public function getParameter($name, $default = null)$/;"	f
getPassword	bootstrap/cache/compiled.php	/^    public function getPassword()$/;"	f
getPath	bootstrap/cache/compiled.php	/^    public function getPath()$/;"	f
getPathAndDomain	bootstrap/cache/compiled.php	/^    protected function getPathAndDomain($path, $domain, $secure = false)$/;"	f
getPathInfo	bootstrap/cache/compiled.php	/^    public function getPathInfo()$/;"	f
getPathVariables	bootstrap/cache/compiled.php	/^    public function getPathVariables()$/;"	f
getPaths	bootstrap/cache/compiled.php	/^    public function getPaths()$/;"	f
getPatterns	bootstrap/cache/compiled.php	/^    public function getPatterns()$/;"	f
getPerPage	bootstrap/cache/compiled.php	/^    public function getPerPage()$/;"	f
getPlainUri	bootstrap/cache/compiled.php	/^    public function getPlainUri($name, $prefix)$/;"	f
getPolicyFor	bootstrap/cache/compiled.php	/^    public function getPolicyFor($class)$/;"	f
getPort	bootstrap/cache/compiled.php	/^    public function getPort()$/;"	f
getPossibleViewFiles	bootstrap/cache/compiled.php	/^    protected function getPossibleViewFiles($name)$/;"	f
getPreferredLanguage	bootstrap/cache/compiled.php	/^    public function getPreferredLanguage(array $locales = null)$/;"	f
getPrefix	bootstrap/cache/compiled.php	/^    public function getPrefix()$/;"	f
getPreviewAttribute	app/models/Bio.php	/^    public function getPreviewAttribute()$/;"	f
getPreviousUrlFromSession	bootstrap/cache/compiled.php	/^    protected function getPreviousUrlFromSession()$/;"	f
getProcessors	bootstrap/cache/compiled.php	/^    public function getProcessors()$/;"	f
getProtocolVersion	bootstrap/cache/compiled.php	/^    public function getProtocolVersion()$/;"	f
getProvider	bootstrap/cache/compiled.php	/^    public function getProvider($provider)$/;"	f
getProvider	bootstrap/cache/compiled.php	/^    public function getProvider()$/;"	f
getPublicUserByProfileSlug	app/Http/Controllers/PublicProfileController.php	/^    private function getPublicUserByProfileSlug($profile_slug)$/;"	f
getQualifiedKeyName	bootstrap/cache/compiled.php	/^    public function getQualifiedKeyName()$/;"	f
getQuality	bootstrap/cache/compiled.php	/^    public function getQuality()$/;"	f
getQueryString	bootstrap/cache/compiled.php	/^    public function getQueryString()$/;"	f
getQueueableId	bootstrap/cache/compiled.php	/^    public function getQueueableId()$/;"	f
getQueueableId	bootstrap/cache/compiled.php	/^    public function getQueueableId();$/;"	f
getQueuedCookies	bootstrap/cache/compiled.php	/^    public function getQueuedCookies()$/;"	f
getQueuedCookies	bootstrap/cache/compiled.php	/^    public function getQueuedCookies();$/;"	f
getRawTags	bootstrap/cache/compiled.php	/^    public function getRawTags()$/;"	f
getReadConfig	bootstrap/cache/compiled.php	/^    protected function getReadConfig(array $config)$/;"	f
getReadWriteConfig	bootstrap/cache/compiled.php	/^    protected function getReadWriteConfig(array $config, $type)$/;"	f
getRealMethod	bootstrap/cache/compiled.php	/^    public function getRealMethod()$/;"	f
getReboundCallbacks	bootstrap/cache/compiled.php	/^    protected function getReboundCallbacks($abstract)$/;"	f
getRecaller	bootstrap/cache/compiled.php	/^    protected function getRecaller()$/;"	f
getRecallerId	bootstrap/cache/compiled.php	/^    protected function getRecallerId()$/;"	f
getRecallerName	bootstrap/cache/compiled.php	/^    public function getRecallerName()$/;"	f
getRedirectUrl	bootstrap/cache/compiled.php	/^    protected function getRedirectUrl()$/;"	f
getRegex	bootstrap/cache/compiled.php	/^    public function getRegex()$/;"	f
getRegister	bootstrap/cache/compiled.php	/^    public function getRegister()$/;"	f
getRelation	bootstrap/cache/compiled.php	/^    public function getRelation($relation)$/;"	f
getRelationValue	bootstrap/cache/compiled.php	/^    public function getRelationValue($key)$/;"	f
getRelations	bootstrap/cache/compiled.php	/^    public function getRelations()$/;"	f
getRelationshipFromMethod	bootstrap/cache/compiled.php	/^    protected function getRelationshipFromMethod($method)$/;"	f
getRelativePath	bootstrap/cache/compiled.php	/^    public function getRelativePath()$/;"	f
getRelativePathname	bootstrap/cache/compiled.php	/^    public function getRelativePathname()$/;"	f
getRelativeUriForPath	bootstrap/cache/compiled.php	/^    public function getRelativeUriForPath($path)$/;"	f
getRequest	bootstrap/cache/compiled.php	/^    public function getRequest()$/;"	f
getRequestFormat	bootstrap/cache/compiled.php	/^    public function getRequestFormat($default = 'html')$/;"	f
getRequestUri	bootstrap/cache/compiled.php	/^    public function getRequestUri()$/;"	f
getRequire	bootstrap/cache/compiled.php	/^    public function getRequire($path)$/;"	f
getRequirement	bootstrap/cache/compiled.php	/^    public function getRequirement($key)$/;"	f
getRequirements	bootstrap/cache/compiled.php	/^    public function getRequirements()$/;"	f
getReset	bootstrap/cache/compiled.php	/^    public function getReset(Request $request, $token = null)$/;"	f
getResetFailureResponse	bootstrap/cache/compiled.php	/^    protected function getResetFailureResponse(Request $request, $response)$/;"	f
getResetSuccessResponse	bootstrap/cache/compiled.php	/^    protected function getResetSuccessResponse($response)$/;"	f
getResetValidationCustomAttributes	bootstrap/cache/compiled.php	/^    protected function getResetValidationCustomAttributes()$/;"	f
getResetValidationMessages	bootstrap/cache/compiled.php	/^    protected function getResetValidationMessages()$/;"	f
getResetValidationRules	bootstrap/cache/compiled.php	/^    protected function getResetValidationRules()$/;"	f
getResourceOwnerId	tests/Api/ApiTestCase.php	/^    public function getResourceOwnerId()$/;"	f
getResourceOwnerType	tests/Api/ApiTestCase.php	/^    public function getResourceOwnerType()$/;"	f
getRevisionsAttribute	app/models/Talk.php	/^    public function getRevisionsAttribute()$/;"	f
getRootUrl	bootstrap/cache/compiled.php	/^    protected function getRootUrl($scheme, $root = null)$/;"	f
getRoutable	bootstrap/cache/compiled.php	/^    public function getRoutable($controller, $prefix)$/;"	f
getRouteDomain	bootstrap/cache/compiled.php	/^    protected function getRouteDomain($route, &$parameters)$/;"	f
getRouteForMethods	bootstrap/cache/compiled.php	/^    protected function getRouteForMethods($request, array $methods)$/;"	f
getRouteKey	bootstrap/cache/compiled.php	/^    public function getRouteKey()$/;"	f
getRouteKey	bootstrap/cache/compiled.php	/^    public function getRouteKey();$/;"	f
getRouteKeyName	bootstrap/cache/compiled.php	/^    public function getRouteKeyName()$/;"	f
getRouteKeyName	bootstrap/cache/compiled.php	/^    public function getRouteKeyName();$/;"	f
getRouteQueryString	bootstrap/cache/compiled.php	/^    protected function getRouteQueryString(array $parameters)$/;"	f
getRouteResolver	bootstrap/cache/compiled.php	/^    public function getRouteResolver()$/;"	f
getRouteRoot	bootstrap/cache/compiled.php	/^    protected function getRouteRoot($route, $domain)$/;"	f
getRouteScheme	bootstrap/cache/compiled.php	/^    protected function getRouteScheme($route)$/;"	f
getRouter	bootstrap/cache/compiled.php	/^    public static function getRouter()$/;"	f
getRoutes	bootstrap/cache/compiled.php	/^    public function getRoutes()$/;"	f
getRoutesByMethod	bootstrap/cache/compiled.php	/^    public function getRoutesByMethod()$/;"	f
getScheme	bootstrap/cache/compiled.php	/^    protected function getScheme($secure)$/;"	f
getScheme	bootstrap/cache/compiled.php	/^    public function getScheme()$/;"	f
getSchemeAndHttpHost	bootstrap/cache/compiled.php	/^    public function getSchemeAndHttpHost()$/;"	f
getSchemes	bootstrap/cache/compiled.php	/^    public function getSchemes()$/;"	f
getScriptName	bootstrap/cache/compiled.php	/^    public function getScriptName()$/;"	f
getSections	bootstrap/cache/compiled.php	/^    public function getSections()$/;"	f
getSendResetLinkEmailFailureResponse	bootstrap/cache/compiled.php	/^    protected function getSendResetLinkEmailFailureResponse($response)$/;"	f
getSendResetLinkEmailSuccessResponse	bootstrap/cache/compiled.php	/^    protected function getSendResetLinkEmailSuccessResponse($response)$/;"	f
getSession	bootstrap/cache/compiled.php	/^    protected function getSession()$/;"	f
getSession	bootstrap/cache/compiled.php	/^    public function getSession()$/;"	f
getSession	bootstrap/cache/compiled.php	/^    public function getSession(Request $request)$/;"	f
getSession	tests/Api/ApiTestCase.php	/^    public function getSession()$/;"	f
getSessionConfig	bootstrap/cache/compiled.php	/^    public function getSessionConfig()$/;"	f
getSessionLifetimeInSeconds	bootstrap/cache/compiled.php	/^    protected function getSessionLifetimeInSeconds()$/;"	f
getShared	bootstrap/cache/compiled.php	/^    public function getShared()$/;"	f
getSlice	bootstrap/cache/compiled.php	/^    protected function getSlice()$/;"	f
getStaticPrefix	bootstrap/cache/compiled.php	/^    public function getStaticPrefix()$/;"	f
getStatusCode	bootstrap/cache/compiled.php	/^    public function getStatusCode()$/;"	f
getStorageKey	bootstrap/cache/compiled.php	/^    public function getStorageKey()$/;"	f
getStorageKey	bootstrap/cache/compiled.php	/^    public function getStorageKey();$/;"	f
getStream	bootstrap/cache/compiled.php	/^    public function getStream()$/;"	f
getStringParameters	bootstrap/cache/compiled.php	/^    protected function getStringParameters(array $parameters)$/;"	f
getStylesheet	bootstrap/cache/compiled.php	/^    public function getStylesheet(FlattenException $exception)$/;"	f
getTable	bootstrap/cache/compiled.php	/^    public function getTable()$/;"	f
getTags	bootstrap/cache/compiled.php	/^    protected function getTags($escaped = false)$/;"	f
getTalksAttribute	app/User.php	/^    public function getTalksAttribute()$/;"	f
getTimedFilename	bootstrap/cache/compiled.php	/^    protected function getTimedFilename()$/;"	f
getToken	bootstrap/cache/compiled.php	/^    public function getToken()$/;"	f
getTokens	bootstrap/cache/compiled.php	/^    public function getTokens()$/;"	f
getTouchedRelations	bootstrap/cache/compiled.php	/^    public function getTouchedRelations()$/;"	f
getTrustedHeaderName	bootstrap/cache/compiled.php	/^    public static function getTrustedHeaderName($key)$/;"	f
getTrustedHosts	bootstrap/cache/compiled.php	/^    public static function getTrustedHosts()$/;"	f
getTrustedProxies	bootstrap/cache/compiled.php	/^    public static function getTrustedProxies()$/;"	f
getTtl	bootstrap/cache/compiled.php	/^    public function getTtl()$/;"	f
getType	app/ApiResources/Bio.php	/^    public function getType()$/;"	f
getType	app/ApiResources/Conference.php	/^    public function getType()$/;"	f
getType	app/ApiResources/Me.php	/^    public function getType()$/;"	f
getType	app/ApiResources/Talk.php	/^    public function getType()$/;"	f
getUpdatedAtColumn	bootstrap/cache/compiled.php	/^    public function getUpdatedAtColumn()$/;"	f
getUri	bootstrap/cache/compiled.php	/^    public function getUri()$/;"	f
getUriForPath	bootstrap/cache/compiled.php	/^    public function getUriForPath($path)$/;"	f
getUrl	app/models/TalkRevision.php	/^    public function getUrl()$/;"	f
getUrlRange	bootstrap/cache/compiled.php	/^    public function getUrlRange($start, $end)$/;"	f
getUrlencodedPrefix	bootstrap/cache/compiled.php	/^    private function getUrlencodedPrefix($string, $prefix)$/;"	f
getUser	bootstrap/cache/compiled.php	/^    public function getUser()$/;"	f
getUserByRecaller	bootstrap/cache/compiled.php	/^    protected function getUserByRecaller($recaller)$/;"	f
getUserInfo	bootstrap/cache/compiled.php	/^    public function getUserInfo()$/;"	f
getUserResolver	bootstrap/cache/compiled.php	/^    public function getUserResolver()$/;"	f
getValidationFactory	bootstrap/cache/compiled.php	/^    protected function getValidationFactory()$/;"	f
getValidatorInstance	bootstrap/cache/compiled.php	/^    protected function getValidatorInstance()$/;"	f
getValidators	bootstrap/cache/compiled.php	/^    public static function getValidators()$/;"	f
getValue	bootstrap/cache/compiled.php	/^    public function getValue()$/;"	f
getVariables	bootstrap/cache/compiled.php	/^    public function getVariables()$/;"	f
getVary	bootstrap/cache/compiled.php	/^    public function getVary()$/;"	f
getVerb	bootstrap/cache/compiled.php	/^    public function getVerb($name)$/;"	f
getVisible	bootstrap/cache/compiled.php	/^    public function getVisible()$/;"	f
getWildcardListeners	bootstrap/cache/compiled.php	/^    protected function getWildcardListeners($eventName)$/;"	f
getWriteConfig	bootstrap/cache/compiled.php	/^    protected function getWriteConfig(array $config)$/;"	f
give	bootstrap/cache/compiled.php	/^    public function give($implementation);$/;"	f
glob	bootstrap/cache/compiled.php	/^        $glob = glob($directory . '\/*');$/;"	v
glob	bootstrap/cache/compiled.php	/^        $glob = str_replace(array('{filename}', '{date}'), array($fileInfo['filename'], '*'), $fileInfo['dirname'] . '\/' . $this->filenameFormat);$/;"	v
glob	bootstrap/cache/compiled.php	/^    public function glob($pattern, $flags = 0)$/;"	f
globalAfterResolvingCallbacks	bootstrap/cache/compiled.php	/^    protected $globalAfterResolvingCallbacks = [];$/;"	v
globalResolvingCallbacks	bootstrap/cache/compiled.php	/^    protected $globalResolvingCallbacks = [];$/;"	v
globalScopes	bootstrap/cache/compiled.php	/^    protected static $globalScopes = [];$/;"	v
glue	bootstrap/cache/compiled.php	/^    public function implode($value, $glue = null)$/;"	v
grammar	bootstrap/cache/compiled.php	/^        $grammar = $conn->getQueryGrammar();$/;"	v
greatTalk	database/seeds/TalksSeeder.php	/^        $greatTalk = $author->talks()->create([]);$/;"	v
group	bootstrap/cache/compiled.php	/^        $group = $segments[0];$/;"	v
group	bootstrap/cache/compiled.php	/^        $group = end($this->groupStack);$/;"	v
group	bootstrap/cache/compiled.php	/^    protected function publishes(array $paths, $group = null)$/;"	v
group	bootstrap/cache/compiled.php	/^    public function group(array $attributes, Closure $callback)$/;"	f
group	bootstrap/cache/compiled.php	/^    public function group(array $attributes, Closure $callback);$/;"	f
group	bootstrap/cache/compiled.php	/^    public static function pathsToPublish($provider = null, $group = null)$/;"	v
groupAndItem	bootstrap/cache/compiled.php	/^        $groupAndItem = array_slice($this->parseBasicSegments($itemSegments), 1);$/;"	v
groupBy	bootstrap/cache/compiled.php	/^        $groupBy = $this->valueRetriever($groupBy);$/;"	v
groupBy	bootstrap/cache/compiled.php	/^    public function groupBy($groupBy, $preserveKeys = false)$/;"	f
groupKeys	bootstrap/cache/compiled.php	/^                $groupKeys = [$groupKeys];$/;"	v
groupKeys	bootstrap/cache/compiled.php	/^            $groupKeys = $groupBy($value, $key);$/;"	v
groupStack	bootstrap/cache/compiled.php	/^        $groupStack = last($this->router->getGroupStack());$/;"	v
groupStack	bootstrap/cache/compiled.php	/^    protected $groupStack = [];$/;"	v
guard	app/Http/Middleware/Authenticate.php	/^    public function handle($request, Closure $next, $guard = null)$/;"	v
guard	app/Http/Middleware/RedirectIfAuthenticated.php	/^    public function handle($request, Closure $next, $guard = null)$/;"	v
guard	bootstrap/cache/compiled.php	/^            $guard = new RequestGuard($callback, $this->app['request']);$/;"	v
guard	bootstrap/cache/compiled.php	/^        $guard = $this->getGuard();$/;"	v
guard	bootstrap/cache/compiled.php	/^        $guard = new SessionGuard($name, $provider, $this->app['session.store']);$/;"	v
guard	bootstrap/cache/compiled.php	/^        $guard = new TokenGuard($this->createUserProvider($config['provider']), $this->app['request']);$/;"	v
guard	bootstrap/cache/compiled.php	/^    public function guard($name = null)$/;"	f
guard	bootstrap/cache/compiled.php	/^    public function guard(array $guarded)$/;"	f
guarded	app/models/Conference.php	/^    protected $guarded = array($/;"	v
guarded	app/models/Talk.php	/^    protected $guarded = [$/;"	v
guarded	app/models/TalkRevision.php	/^    protected $guarded = [$/;"	v
guarded	bootstrap/cache/compiled.php	/^        $this->guarded = $guarded;$/;"	v
guarded	bootstrap/cache/compiled.php	/^    protected $guarded = ['*'];$/;"	v
guards	bootstrap/cache/compiled.php	/^    protected $guards = [];$/;"	v
guest	bootstrap/cache/compiled.php	/^    public function guest();$/;"	f
guestMiddleware	bootstrap/cache/compiled.php	/^    protected function guestMiddleware()$/;"	f
guestMiddleware	bootstrap/cache/compiled.php	/^    public function guestMiddleware()$/;"	f
gulp	package.json	/^    "gulp": "^3.8.8",$/;"	f
guzzlehttp/guzzle	composer.json	/^        "guzzlehttp\/guzzle": "~5.3|~6.0",$/;"	f
halt	bootstrap/cache/compiled.php	/^    protected function fireModelEvent($event, $halt = true)$/;"	v
handle	app/Commands/CreateSubmission.php	/^    public function handle()$/;"	f
handle	app/Commands/DestroySubmission.php	/^    public function handle()$/;"	f
handle	app/Console/Commands/GenerateOAuthClient.php	/^    public function handle()$/;"	f
handle	app/Console/Commands/Inspire.php	/^    public function handle()$/;"	f
handle	app/Http/Middleware/Authenticate.php	/^    public function handle($request, Closure $next, $guard = null)$/;"	f
handle	app/Http/Middleware/RedirectIfAuthenticated.php	/^    public function handle($request, Closure $next, $guard = null)$/;"	f
handle	bootstrap/cache/compiled.php	/^        $handle = fopen($path, 'r');$/;"	v
handle	bootstrap/cache/compiled.php	/^    public function handle($request)$/;"	f
handle	bootstrap/cache/compiled.php	/^    public function handle($request);$/;"	f
handle	bootstrap/cache/compiled.php	/^    public function handle($request, Closure $next)$/;"	f
handle	bootstrap/cache/compiled.php	/^    public function handle(Request $request, $type = self::MASTER_REQUEST, $catch = true);$/;"	f
handle	bootstrap/cache/compiled.php	/^    public function handle(SymfonyRequest $request, $type = self::MASTER_REQUEST, $catch = true)$/;"	f
handle	bootstrap/cache/compiled.php	/^    public function handle(\\Exception $exception)$/;"	f
handle	bootstrap/cache/compiled.php	/^    public function handle(array $record)$/;"	f
handle	bootstrap/cache/compiled.php	/^    public function handle(array $record);$/;"	f
handleBatch	bootstrap/cache/compiled.php	/^    public function handleBatch(array $records)$/;"	f
handleBatch	bootstrap/cache/compiled.php	/^    public function handleBatch(array $records);$/;"	f
handleError	bootstrap/cache/compiled.php	/^    public function handleError($level, $message, $file = '', $line = 0, $context = [])$/;"	f
handleError	bootstrap/cache/compiled.php	/^    public function handleError($type, $message, $file, $line, array $context, array $backtrace = null)$/;"	f
handleException	bootstrap/cache/compiled.php	/^    public function handleException($e)$/;"	f
handleException	bootstrap/cache/compiled.php	/^    public function handleException($exception, array $error = null)$/;"	f
handleFatalError	bootstrap/cache/compiled.php	/^    public static function handleFatalError(array $error = null)$/;"	f
handleJsonError	bootstrap/cache/compiled.php	/^    private function handleJsonError($code, $data)$/;"	f
handleShutdown	bootstrap/cache/compiled.php	/^    public function handleShutdown()$/;"	f
handleUserWasAuthenticated	bootstrap/cache/compiled.php	/^    protected function handleUserWasAuthenticated(Request $request, $throttles)$/;"	f
handleViewException	bootstrap/cache/compiled.php	/^    protected function handleViewException(Exception $e, $obLevel)$/;"	f
handler	bootstrap/cache/compiled.php	/^            $handler = $prev[0];$/;"	v
handler	bootstrap/cache/compiled.php	/^            $handler = is_array($handler) ? $handler[0] : null;$/;"	v
handler	bootstrap/cache/compiled.php	/^            $handler = new static();$/;"	v
handler	bootstrap/cache/compiled.php	/^            $handler = set_error_handler('var_dump');$/;"	v
handler	bootstrap/cache/compiled.php	/^        $handler = $this->createCacheHandler('redis');$/;"	v
handler	bootstrap/cache/compiled.php	/^        $handler = (new ReflectionClass($class))->newInstanceWithoutConstructor();$/;"	v
handler	bootstrap/cache/compiled.php	/^        $handler = is_array($handler) ? $handler[0] : null;$/;"	v
handler	bootstrap/cache/compiled.php	/^        $handler = new static($debug, $charset, $fileLinkFormat);$/;"	v
handler	bootstrap/cache/compiled.php	/^        $handler = set_error_handler('var_dump');$/;"	v
handler	bootstrap/cache/compiled.php	/^        $this->handler = $handler;$/;"	v
handler	bootstrap/cache/compiled.php	/^    private $handler;$/;"	v
handler	bootstrap/cache/compiled.php	/^    protected $handler;$/;"	v
handler	bootstrap/cache/compiled.php	/^    public function setExceptionHandler(callable $handler = null)$/;"	v
handler	bootstrap/cache/compiled.php	/^    public function setHandler(callable $handler = null)$/;"	v
handler	bootstrap/cache/compiled.php	/^    public static function register(self $handler = null, $replace = true)$/;"	v
handlerKey	bootstrap/cache/compiled.php	/^                $handlerKey = key($this->handlers);$/;"	v
handlerKey	bootstrap/cache/compiled.php	/^        $handlerKey = null;$/;"	v
handlerNeedsRequest	bootstrap/cache/compiled.php	/^    public function handlerNeedsRequest()$/;"	f
handlerNeedsRequest	bootstrap/cache/compiled.php	/^    public function handlerNeedsRequest();$/;"	f
handlerShouldBeQueued	bootstrap/cache/compiled.php	/^    protected function handlerShouldBeQueued($class)$/;"	f
handlers	bootstrap/cache/compiled.php	/^        $this->handlers = $handlers;$/;"	v
handlers	bootstrap/cache/compiled.php	/^        $this->handlers = array();$/;"	v
handlers	bootstrap/cache/compiled.php	/^    protected $handlers;$/;"	v
handlers	bootstrap/cache/compiled.php	/^    public function __construct($name, array $handlers = array(), array $processors = array())$/;"	v
has	bootstrap/cache/compiled.php	/^    public function has($ability)$/;"	f
has	bootstrap/cache/compiled.php	/^    public function has($ability);$/;"	f
has	bootstrap/cache/compiled.php	/^    public function has($key = null)$/;"	f
has	bootstrap/cache/compiled.php	/^    public function has($key = null);$/;"	f
has	bootstrap/cache/compiled.php	/^    public function has($key)$/;"	f
has	bootstrap/cache/compiled.php	/^    public function has($key);$/;"	f
has	bootstrap/cache/compiled.php	/^    public function has($name)$/;"	f
has	bootstrap/cache/compiled.php	/^    public function has($name);$/;"	f
has	bootstrap/cache/compiled.php	/^    public function has($value)$/;"	f
has	bootstrap/cache/compiled.php	/^    public static function has($array, $key)$/;"	f
hasAnnouncedCallForProposals	app/models/Conference.php	/^    private function hasAnnouncedCallForProposals()$/;"	f
hasAttribute	bootstrap/cache/compiled.php	/^    public function hasAttribute($name)$/;"	f
hasBag	bootstrap/cache/compiled.php	/^    public function hasBag($key = 'default')$/;"	f
hasBeenBootstrapped	bootstrap/cache/compiled.php	/^        $this->hasBeenBootstrapped = true;$/;"	v
hasBeenBootstrapped	bootstrap/cache/compiled.php	/^    protected $hasBeenBootstrapped = false;$/;"	v
hasBeenBootstrapped	bootstrap/cache/compiled.php	/^    public function hasBeenBootstrapped()$/;"	f
hasCacheControlDirective	bootstrap/cache/compiled.php	/^    public function hasCacheControlDirective($key)$/;"	f
hasCast	bootstrap/cache/compiled.php	/^    public function hasCast($key, $types = null)$/;"	f
hasChildren	bootstrap/cache/compiled.php	/^    public function hasChildren()$/;"	f
hasCookie	bootstrap/cache/compiled.php	/^    public function hasCookie($key)$/;"	f
hasDefault	bootstrap/cache/compiled.php	/^    public function hasDefault($name)$/;"	f
hasExpiredCfp	app/models/Conference.php	/^        $hasExpiredCfp = self::whereNotNull('cfp_ends_at')$/;"	v
hasFile	bootstrap/cache/compiled.php	/^    public function hasFile($key)$/;"	f
hasGetMutator	bootstrap/cache/compiled.php	/^    public function hasGetMutator($key)$/;"	f
hasGlobalScope	bootstrap/cache/compiled.php	/^    public static function hasGlobalScope($scope)$/;"	f
hasGroupStack	bootstrap/cache/compiled.php	/^    public function hasGroupStack()$/;"	f
hasHeader	bootstrap/cache/compiled.php	/^    public function hasHeader($key)$/;"	f
hasHintInformation	bootstrap/cache/compiled.php	/^    public function hasHintInformation($name)$/;"	f
hasListeners	bootstrap/cache/compiled.php	/^    public function hasListeners($eventName)$/;"	f
hasListeners	bootstrap/cache/compiled.php	/^    public function hasListeners($eventName);$/;"	f
hasMacro	bootstrap/cache/compiled.php	/^    public static function hasMacro($name)$/;"	f
hasMany	bootstrap/cache/compiled.php	/^    public function hasMany($related, $foreignKey = null, $localKey = null)$/;"	f
hasManyThrough	bootstrap/cache/compiled.php	/^    public function hasManyThrough($related, $through, $firstKey = null, $secondKey = null, $localKey = null)$/;"	f
hasMiddleware	bootstrap/cache/compiled.php	/^    public function hasMiddleware($middleware)$/;"	f
hasMonologConfigurator	bootstrap/cache/compiled.php	/^    public function hasMonologConfigurator()$/;"	f
hasMore	bootstrap/cache/compiled.php	/^        $this->hasMore = count($this->items) > $this->perPage;$/;"	v
hasMore	bootstrap/cache/compiled.php	/^    protected $hasMore;$/;"	v
hasMorePages	bootstrap/cache/compiled.php	/^    public function hasMorePages()$/;"	f
hasMorePages	bootstrap/cache/compiled.php	/^    public function hasMorePages();$/;"	f
hasNamedRoute	bootstrap/cache/compiled.php	/^    public function hasNamedRoute($name)$/;"	f
hasNoCfp	app/models/Conference.php	/^        $hasNoCfp = self::whereNull('cfp_ends_at')$/;"	v
hasNoCfpOrConf	app/models/Conference.php	/^        $hasNoCfpOrConf = self::whereNull('cfp_ends_at')$/;"	v
hasOldInput	bootstrap/cache/compiled.php	/^    public function hasOldInput($key = null)$/;"	f
hasOne	bootstrap/cache/compiled.php	/^    public function hasOne($related, $foreignKey = null, $localKey = null)$/;"	f
hasOpenCfp	app/models/Conference.php	/^        $hasOpenCfp = self::whereNotNull('cfp_ends_at')$/;"	v
hasOption	bootstrap/cache/compiled.php	/^    public function hasOption($name)$/;"	f
hasPages	bootstrap/cache/compiled.php	/^    public function hasPages()$/;"	f
hasPages	bootstrap/cache/compiled.php	/^    public function hasPages();$/;"	f
hasParameter	bootstrap/cache/compiled.php	/^    public function hasParameter($name)$/;"	f
hasParameters	bootstrap/cache/compiled.php	/^    public function hasParameters()$/;"	f
hasPreviousSession	bootstrap/cache/compiled.php	/^    public function hasPreviousSession()$/;"	f
hasQueued	bootstrap/cache/compiled.php	/^    public function hasQueued($key)$/;"	f
hasRequirement	bootstrap/cache/compiled.php	/^    public function hasRequirement($key)$/;"	f
hasScheme	bootstrap/cache/compiled.php	/^    public function hasScheme($scheme)$/;"	f
hasSection	bootstrap/cache/compiled.php	/^    public function hasSection($name)$/;"	f
hasSession	bootstrap/cache/compiled.php	/^    public function hasSession()$/;"	f
hasSetMutator	bootstrap/cache/compiled.php	/^    public function hasSetMutator($key)$/;"	f
hasValidCredentials	bootstrap/cache/compiled.php	/^    protected function hasValidCredentials($user, $credentials)$/;"	f
hasVary	bootstrap/cache/compiled.php	/^    public function hasVary()$/;"	f
hash	bootstrap/cache/compiled.php	/^        $hash = password_hash($value, PASSWORD_BCRYPT, ['cost' => $cost]);$/;"	v
hash	bootstrap/cache/compiled.php	/^    protected function hash($iv, $value)$/;"	f
hasher	bootstrap/cache/compiled.php	/^        $this->hasher = $hasher;$/;"	v
hasher	bootstrap/cache/compiled.php	/^    protected $hasher;$/;"	v
header	bootstrap/cache/compiled.php	/^        $header = $this->getCacheControlHeader();$/;"	v
header	bootstrap/cache/compiled.php	/^        $header = $this->header('Authorization', '');$/;"	v
header	bootstrap/cache/compiled.php	/^    public function header($key = null, $default = null)$/;"	f
header	bootstrap/cache/compiled.php	/^    public function header($key, $value, $replace = true)$/;"	f
headerNames	bootstrap/cache/compiled.php	/^        $this->headerNames = array();$/;"	v
headerNames	bootstrap/cache/compiled.php	/^    protected $headerNames = array();$/;"	v
headers	app/Http/Controllers/AccountController.php	/^        $headers = ['Content-type' => 'application\/json'];$/;"	v
headers	bootstrap/cache/compiled.php	/^        $headers = $this->headers;$/;"	v
headers	bootstrap/cache/compiled.php	/^        $headers = ['WWW-Authenticate' => 'Basic'];$/;"	v
headers	bootstrap/cache/compiled.php	/^        $headers = array();$/;"	v
headers	bootstrap/cache/compiled.php	/^        $this->headers = array();$/;"	v
headers	bootstrap/cache/compiled.php	/^        $this->headers = clone $this->headers;$/;"	v
headers	bootstrap/cache/compiled.php	/^        $this->headers = new HeaderBag($this->server->getHeaders());$/;"	v
headers	bootstrap/cache/compiled.php	/^        $this->headers = new ResponseHeaderBag($headers);$/;"	v
headers	bootstrap/cache/compiled.php	/^    protected $headers = array();$/;"	v
headers	bootstrap/cache/compiled.php	/^    public $headers;$/;"	v
headers	bootstrap/cache/compiled.php	/^    public function __construct(array $headers = array())$/;"	v
headers	bootstrap/cache/compiled.php	/^    public function replace(array $headers = array())$/;"	v
hidden	app/User.php	/^    protected $hidden = ['password', 'remember_token'];$/;"	v
hidden	bootstrap/cache/compiled.php	/^        $this->hidden = $hidden;$/;"	v
hidden	bootstrap/cache/compiled.php	/^        $this->hidden = array_diff($this->hidden, (array) $attributes);$/;"	v
hidden	bootstrap/cache/compiled.php	/^        $this->hidden = array_merge($this->hidden, $attributes);$/;"	v
hidden	bootstrap/cache/compiled.php	/^    protected $hidden = [];$/;"	v
hidden	bootstrap/cache/compiled.php	/^    public function allFiles($directory, $hidden = false)$/;"	v
hints	bootstrap/cache/compiled.php	/^            $hints = array_merge($hints, $this->hints[$namespace]);$/;"	v
hints	bootstrap/cache/compiled.php	/^            $hints = array_merge($this->hints[$namespace], $hints);$/;"	v
hints	bootstrap/cache/compiled.php	/^        $hints = (array) $hints;$/;"	v
hints	bootstrap/cache/compiled.php	/^    protected $hints = [];$/;"	v
host	bootstrap/cache/compiled.php	/^                $host = $this->server->get('SERVER_ADDR', '');$/;"	v
host	bootstrap/cache/compiled.php	/^            $host = $elements[count($elements) - 1];$/;"	v
host	bootstrap/cache/compiled.php	/^        $host = strtolower(preg_replace('\/:\\\\d+$\/', '', trim($host)));$/;"	v
host	bootstrap/cache/compiled.php	/^        $this->host = $data['host'];$/;"	v
host	bootstrap/cache/compiled.php	/^        $this->host = (string) $pattern;$/;"	v
host	bootstrap/cache/compiled.php	/^    private $host = '';$/;"	v
hostRegex	bootstrap/cache/compiled.php	/^            $hostRegex = $result['regex'];$/;"	v
hostRegex	bootstrap/cache/compiled.php	/^        $hostRegex = null;$/;"	v
hostRegex	bootstrap/cache/compiled.php	/^        $this->hostRegex = $data['host_regex'];$/;"	v
hostRegex	bootstrap/cache/compiled.php	/^        $this->hostRegex = $hostRegex;$/;"	v
hostRegex	bootstrap/cache/compiled.php	/^    private $hostRegex;$/;"	v
hostRegex	bootstrap/cache/compiled.php	/^    public function __construct($staticPrefix, $regex, array $tokens, array $pathVariables, $hostRegex = null, array $hostTokens = array(), array $hostVariables = array(), array $variables = array())$/;"	v
hostTokens	bootstrap/cache/compiled.php	/^            $hostTokens = $result['tokens'];$/;"	v
hostTokens	bootstrap/cache/compiled.php	/^        $hostTokens = array();$/;"	v
hostTokens	bootstrap/cache/compiled.php	/^        $this->hostTokens = $data['host_tokens'];$/;"	v
hostTokens	bootstrap/cache/compiled.php	/^        $this->hostTokens = $hostTokens;$/;"	v
hostTokens	bootstrap/cache/compiled.php	/^    private $hostTokens;$/;"	v
hostVariables	bootstrap/cache/compiled.php	/^            $hostVariables = $result['variables'];$/;"	v
hostVariables	bootstrap/cache/compiled.php	/^        $hostVariables = array();$/;"	v
hostVariables	bootstrap/cache/compiled.php	/^        $this->hostVariables = $data['host_vars'];$/;"	v
hostVariables	bootstrap/cache/compiled.php	/^        $this->hostVariables = $hostVariables;$/;"	v
hostVariables	bootstrap/cache/compiled.php	/^    private $hostVariables;$/;"	v
htmlize	app/models/TalkRevision.php	/^    private function htmlize($string)$/;"	f
httpMethodParameterOverride	bootstrap/cache/compiled.php	/^    protected static $httpMethodParameterOverride = false;$/;"	v
httpOnly	bootstrap/cache/compiled.php	/^        $this->httpOnly = (bool) $httpOnly;$/;"	v
httpOnly	bootstrap/cache/compiled.php	/^    protected $httpOnly;$/;"	v
httpOnly	bootstrap/cache/compiled.php	/^    public function httpOnly()$/;"	f
https	bootstrap/cache/compiled.php	/^        $https = $this->server->get('HTTPS');$/;"	v
httpsOnly	bootstrap/cache/compiled.php	/^    public function httpsOnly()$/;"	f
hydrate	bootstrap/cache/compiled.php	/^    public static function hydrate(array $items, $connection = null)$/;"	f
hydrateRaw	bootstrap/cache/compiled.php	/^    public static function hydrateRaw($query, $bindings = [], $connection = null)$/;"	f
i	bootstrap/cache/compiled.php	/^        $i = 'index.php';$/;"	v
i	bootstrap/cache/compiled.php	/^        foreach ($sourceDirs as $i => $dir) {$/;"	v
i	database/migrations/2015_05_24_113910_drop_versions.php	/^                foreach ($versions as $i => $version) {$/;"	v
i	public/js/app.js	/^(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){$/;"	v
id	bootstrap/cache/compiled.php	/^            $id = $this->generateSessionId();$/;"	v
id	bootstrap/cache/compiled.php	/^            $id = $this->user()->getAuthIdentifier();$/;"	v
id	bootstrap/cache/compiled.php	/^        $id = $id ?: $name . '_id';$/;"	v
id	bootstrap/cache/compiled.php	/^        $id = $query->insertGetId($attributes, $keyName = $this->getKeyName());$/;"	v
id	bootstrap/cache/compiled.php	/^        $id = $this->session->get($this->getName());$/;"	v
id	bootstrap/cache/compiled.php	/^        $id = $this->session->get($this->getName(), $this->getRecallerId());$/;"	v
id	bootstrap/cache/compiled.php	/^        $this->id = $id;$/;"	v
id	bootstrap/cache/compiled.php	/^        $this->id = $this->generateSessionId();$/;"	v
id	bootstrap/cache/compiled.php	/^    protected $id;$/;"	v
id	bootstrap/cache/compiled.php	/^    public function __construct($name, SessionHandlerInterface $handler, $id = null)$/;"	v
id	bootstrap/cache/compiled.php	/^    public function id()$/;"	f
id	bootstrap/cache/compiled.php	/^    public function id();$/;"	f
identifier	bootstrap/cache/compiled.php	/^        foreach ($this->getGlobalScopes() as $identifier => $scope) {$/;"	v
ids	bootstrap/cache/compiled.php	/^        $ids = is_array($ids) ? $ids : func_get_args();$/;"	v
ignore	bootstrap/cache/compiled.php	/^        $this->ignore = static::IGNORE_VCS_FILES | static::IGNORE_DOT_FILES;$/;"	v
ignore	bootstrap/cache/compiled.php	/^    private $ignore = 0;$/;"	v
ignore	nitpick.json	/^	"ignore": [$/;"	f
ignoreDotFiles	bootstrap/cache/compiled.php	/^    public function ignoreDotFiles($ignoreDotFiles)$/;"	f
ignoreEmptyContextAndExtra	bootstrap/cache/compiled.php	/^        $this->ignoreEmptyContextAndExtra = $ignore;$/;"	v
ignoreEmptyContextAndExtra	bootstrap/cache/compiled.php	/^        $this->ignoreEmptyContextAndExtra = $ignoreEmptyContextAndExtra;$/;"	v
ignoreEmptyContextAndExtra	bootstrap/cache/compiled.php	/^    protected $ignoreEmptyContextAndExtra;$/;"	v
ignoreEmptyContextAndExtra	bootstrap/cache/compiled.php	/^    public function ignoreEmptyContextAndExtra($ignore = true)$/;"	f
ignoreErrors	bootstrap/cache/compiled.php	/^    protected function toJson($data, $ignoreErrors = false)$/;"	v
ignoreUnreadableDirs	bootstrap/cache/compiled.php	/^        $this->ignoreUnreadableDirs = $ignoreUnreadableDirs;$/;"	v
ignoreUnreadableDirs	bootstrap/cache/compiled.php	/^        $this->ignoreUnreadableDirs = (bool) $ignore;$/;"	v
ignoreUnreadableDirs	bootstrap/cache/compiled.php	/^    private $ignoreUnreadableDirs = false;$/;"	v
ignoreUnreadableDirs	bootstrap/cache/compiled.php	/^    private $ignoreUnreadableDirs;$/;"	v
ignoreUnreadableDirs	bootstrap/cache/compiled.php	/^    public function __construct($path, $flags, $ignoreUnreadableDirs = false)$/;"	v
ignoreUnreadableDirs	bootstrap/cache/compiled.php	/^    public function ignoreUnreadableDirs($ignore = true)$/;"	f
ignoreVCS	bootstrap/cache/compiled.php	/^    public function ignoreVCS($ignoreVCS)$/;"	f
implementation	bootstrap/cache/compiled.php	/^    public static function addGlobalScope($scope, Closure $implementation = null)$/;"	v
implode	bootstrap/cache/compiled.php	/^    public function implode($value, $glue = null)$/;"	f
import	app/JoindIn/ConferenceImporter.php	/^    public function import($eventId)$/;"	f
importer	app/Console/Commands/syncJoindInEvents.php	/^        $this->importer = new ConferenceImporter($adminUserId);$/;"	v
importer	app/Console/Commands/syncJoindInEvents.php	/^    private $importer;$/;"	v
in	bootstrap/cache/compiled.php	/^    public function in($dirs)$/;"	f
inCurlies	bootstrap/cache/compiled.php	/^        $inCurlies = 0;$/;"	v
includeStacktraces	bootstrap/cache/compiled.php	/^        $this->includeStacktraces = $include;$/;"	v
includeStacktraces	bootstrap/cache/compiled.php	/^    protected $includeStacktraces;$/;"	v
includeStacktraces	bootstrap/cache/compiled.php	/^    public function includeStacktraces($include = true)$/;"	f
includingMethod	bootstrap/cache/compiled.php	/^    protected function check(array $routes, $request, $includingMethod = true)$/;"	v
includingMethod	bootstrap/cache/compiled.php	/^    public function matches(Request $request, $includingMethod = true)$/;"	v
increment	bootstrap/cache/compiled.php	/^    protected function increment($column, $amount = 1, array $extra = [])$/;"	f
incrementOrDecrement	bootstrap/cache/compiled.php	/^    protected function incrementOrDecrement($column, $amount, $extra, $method)$/;"	f
incrementOrDecrementAttributeValue	bootstrap/cache/compiled.php	/^    protected function incrementOrDecrementAttributeValue($column, $amount, $method)$/;"	f
incrementRender	bootstrap/cache/compiled.php	/^    public function incrementRender()$/;"	f
incrementing	app/models/UuidBase.php	/^    public $incrementing = false;$/;"	v
incrementing	bootstrap/cache/compiled.php	/^        $this->incrementing = $value;$/;"	v
incrementing	bootstrap/cache/compiled.php	/^    public $incrementing = true;$/;"	v
ind	bootstrap/cache/compiled.php	/^                    $ind = $count - $position + 1;$/;"	v
index	app/Http/Controllers/Api/ConferencesController.php	/^    public function index()$/;"	f
index	app/Http/Controllers/Api/MeController.php	/^    public function index()$/;"	f
index	app/Http/Controllers/Api/UserBiosController.php	/^    public function index($userId)$/;"	f
index	app/Http/Controllers/Api/UserTalksController.php	/^    public function index($userId)$/;"	f
index	app/Http/Controllers/BiosController.php	/^    public function index()$/;"	f
index	app/Http/Controllers/ConferencesController.php	/^    public function index()$/;"	f
index	app/Http/Controllers/DashboardController.php	/^    public function index()$/;"	f
index	app/Http/Controllers/PublicProfileController.php	/^    public function index()$/;"	f
index	app/Http/Controllers/TalksController.php	/^    public function index()$/;"	f
index	app/Http/Controllers/WelcomeController.php	/^    public function index()$/;"	f
index	bootstrap/cache/compiled.php	/^            $index = 0;$/;"	v
index	bootstrap/cache/compiled.php	/^        $index = 0;$/;"	v
index	bootstrap/cache/compiled.php	/^        $this->index = $index;$/;"	v
index	bootstrap/cache/compiled.php	/^    private $index = 0;$/;"	v
info	bootstrap/cache/compiled.php	/^    public function info($message, array $context = [])$/;"	f
info	bootstrap/cache/compiled.php	/^    public function info($message, array $context = []);$/;"	f
info	bootstrap/cache/compiled.php	/^    public function info($message, array $context = array())$/;"	f
info	bootstrap/cache/compiled.php	/^    public function info($message, array $context = array());$/;"	f
infos	bootstrap/cache/compiled.php	/^            $infos = stream_get_meta_data($stream);$/;"	v
initial	bootstrap/cache/compiled.php	/^    public function reduce(callable $callback, $initial = null)$/;"	v
initialize	bootstrap/cache/compiled.php	/^    public function initialize(array $query = array(), array $request = array(), array $attributes = array(), array $cookies = array(), array $files = array(), array $server = array(), $content = null)$/;"	f
initialize	bootstrap/cache/compiled.php	/^    public function initialize(array &$array)$/;"	f
initialize	bootstrap/cache/compiled.php	/^    public function initialize(array &$array);$/;"	f
initialize	bootstrap/cache/compiled.php	/^    public function initialize(array &$attributes)$/;"	f
initializeFormats	bootstrap/cache/compiled.php	/^    protected static function initializeFormats()$/;"	f
initializeLocalBag	bootstrap/cache/compiled.php	/^    protected function initializeLocalBag($bag)$/;"	f
initializeRequest	bootstrap/cache/compiled.php	/^    protected function initializeRequest(FormRequest $form, Request $current)$/;"	f
inject	bootstrap/cache/compiled.php	/^    public function inject($section, $content)$/;"	f
innerIterator	bootstrap/cache/compiled.php	/^            $innerIterator = $iterator->getInnerIterator();$/;"	v
innerKey	bootstrap/cache/compiled.php	/^            foreach ($key as $innerKey => $innerValue) {$/;"	v
innerKey	bootstrap/cache/compiled.php	/^        foreach ($key as $innerKey => $innerValue) {$/;"	v
input	app/Services/CreateBioForm.php	/^        $this->input = $this->removeEmptyFields($input);$/;"	v
input	app/Services/CreateBioForm.php	/^    private $input;$/;"	v
input	app/Services/CreateConferenceForm.php	/^        $this->input = $this->removeEmptyFields($input);$/;"	v
input	app/Services/CreateConferenceForm.php	/^    private $input;$/;"	v
input	bootstrap/cache/compiled.php	/^        $input = $this->all();$/;"	v
input	bootstrap/cache/compiled.php	/^        $input = $this->get('_old_input', []);$/;"	v
input	bootstrap/cache/compiled.php	/^        $input = $this->getInputSource()->all() + $this->query->all();$/;"	v
input	bootstrap/cache/compiled.php	/^    public function input($key = null, $default = null)$/;"	f
input	bootstrap/cache/compiled.php	/^    public function input($key, $default = null)$/;"	f
input	tests/CreateConferenceFormTest.php	/^        $input = [$/;"	v
insertAndSetId	bootstrap/cache/compiled.php	/^    protected function insertAndSetId(Builder $query, $attributes)$/;"	f
instance	bootstrap/cache/compiled.php	/^            $instance = $this->app->make($name);$/;"	v
instance	bootstrap/cache/compiled.php	/^            $instance = $this->app->resolveProviderClass($provider);$/;"	v
instance	bootstrap/cache/compiled.php	/^            $instance = $this->container->make($class);$/;"	v
instance	bootstrap/cache/compiled.php	/^            $instance = $this->createProvider($provider);$/;"	v
instance	bootstrap/cache/compiled.php	/^            $instance = $this->getPolicyFor($arguments[0]);$/;"	v
instance	bootstrap/cache/compiled.php	/^            $instance = $this->transformDependency($parameter, $parameters, $originalParameters);$/;"	v
instance	bootstrap/cache/compiled.php	/^            $instance = new $class();$/;"	v
instance	bootstrap/cache/compiled.php	/^        $instance = $this->getValidatorInstance();$/;"	v
instance	bootstrap/cache/compiled.php	/^        $instance = $this->make($abstract);$/;"	v
instance	bootstrap/cache/compiled.php	/^        $instance = $this->makeController($controller);$/;"	v
instance	bootstrap/cache/compiled.php	/^        $instance = (new static())->setConnection($connection);$/;"	v
instance	bootstrap/cache/compiled.php	/^        $instance = new $related();$/;"	v
instance	bootstrap/cache/compiled.php	/^        $instance = new static();$/;"	v
instance	bootstrap/cache/compiled.php	/^        $instance = static::getFacadeRoot();$/;"	v
instance	bootstrap/cache/compiled.php	/^    protected static $instance;$/;"	v
instance	bootstrap/cache/compiled.php	/^    public function instance($abstract, $instance)$/;"	f
instance	bootstrap/cache/compiled.php	/^    public function instance($abstract, $instance);$/;"	f
instance	bootstrap/cache/compiled.php	/^    public function instance()$/;"	f
instances	bootstrap/cache/compiled.php	/^        $instances = $this->getDependencies($dependencies, $parameters);$/;"	v
instances	bootstrap/cache/compiled.php	/^        $this->instances = [];$/;"	v
instances	bootstrap/cache/compiled.php	/^    protected $instances = [];$/;"	v
intersect	bootstrap/cache/compiled.php	/^    public function intersect($items)$/;"	f
intersect	bootstrap/cache/compiled.php	/^    public function intersect($keys)$/;"	f
invalidPayload	bootstrap/cache/compiled.php	/^    protected function invalidPayload($data)$/;"	f
invalidate	bootstrap/cache/compiled.php	/^    public function invalidate($lifetime = null)$/;"	f
invalidate	bootstrap/cache/compiled.php	/^    public function invalidate($lifetime = null);$/;"	f
ip	bootstrap/cache/compiled.php	/^        $ip = $this->server->get('REMOTE_ADDR');$/;"	v
ip	bootstrap/cache/compiled.php	/^    public function ip()$/;"	f
ipAddresses	bootstrap/cache/compiled.php	/^        $ipAddresses = $this->getClientIps();$/;"	v
ips	bootstrap/cache/compiled.php	/^    public function ips()$/;"	f
is	bootstrap/cache/compiled.php	/^    public function is()$/;"	f
is	bootstrap/cache/compiled.php	/^    public static function is($pattern, $value)$/;"	f
isAccepted	bootstrap/cache/compiled.php	/^    protected function isAccepted($string)$/;"	f
isAdmin	app/User.php	/^    public function isAdmin()$/;"	f
isAlias	bootstrap/cache/compiled.php	/^    public function isAlias($name)$/;"	f
isAssoc	bootstrap/cache/compiled.php	/^    public static function isAssoc(array $array)$/;"	f
isBooted	bootstrap/cache/compiled.php	/^    public function isBooted()$/;"	f
isBuildable	bootstrap/cache/compiled.php	/^    protected function isBuildable($concrete, $abstract)$/;"	f
isCacheable	bootstrap/cache/compiled.php	/^    public function isCacheable()$/;"	f
isCallableWithAtSign	bootstrap/cache/compiled.php	/^    protected function isCallableWithAtSign($callback)$/;"	f
isCleared	bootstrap/cache/compiled.php	/^    public function isCleared()$/;"	f
isClientError	bootstrap/cache/compiled.php	/^    public function isClientError()$/;"	f
isCurrentlyAcceptingProposals	app/models/Conference.php	/^    public function isCurrentlyAcceptingProposals()$/;"	f
isDateCastable	bootstrap/cache/compiled.php	/^    protected function isDateCastable($key)$/;"	f
isDeferred	bootstrap/cache/compiled.php	/^    public function isDeferred()$/;"	f
isDeferredService	bootstrap/cache/compiled.php	/^    public function isDeferredService($service)$/;"	f
isDirectory	bootstrap/cache/compiled.php	/^    public function isDirectory($directory)$/;"	f
isDirty	bootstrap/cache/compiled.php	/^    public function isDirty($attributes = null)$/;"	f
isDisabled	bootstrap/cache/compiled.php	/^    public function isDisabled($name)$/;"	f
isDownForMaintenance	bootstrap/cache/compiled.php	/^    public function isDownForMaintenance()$/;"	f
isDownForMaintenance	bootstrap/cache/compiled.php	/^    public function isDownForMaintenance();$/;"	f
isEmpty	bootstrap/cache/compiled.php	/^    public function isEmpty()$/;"	f
isEmpty	bootstrap/cache/compiled.php	/^    public function isEmpty();$/;"	f
isEmptyString	bootstrap/cache/compiled.php	/^    protected function isEmptyString($key)$/;"	f
isExpired	bootstrap/cache/compiled.php	/^    public function isExpired($path)$/;"	f
isExpired	bootstrap/cache/compiled.php	/^    public function isExpired($path);$/;"	f
isFatal	bootstrap/cache/compiled.php	/^    protected function isFatal($type)$/;"	f
isFavorited	app/models/Conference.php	/^    public function isFavorited()$/;"	f
isFile	bootstrap/cache/compiled.php	/^    public function isFile($file)$/;"	f
isFillable	bootstrap/cache/compiled.php	/^    public function isFillable($key)$/;"	f
isForbidden	bootstrap/cache/compiled.php	/^    public function isForbidden()$/;"	f
isFresh	bootstrap/cache/compiled.php	/^    public function isFresh()$/;"	f
isFromTrustedProxy	bootstrap/cache/compiled.php	/^    private function isFromTrustedProxy()$/;"	f
isGuarded	bootstrap/cache/compiled.php	/^    public function isGuarded($key)$/;"	f
isHandling	bootstrap/cache/compiled.php	/^    public function isHandling($level)$/;"	f
isHandling	bootstrap/cache/compiled.php	/^    public function isHandling(array $record)$/;"	f
isHandling	bootstrap/cache/compiled.php	/^    public function isHandling(array $record);$/;"	f
isHttpOnly	bootstrap/cache/compiled.php	/^    public function isHttpOnly()$/;"	f
isInformational	bootstrap/cache/compiled.php	/^    public function isInformational()$/;"	f
isInvalid	bootstrap/cache/compiled.php	/^    public function isInvalid()$/;"	f
isJson	bootstrap/cache/compiled.php	/^    public function isJson()$/;"	f
isJsonCastable	bootstrap/cache/compiled.php	/^    protected function isJsonCastable($key)$/;"	f
isLocal	bootstrap/cache/compiled.php	/^    public function isLocal()$/;"	f
isLocale	bootstrap/cache/compiled.php	/^    public function isLocale($locale)$/;"	f
isMethod	bootstrap/cache/compiled.php	/^    public function isMethod($method)$/;"	f
isMethodSafe	bootstrap/cache/compiled.php	/^    public function isMethodSafe()$/;"	f
isMock	bootstrap/cache/compiled.php	/^    protected static function isMock()$/;"	f
isNoCache	bootstrap/cache/compiled.php	/^    public function isNoCache()$/;"	f
isNotFound	bootstrap/cache/compiled.php	/^    public function isNotFound()$/;"	f
isNotModified	bootstrap/cache/compiled.php	/^    public function isNotModified(Request $request)$/;"	f
isOk	bootstrap/cache/compiled.php	/^    public function isOk()$/;"	f
isReading	bootstrap/cache/compiled.php	/^    protected function isReading($request)$/;"	f
isRecursive	bootstrap/cache/compiled.php	/^                $this->isRecursive = false;$/;"	v
isRecursive	bootstrap/cache/compiled.php	/^                $this->isRecursive = true;$/;"	v
isRecursive	bootstrap/cache/compiled.php	/^        $this->isRecursive = $iterator instanceof \\RecursiveIterator;$/;"	v
isRecursive	bootstrap/cache/compiled.php	/^    private $isRecursive = 0;$/;"	v
isRecursive	bootstrap/cache/compiled.php	/^    private $isRecursive;$/;"	v
isRedirect	bootstrap/cache/compiled.php	/^    public function isRedirect($location = null)$/;"	f
isRedirection	bootstrap/cache/compiled.php	/^    public function isRedirection()$/;"	f
isRegex	bootstrap/cache/compiled.php	/^    protected function isRegex($str)$/;"	f
isRegistered	bootstrap/cache/compiled.php	/^    public function isRegistered()$/;"	f
isRewindable	bootstrap/cache/compiled.php	/^    public function isRewindable()$/;"	f
isRoot	bootstrap/cache/compiled.php	/^    private $isRoot = false;$/;"	v
isRoutable	bootstrap/cache/compiled.php	/^    public function isRoutable(ReflectionMethod $method)$/;"	f
isSecure	bootstrap/cache/compiled.php	/^    public function isSecure()$/;"	f
isSeparator	bootstrap/cache/compiled.php	/^            $isSeparator = '' !== $precedingChar && false !== strpos(static::SEPARATORS, $precedingChar);$/;"	v
isServerError	bootstrap/cache/compiled.php	/^    public function isServerError()$/;"	f
isShared	bootstrap/cache/compiled.php	/^    public function isShared($abstract)$/;"	f
isStarted	bootstrap/cache/compiled.php	/^    public function isStarted()$/;"	f
isStarted	bootstrap/cache/compiled.php	/^    public function isStarted();$/;"	f
isSuccessful	bootstrap/cache/compiled.php	/^    public function isSuccessful()$/;"	f
isUnguarded	bootstrap/cache/compiled.php	/^    public static function isUnguarded()$/;"	f
isUnique	bootstrap/cache/compiled.php	/^    protected function isUnique($key, $message)$/;"	f
isUsingThrottlesLoginsTrait	bootstrap/cache/compiled.php	/^    protected function isUsingThrottlesLoginsTrait()$/;"	f
isValidFile	bootstrap/cache/compiled.php	/^    protected function isValidFile($file)$/;"	f
isValidId	bootstrap/cache/compiled.php	/^    public function isValidId($id)$/;"	f
isValidPageNumber	bootstrap/cache/compiled.php	/^    protected function isValidPageNumber($page)$/;"	f
isValidUrl	bootstrap/cache/compiled.php	/^    public function isValidUrl($path)$/;"	f
isValidateable	bootstrap/cache/compiled.php	/^    public function isValidateable()$/;"	f
isWritable	bootstrap/cache/compiled.php	/^    public function isWritable($path)$/;"	f
isXmlHttpRequest	bootstrap/cache/compiled.php	/^    public function isXmlHttpRequest()$/;"	f
it	bootstrap/cache/compiled.php	/^            $it = new \\ArrayIterator();$/;"	v
it_creates_a_conference_with_the_minimum_required_input	tests/CreateConferenceFormTest.php	/^    public function it_creates_a_conference_with_the_minimum_required_input()$/;"	f
it_shows_the_talk_title_on_its_page	tests/TalkTest.php	/^    public function it_shows_the_talk_title_on_its_page()$/;"	f
item	bootstrap/cache/compiled.php	/^            $item = $item instanceof Collection ? $item->all() : $item;$/;"	v
item	bootstrap/cache/compiled.php	/^            $item = AcceptHeaderItem::fromString($itemValue);$/;"	v
item	bootstrap/cache/compiled.php	/^            $item = implode('.', array_slice($segments, 1));$/;"	v
itemKey	bootstrap/cache/compiled.php	/^                $itemKey = data_get($item, $key);$/;"	v
itemSegments	bootstrap/cache/compiled.php	/^        $itemSegments = explode('.', $item);$/;"	v
itemValue	bootstrap/cache/compiled.php	/^            $itemValue = data_get($item, $value);$/;"	v
items	bootstrap/cache/compiled.php	/^            $items = (require $cached);$/;"	v
items	bootstrap/cache/compiled.php	/^        $items = $instance->getConnection()->select($query, $bindings);$/;"	v
items	bootstrap/cache/compiled.php	/^        $items = $this->items;$/;"	v
items	bootstrap/cache/compiled.php	/^        $items = [];$/;"	v
items	bootstrap/cache/compiled.php	/^        $items = array_map($callback, $this->items, $keys);$/;"	v
items	bootstrap/cache/compiled.php	/^        $items = array_map(function ($item) use($instance) {$/;"	v
items	bootstrap/cache/compiled.php	/^        $items = new FilesystemIterator($directory);$/;"	v
items	bootstrap/cache/compiled.php	/^        $items = new FilesystemIterator($directory, $options);$/;"	v
items	bootstrap/cache/compiled.php	/^        $this->items = $collection;$/;"	v
items	bootstrap/cache/compiled.php	/^        $this->items = $items instanceof Collection ? $items : Collection::make($items);$/;"	v
items	bootstrap/cache/compiled.php	/^        $this->items = $items;$/;"	v
items	bootstrap/cache/compiled.php	/^        $this->items = $this->getArrayableItems($items);$/;"	v
items	bootstrap/cache/compiled.php	/^        $this->items = $this->items->slice(0, $this->perPage);$/;"	v
items	bootstrap/cache/compiled.php	/^        $this->items = $this->map($callback)->all();$/;"	v
items	bootstrap/cache/compiled.php	/^        $this->items = Arr::prepend($this->items, $value, $key);$/;"	v
items	bootstrap/cache/compiled.php	/^    private $items = array();$/;"	v
items	bootstrap/cache/compiled.php	/^    protected $items = [];$/;"	v
items	bootstrap/cache/compiled.php	/^    protected $items;$/;"	v
items	bootstrap/cache/compiled.php	/^    public function __construct(array $items = [])$/;"	v
items	bootstrap/cache/compiled.php	/^    public function items()$/;"	f
items	bootstrap/cache/compiled.php	/^    public function items();$/;"	f
iterator	bootstrap/cache/compiled.php	/^            $iterator = $innerIterator;$/;"	v
iterator	bootstrap/cache/compiled.php	/^            $iterator = $iteratorAggregate->getIterator();$/;"	v
iterator	bootstrap/cache/compiled.php	/^            $iterator = new Iterator\\CustomFilterIterator($iterator, $this->filters);$/;"	v
iterator	bootstrap/cache/compiled.php	/^            $iterator = new Iterator\\DateRangeFilterIterator($iterator, $this->dates);$/;"	v
iterator	bootstrap/cache/compiled.php	/^            $iterator = new Iterator\\DepthRangeFilterIterator($iterator, $minDepth, $maxDepth);$/;"	v
iterator	bootstrap/cache/compiled.php	/^            $iterator = new Iterator\\ExcludeDirectoryFilterIterator($iterator, $this->exclude);$/;"	v
iterator	bootstrap/cache/compiled.php	/^            $iterator = new Iterator\\FileTypeFilterIterator($iterator, $this->mode);$/;"	v
iterator	bootstrap/cache/compiled.php	/^            $iterator = new Iterator\\FilecontentFilterIterator($iterator, $this->contains, $this->notContains);$/;"	v
iterator	bootstrap/cache/compiled.php	/^            $iterator = new Iterator\\FilenameFilterIterator($iterator, $this->names, $this->notNames);$/;"	v
iterator	bootstrap/cache/compiled.php	/^            $iterator = new Iterator\\PathFilterIterator($iterator, $this->paths, $this->notPaths);$/;"	v
iterator	bootstrap/cache/compiled.php	/^            $iterator = new Iterator\\SizeRangeFilterIterator($iterator, $this->sizes);$/;"	v
iterator	bootstrap/cache/compiled.php	/^        $iterator = $this;$/;"	v
iterator	bootstrap/cache/compiled.php	/^        $iterator = new Iterator\\RecursiveDirectoryIterator($dir, $flags, $this->ignoreUnreadableDirs);$/;"	v
iterator	bootstrap/cache/compiled.php	/^        $iterator = new \\AppendIterator();$/;"	v
iterator	bootstrap/cache/compiled.php	/^        $iterator = new \\RecursiveIteratorIterator($iterator, \\RecursiveIteratorIterator::SELF_FIRST);$/;"	v
iterator	bootstrap/cache/compiled.php	/^        $this->iterator = $iterator;$/;"	v
iterator	bootstrap/cache/compiled.php	/^    private $iterator;$/;"	v
iteratorAggregate	bootstrap/cache/compiled.php	/^            $iteratorAggregate = new Iterator\\SortableIterator($iterator, $this->sort);$/;"	v
iterators	bootstrap/cache/compiled.php	/^    private $iterators = array();$/;"	v
iv	bootstrap/cache/compiled.php	/^        $iv = base64_decode($payload['iv']);$/;"	v
iv	bootstrap/cache/compiled.php	/^        $iv = random_bytes($this->getIvSize());$/;"	v
joiningTable	bootstrap/cache/compiled.php	/^    public function joiningTable($related)$/;"	f
json	bootstrap/cache/compiled.php	/^            $json = $this->handleJsonError(json_last_error(), $data);$/;"	v
json	bootstrap/cache/compiled.php	/^            $this->json = new ParameterBag((array) json_decode($this->getContent(), true));$/;"	v
json	bootstrap/cache/compiled.php	/^        $json = $this->jsonEncode($data);$/;"	v
json	bootstrap/cache/compiled.php	/^        $json = json_encode(compact('iv', 'value', 'mac'));$/;"	v
json	bootstrap/cache/compiled.php	/^    protected $json;$/;"	v
json	bootstrap/cache/compiled.php	/^    public function json($data = [], $status = 200, array $headers = [], $options = 0);$/;"	f
json	bootstrap/cache/compiled.php	/^    public function json($key = null, $default = null)$/;"	f
jsonEncode	bootstrap/cache/compiled.php	/^    private function jsonEncode($data)$/;"	f
jsonSerialize	bootstrap/cache/compiled.php	/^    public function jsonSerialize()$/;"	f
jsonp	bootstrap/cache/compiled.php	/^    public function jsonp($callback, $data = [], $status = 200, array $headers = [], $options = 0);$/;"	f
keep	bootstrap/cache/compiled.php	/^    public function keep($keys = null)$/;"	f
kernel	public/index.php	/^$kernel = $app->make('Illuminate\\Contracts\\Http\\Kernel');$/;"	v
key	app/macros.php	/^    $key = key($parameters);$/;"	v
key	app/macros.php	/^    foreach ($keysWithDefaults as $key => $default) {$/;"	v
key	bootstrap/cache/compiled.php	/^                $key = Str::snake($key);$/;"	v
key	bootstrap/cache/compiled.php	/^                $key = base64_decode(substr($key, 7));$/;"	v
key	bootstrap/cache/compiled.php	/^            $key = $bag->getStorageKey();$/;"	v
key	bootstrap/cache/compiled.php	/^            $key = $this->removeTableFromKey($key);$/;"	v
key	bootstrap/cache/compiled.php	/^            $key = [$key => $value];$/;"	v
key	bootstrap/cache/compiled.php	/^            $key = array_shift($keys);$/;"	v
key	bootstrap/cache/compiled.php	/^            $key = strtoupper(str_replace('-', '_', $key));$/;"	v
key	bootstrap/cache/compiled.php	/^            $this->key = $key;$/;"	v
key	bootstrap/cache/compiled.php	/^            foreach ($data as $key => $value) {$/;"	v
key	bootstrap/cache/compiled.php	/^            foreach ($this->items as $key => $value) {$/;"	v
key	bootstrap/cache/compiled.php	/^        $key = $instance->getKeyName();$/;"	v
key	bootstrap/cache/compiled.php	/^        $key = $this->getKeyName();$/;"	v
key	bootstrap/cache/compiled.php	/^        $key = $this->normalize($key);$/;"	v
key	bootstrap/cache/compiled.php	/^        $key = $this->valueRetriever($key);$/;"	v
key	bootstrap/cache/compiled.php	/^        $key = $value . $delimiter;$/;"	v
key	bootstrap/cache/compiled.php	/^        $key = $value;$/;"	v
key	bootstrap/cache/compiled.php	/^        $key = (string) $key;$/;"	v
key	bootstrap/cache/compiled.php	/^        $key = is_null($key) || is_array($key) ? $key : explode('.', $key);$/;"	v
key	bootstrap/cache/compiled.php	/^        $key = str_replace('_', '-', strtolower($key));$/;"	v
key	bootstrap/cache/compiled.php	/^        foreach ($aliases as $key => $aliases) {$/;"	v
key	bootstrap/cache/compiled.php	/^        foreach ($args as $key => $item) {$/;"	v
key	bootstrap/cache/compiled.php	/^        foreach ($array as $key => $value) {$/;"	v
key	bootstrap/cache/compiled.php	/^        foreach ($attributes as $key => $value) {$/;"	v
key	bootstrap/cache/compiled.php	/^        foreach ($clientIps as $key => $clientIp) {$/;"	v
key	bootstrap/cache/compiled.php	/^        foreach ($cookie as $key => $value) {$/;"	v
key	bootstrap/cache/compiled.php	/^        foreach ($credentials as $key => $value) {$/;"	v
key	bootstrap/cache/compiled.php	/^        foreach ($data as $key => $value) {$/;"	v
key	bootstrap/cache/compiled.php	/^        foreach ($data['name'] as $key => $name) {$/;"	v
key	bootstrap/cache/compiled.php	/^        foreach ($files as $key => $file) {$/;"	v
key	bootstrap/cache/compiled.php	/^        foreach ($headers as $key => $value) {$/;"	v
key	bootstrap/cache/compiled.php	/^        foreach ($headers as $key => $values) {$/;"	v
key	bootstrap/cache/compiled.php	/^        foreach ($keys as $key => $value) {$/;"	v
key	bootstrap/cache/compiled.php	/^        foreach ($messages as $key => $value) {$/;"	v
key	bootstrap/cache/compiled.php	/^        foreach ($options as $key => $value) {$/;"	v
key	bootstrap/cache/compiled.php	/^        foreach ($parameters as $key => $parameter) {$/;"	v
key	bootstrap/cache/compiled.php	/^        foreach ($parameters as $key => $value) {$/;"	v
key	bootstrap/cache/compiled.php	/^        foreach ($patterns as $key => $pattern) {$/;"	v
key	bootstrap/cache/compiled.php	/^        foreach ($records as $key => $record) {$/;"	v
key	bootstrap/cache/compiled.php	/^        foreach ($reflector->getParameters() as $key => $parameter) {$/;"	v
key	bootstrap/cache/compiled.php	/^        foreach ($request->cookies as $key => $c) {$/;"	v
key	bootstrap/cache/compiled.php	/^        foreach ($requirements as $key => $regex) {$/;"	v
key	bootstrap/cache/compiled.php	/^        foreach ($route->parameters() as $key => $value) {$/;"	v
key	bootstrap/cache/compiled.php	/^        foreach ($this->attributes as $key => $value) {$/;"	v
key	bootstrap/cache/compiled.php	/^        foreach ($this->cacheControl as $key => $value) {$/;"	v
key	bootstrap/cache/compiled.php	/^        foreach ($this->defaults as $key => $value) {$/;"	v
key	bootstrap/cache/compiled.php	/^        foreach ($this->fillableFromArray($attributes) as $key => $value) {$/;"	v
key	bootstrap/cache/compiled.php	/^        foreach ($this->getArrayableRelations() as $key => $value) {$/;"	v
key	bootstrap/cache/compiled.php	/^        foreach ($this->getCasts() as $key => $value) {$/;"	v
key	bootstrap/cache/compiled.php	/^        foreach ($this->getConfigurationFiles($app) as $key => $path) {$/;"	v
key	bootstrap/cache/compiled.php	/^        foreach ($this->headers->all() as $key => $value) {$/;"	v
key	bootstrap/cache/compiled.php	/^        foreach ($this->items as $key => $item) {$/;"	v
key	bootstrap/cache/compiled.php	/^        foreach ($this->items as $key => $value) {$/;"	v
key	bootstrap/cache/compiled.php	/^        foreach ($this->listeners as $key => $value) {$/;"	v
key	bootstrap/cache/compiled.php	/^        foreach ($this->messages as $key => $messages) {$/;"	v
key	bootstrap/cache/compiled.php	/^        foreach ($this->middlewareGroups as $key => $middleware) {$/;"	v
key	bootstrap/cache/compiled.php	/^        foreach ($this->parameters as $key => $value) {$/;"	v
key	bootstrap/cache/compiled.php	/^        foreach ($this->policies as $key => $value) {$/;"	v
key	bootstrap/cache/compiled.php	/^        foreach ($this->routeMiddleware as $key => $middleware) {$/;"	v
key	bootstrap/cache/compiled.php	/^        foreach ($this->wildcards as $key => $listeners) {$/;"	v
key	bootstrap/cache/compiled.php	/^        foreach (static::charsArray() as $key => $val) {$/;"	v
key	bootstrap/cache/compiled.php	/^    protected $key;$/;"	v
key	bootstrap/cache/compiled.php	/^    public function lists($value, $key = null)$/;"	v
key	bootstrap/cache/compiled.php	/^    public function pluck($value, $key = null)$/;"	v
key	bootstrap/cache/compiled.php	/^    public function prepend($value, $key = null)$/;"	v
key	bootstrap/cache/compiled.php	/^    public static function pluck($array, $value, $key = null)$/;"	v
key	bootstrap/cache/compiled.php	/^    public static function prepend($array, $value, $key = null)$/;"	v
keyBy	bootstrap/cache/compiled.php	/^        $keyBy = $this->valueRetriever($keyBy);$/;"	v
keyBy	bootstrap/cache/compiled.php	/^    public function keyBy($keyBy)$/;"	f
keyParametersByArgument	bootstrap/cache/compiled.php	/^    protected function keyParametersByArgument(array $dependencies, array $parameters)$/;"	f
keyValuePair	bootstrap/cache/compiled.php	/^            $keyValuePair = explode('=', $param, 2);$/;"	v
keys	bootstrap/cache/compiled.php	/^            $keys = array_keys($file);$/;"	v
keys	bootstrap/cache/compiled.php	/^        $keys = (array) $keys;$/;"	v
keys	bootstrap/cache/compiled.php	/^        $keys = array_keys($array);$/;"	v
keys	bootstrap/cache/compiled.php	/^        $keys = array_keys($data);$/;"	v
keys	bootstrap/cache/compiled.php	/^        $keys = array_keys($this->items);$/;"	v
keys	bootstrap/cache/compiled.php	/^        $keys = array_rand($this->items, $amount);$/;"	v
keys	bootstrap/cache/compiled.php	/^        $keys = explode('.', $key);$/;"	v
keys	bootstrap/cache/compiled.php	/^        $keys = is_array($key) ? $key : func_get_args();$/;"	v
keys	bootstrap/cache/compiled.php	/^        $keys = is_array($keys) ? $keys : func_get_args();$/;"	v
keys	bootstrap/cache/compiled.php	/^        $keys = is_array($name) ? $name : func_get_args();$/;"	v
keys	bootstrap/cache/compiled.php	/^    public function flash($filter = null, $keys = [])$/;"	v
keys	bootstrap/cache/compiled.php	/^    public function keys()$/;"	f
keys	bootstrap/cache/compiled.php	/^    public function keys();$/;"	f
keywords	composer.json	/^    "keywords": [$/;"	f
lang	bootstrap/cache/compiled.php	/^                            $lang = strtolower($codes[0]);$/;"	v
lang	bootstrap/cache/compiled.php	/^                        $lang = $codes[1];$/;"	v
lang	bootstrap/cache/compiled.php	/^        foreach ($languages as $lang => $acceptHeaderItem) {$/;"	v
langPath	bootstrap/cache/compiled.php	/^    public function langPath()$/;"	f
languages	bootstrap/cache/compiled.php	/^        $languages = AcceptHeader::fromString($this->headers->get('Accept-Language'))->all();$/;"	v
languages	bootstrap/cache/compiled.php	/^        $this->languages = array();$/;"	v
languages	bootstrap/cache/compiled.php	/^        $this->languages = null;$/;"	v
languages	bootstrap/cache/compiled.php	/^    protected $languages;$/;"	v
laracasts/testdummy	composer.json	/^        "laracasts\/testdummy": "~2.3",$/;"	f
laravel-elixir	package.json	/^    "laravel-elixir": "3.3.3",$/;"	f
laravel-elixir-vueify	package.json	/^    "laravel-elixir-vueify": "^1.0.0"$/;"	f
laravel/framework	composer.json	/^        "laravel\/framework": "5.2.*",$/;"	f
laravelcollective/html	composer.json	/^        "laravelcollective\/html": "5.2.4",$/;"	f
last	bootstrap/cache/compiled.php	/^            $last = count($segs);$/;"	v
last	bootstrap/cache/compiled.php	/^            $last = end($this->groupStack);$/;"	v
last	bootstrap/cache/compiled.php	/^        $last = array_pop($this->pushStack);$/;"	v
last	bootstrap/cache/compiled.php	/^        $last = array_pop($this->sectionStack);$/;"	v
last	bootstrap/cache/compiled.php	/^    public function last(callable $callback = null, $default = null)$/;"	f
last	bootstrap/cache/compiled.php	/^    public static function last($array, callable $callback = null, $default = null)$/;"	f
lastAttempted	bootstrap/cache/compiled.php	/^        $this->lastAttempted = $user = $this->provider->retrieveByCredentials($credentials);$/;"	v
lastAttempted	bootstrap/cache/compiled.php	/^    protected $lastAttempted;$/;"	v
lastCompiled	bootstrap/cache/compiled.php	/^    protected $lastCompiled = [];$/;"	v
lastItem	bootstrap/cache/compiled.php	/^    public function lastItem()$/;"	f
lastItem	bootstrap/cache/compiled.php	/^    public function lastItem();$/;"	f
lastModified	bootstrap/cache/compiled.php	/^        $lastModified = $this->files->lastModified($path);$/;"	v
lastModified	bootstrap/cache/compiled.php	/^        $lastModified = $this->headers->get('Last-Modified');$/;"	v
lastModified	bootstrap/cache/compiled.php	/^    public function lastModified($path)$/;"	f
lastNullAttribute	bootstrap/cache/compiled.php	/^                $lastNullAttribute = $bit = substr($bit, 0, -1);$/;"	v
lastNullAttribute	bootstrap/cache/compiled.php	/^        $lastNullAttribute = null;$/;"	v
lastUsed	bootstrap/cache/compiled.php	/^            $this->lastUsed = $this->meta[self::UPDATED];$/;"	v
lastUsed	bootstrap/cache/compiled.php	/^        $this->meta[self::CREATED] = $this->meta[self::UPDATED] = $this->lastUsed = $timeStamp;$/;"	v
lastUsed	bootstrap/cache/compiled.php	/^    private $lastUsed;$/;"	v
layout	app/Http/Controllers/BaseController.php	/^            $this->layout = View::make($this->layout);$/;"	v
len	bootstrap/cache/compiled.php	/^        $len = strlen($prefix);$/;"	v
length	app/models/TalkRevision.php	/^    protected $length;$/;"	v
length	bootstrap/cache/compiled.php	/^                $length = $headers->get('Content-Length');$/;"	v
length	bootstrap/cache/compiled.php	/^        $length = mb_strlen($key, '8bit');$/;"	v
length	bootstrap/cache/compiled.php	/^    public function slice($offset, $length = null)$/;"	v
length	bootstrap/cache/compiled.php	/^    public function splice($offset, $length = null, $replacement = [])$/;"	v
length	bootstrap/cache/compiled.php	/^    public static function length($value)$/;"	f
length	bootstrap/cache/compiled.php	/^    public static function substr($string, $start, $length = null)$/;"	v
level	app/models/TalkRevision.php	/^    protected $level;$/;"	v
level	bootstrap/cache/compiled.php	/^        $level = array_pop(self::$stackedErrorLevels);$/;"	v
level	bootstrap/cache/compiled.php	/^        $level = count($status);$/;"	v
level	bootstrap/cache/compiled.php	/^        $level = error_reporting() | E_RECOVERABLE_ERROR | E_USER_ERROR | E_DEPRECATED | E_USER_DEPRECATED;$/;"	v
level	bootstrap/cache/compiled.php	/^        $level = error_reporting(0);$/;"	v
level	bootstrap/cache/compiled.php	/^        $level = static::toMonologLevel($level);$/;"	v
level	bootstrap/cache/compiled.php	/^        $this->level = Logger::toMonologLevel($level);$/;"	v
level	bootstrap/cache/compiled.php	/^    protected $level = Logger::DEBUG;$/;"	v
level	bootstrap/cache/compiled.php	/^    public function __construct($stream, $level = Logger::DEBUG, $bubble = true, $filePermission = null, $useLocking = false)$/;"	v
level	bootstrap/cache/compiled.php	/^    public function useFiles($path, $level = 'debug')$/;"	v
level	bootstrap/cache/compiled.php	/^    public function useFiles($path, $level = 'debug');$/;"	v
level	bootstrap/cache/compiled.php	/^    public function useSyslog($name = 'laravel', $level = 'debug')$/;"	v
levelName	bootstrap/cache/compiled.php	/^        $levelName = static::getLevelName($level);$/;"	v
levels	bootstrap/cache/compiled.php	/^                $levels = E_ALL;$/;"	v
levels	bootstrap/cache/compiled.php	/^    private $levels = array(E_DEPRECATED => 'Deprecated', E_USER_DEPRECATED => 'User Deprecated', E_NOTICE => 'Notice', E_USER_NOTICE => 'User Notice', E_STRICT => 'Runtime Notice', E_WARNING => 'Warning', E_USER_WARNING => 'User Warning', E_COMPILE_WARNING => 'Compile Warning', E_CORE_WARNING => 'Core Warning', E_USER_ERROR => 'User Error', E_RECOVERABLE_ERROR => 'Catchable Fatal Error', E_COMPILE_ERROR => 'Compile Error', E_PARSE => 'Parse Error', E_ERROR => 'Error', E_CORE_ERROR => 'Core Error');$/;"	v
levels	bootstrap/cache/compiled.php	/^    protected $levels = ['debug' => MonologLogger::DEBUG, 'info' => MonologLogger::INFO, 'notice' => MonologLogger::NOTICE, 'warning' => MonologLogger::WARNING, 'error' => MonologLogger::ERROR, 'critical' => MonologLogger::CRITICAL, 'alert' => MonologLogger::ALERT, 'emergency' => MonologLogger::EMERGENCY];$/;"	v
levels	bootstrap/cache/compiled.php	/^    protected static $levels = array(self::DEBUG => 'DEBUG', self::INFO => 'INFO', self::NOTICE => 'NOTICE', self::WARNING => 'WARNING', self::ERROR => 'ERROR', self::CRITICAL => 'CRITICAL', self::ALERT => 'ALERT', self::EMERGENCY => 'EMERGENCY');$/;"	v
levels	bootstrap/cache/compiled.php	/^    public function setDefaultLogger(LoggerInterface $logger, $levels = E_ALL, $replace = false)$/;"	v
license	composer.json	/^    "license": "MIT",$/;"	f
lifetime	bootstrap/cache/compiled.php	/^        $lifetime = $this->app['config']['session.lifetime'];$/;"	v
lifetime	bootstrap/cache/compiled.php	/^    public function migrate($destroy = false, $lifetime = null)$/;"	v
lifetime	bootstrap/cache/compiled.php	/^    public function migrate($destroy = false, $lifetime = null);$/;"	v
limit	bootstrap/cache/compiled.php	/^    public static function limit($value, $limit = 100, $end = '...')$/;"	f
limit	bootstrap/cache/compiled.php	/^    public static function limit($value, $limit = 100, $end = '...')$/;"	v
link	bootstrap/cache/compiled.php	/^            $link = strtr($this->escapeHtml($linkFormat), array('%f' => $path, '%l' => (int) $line));$/;"	v
linkRouteKeysWithDefaults	resources/views/conferences/index.blade.php	/^                <?php $linkRouteKeysWithDefaults = ['filter' => 'future', 'sort' => 'alpha']; ?>$/;"	v
linkRouteKeysWithDefaults	storage/framework/views/f93059fe7c16666114a32d01055bcaac0baf183f.php	/^                <?php $linkRouteKeysWithDefaults = ['filter' => 'future', 'sort' => 'alpha']; ?>$/;"	v
links	bootstrap/cache/compiled.php	/^    public function links(Presenter $presenter = null)$/;"	f
listen	app/Providers/EventServiceProvider.php	/^    protected $listen = [$/;"	v
listen	bootstrap/cache/compiled.php	/^    protected $listen = [];$/;"	v
listen	bootstrap/cache/compiled.php	/^    public function listen($events, $listener, $priority = 0)$/;"	f
listen	bootstrap/cache/compiled.php	/^    public function listen($events, $listener, $priority = 0);$/;"	f
listen	bootstrap/cache/compiled.php	/^    public function listen(Closure $callback)$/;"	f
listeners	bootstrap/cache/compiled.php	/^    protected $listeners = [];$/;"	v
listens	bootstrap/cache/compiled.php	/^    public function listens()$/;"	f
lists	bootstrap/cache/compiled.php	/^    public function lists($value, $key = null)$/;"	f
load	bootstrap/cache/compiled.php	/^    public function load($alias)$/;"	f
load	bootstrap/cache/compiled.php	/^    public function load($relations)$/;"	f
load	bootstrap/cache/compiled.php	/^    public function load()$/;"	f
load	bootstrap/cache/compiled.php	/^    public function load(array $providers)$/;"	f
loadCachedRoutes	bootstrap/cache/compiled.php	/^    protected function loadCachedRoutes()$/;"	f
loadConfigurationFiles	bootstrap/cache/compiled.php	/^    protected function loadConfigurationFiles(Application $app, RepositoryContract $repository)$/;"	f
loadDeferredProvider	bootstrap/cache/compiled.php	/^    public function loadDeferredProvider($service)$/;"	f
loadDeferredProviders	bootstrap/cache/compiled.php	/^    public function loadDeferredProviders()$/;"	f
loadEnvironmentFrom	bootstrap/cache/compiled.php	/^    public function loadEnvironmentFrom($file)$/;"	f
loadManifest	bootstrap/cache/compiled.php	/^    public function loadManifest()$/;"	f
loadRoutes	bootstrap/cache/compiled.php	/^    protected function loadRoutes()$/;"	f
loadRoutesFrom	bootstrap/cache/compiled.php	/^    protected function loadRoutesFrom($path)$/;"	f
loadSession	bootstrap/cache/compiled.php	/^    protected function loadSession()$/;"	f
loadTranslationsFrom	bootstrap/cache/compiled.php	/^    protected function loadTranslationsFrom($path, $namespace)$/;"	f
loadViewsFrom	bootstrap/cache/compiled.php	/^    protected function loadViewsFrom($path, $namespace)$/;"	f
loadedFromCache	bootstrap/cache/compiled.php	/^            $loadedFromCache = true;$/;"	v
loadedProviders	bootstrap/cache/compiled.php	/^        $this->loadedProviders = [];$/;"	v
loadedProviders	bootstrap/cache/compiled.php	/^    protected $loadedProviders = [];$/;"	v
loader	app/Providers/OAuthGuardServiceProvider.php	/^            $loader = AliasLoader::getInstance();$/;"	v
loader	artisan	/^| Composer provides a convenient, automatically generated class loader$/;"	c
loader	bootstrap/autoload.php	/^| Composer provides a convenient, automatically generated class loader$/;"	c
loader	bootstrap/cache/compiled.php	/^        $this->loader = new Loader($this->filePath, false);$/;"	v
loader	bootstrap/cache/compiled.php	/^        $this->loader = new Loader($this->filePath, true);$/;"	v
loader	bootstrap/cache/compiled.php	/^    protected $loader;$/;"	v
loader	public/index.php	/^| Composer provides a convenient, automatically generated class loader for$/;"	c
localKey	bootstrap/cache/compiled.php	/^        $localKey = $localKey ?: $this->getKeyName();$/;"	v
locale	bootstrap/cache/compiled.php	/^    protected $locale;$/;"	v
locales	bootstrap/cache/compiled.php	/^    public function getPreferredLanguage(array $locales = null)$/;"	v
location	bootstrap/cache/compiled.php	/^        return in_array($this->statusCode, array(201, 301, 302, 303, 307, 308)) && (null === $location ?: $location == $this->headers->get('Location'));$/;"	v
lock	bootstrap/cache/compiled.php	/^    public function get($path, $lock = false)$/;"	v
lock	bootstrap/cache/compiled.php	/^    public function put($path, $contents, $lock = false)$/;"	v
log	bootstrap/cache/compiled.php	/^                $log = array($log);$/;"	v
log	bootstrap/cache/compiled.php	/^            $log = 0;$/;"	v
log	bootstrap/cache/compiled.php	/^        $app->instance('log', $log = new Writer(new Monolog($app->environment()), $app['events']));$/;"	v
log	bootstrap/cache/compiled.php	/^        $log = $this->loggedErrors & $type;$/;"	v
log	bootstrap/cache/compiled.php	/^        $log = $this->registerLogger($app);$/;"	v
log	bootstrap/cache/compiled.php	/^    public function log($level, $message, array $context = [])$/;"	f
log	bootstrap/cache/compiled.php	/^    public function log($level, $message, array $context = []);$/;"	f
log	bootstrap/cache/compiled.php	/^    public function log($level, $message, array $context = array())$/;"	f
log	bootstrap/cache/compiled.php	/^    public function log($level, $message, array $context = array());$/;"	f
logFiles	bootstrap/cache/compiled.php	/^        $logFiles = glob($this->getGlobPattern());$/;"	v
loggedErrors	bootstrap/cache/compiled.php	/^    private $loggedErrors = 0;$/;"	v
loggedOut	bootstrap/cache/compiled.php	/^        $this->loggedOut = false;$/;"	v
loggedOut	bootstrap/cache/compiled.php	/^        $this->loggedOut = true;$/;"	v
loggedOut	bootstrap/cache/compiled.php	/^    protected $loggedOut = false;$/;"	v
loggedTraces	bootstrap/cache/compiled.php	/^    private $loggedTraces = array();$/;"	v
loggers	bootstrap/cache/compiled.php	/^        $loggers = array();$/;"	v
loggers	bootstrap/cache/compiled.php	/^    private $loggers = array(E_DEPRECATED => array(null, LogLevel::INFO), E_USER_DEPRECATED => array(null, LogLevel::INFO), E_NOTICE => array(null, LogLevel::WARNING), E_USER_NOTICE => array(null, LogLevel::WARNING), E_STRICT => array(null, LogLevel::WARNING), E_WARNING => array(null, LogLevel::WARNING), E_USER_WARNING => array(null, LogLevel::WARNING), E_COMPILE_WARNING => array(null, LogLevel::WARNING), E_CORE_WARNING => array(null, LogLevel::WARNING), E_USER_ERROR => array(null, LogLevel::CRITICAL), E_RECOVERABLE_ERROR => array(null, LogLevel::CRITICAL), E_COMPILE_ERROR => array(null, LogLevel::CRITICAL), E_PARSE => array(null, LogLevel::CRITICAL), E_ERROR => array(null, LogLevel::CRITICAL), E_CORE_ERROR => array(null, LogLevel::CRITICAL));$/;"	v
login	bootstrap/cache/compiled.php	/^    public function login(Authenticatable $user, $remember = false);$/;"	f
login	bootstrap/cache/compiled.php	/^    public function login(AuthenticatableContract $user, $remember = false)$/;"	f
login	bootstrap/cache/compiled.php	/^    public function login(Request $request)$/;"	f
loginUsername	bootstrap/cache/compiled.php	/^    public function loginUsername()$/;"	f
loginUsingId	bootstrap/cache/compiled.php	/^    public function loginUsingId($id, $remember = false)$/;"	f
loginUsingId	bootstrap/cache/compiled.php	/^    public function loginUsingId($id, $remember = false);$/;"	f
logout	app/Http/Controllers/AuthController.php	/^    public function logout()$/;"	f
logout	bootstrap/cache/compiled.php	/^    public function logout()$/;"	f
logout	bootstrap/cache/compiled.php	/^    public function logout();$/;"	f
longBio	database/seeds/BiosSeeder.php	/^        $longBio = $author->bios()->create(['nickname' => 'Long Bio', 'body' => 'I am short and I love being short and this is very long.']);$/;"	v
lower	bootstrap/cache/compiled.php	/^    public static function lower($value)$/;"	f
lucadegasperi/oauth2-server-laravel	composer.json	/^        "lucadegasperi\/oauth2-server-laravel": "5.1.4",$/;"	f
mac	bootstrap/cache/compiled.php	/^        $mac = $this->hash($iv = base64_encode($iv), $value);$/;"	v
macro	bootstrap/cache/compiled.php	/^    public static function macro($name, callable $macro)$/;"	f
macros	bootstrap/cache/compiled.php	/^    protected static $macros = [];$/;"	v
make	bootstrap/cache/compiled.php	/^    public function make($abstract, array $parameters = [])$/;"	f
make	bootstrap/cache/compiled.php	/^    public function make($abstract, array $parameters = []);$/;"	f
make	bootstrap/cache/compiled.php	/^    public function make($content = '', $status = 200, array $headers = []);$/;"	f
make	bootstrap/cache/compiled.php	/^    public function make($name, $value, $minutes = 0, $path = null, $domain = null, $secure = false, $httpOnly = true)$/;"	f
make	bootstrap/cache/compiled.php	/^    public function make($name, $value, $minutes = 0, $path = null, $domain = null, $secure = false, $httpOnly = true);$/;"	f
make	bootstrap/cache/compiled.php	/^    public function make($value, array $options = [])$/;"	f
make	bootstrap/cache/compiled.php	/^    public function make($value, array $options = []);$/;"	f
make	bootstrap/cache/compiled.php	/^    public function make($view, $data = [], $mergeData = [])$/;"	f
make	bootstrap/cache/compiled.php	/^    public function make($view, $data = [], $mergeData = []);$/;"	f
make	bootstrap/cache/compiled.php	/^    public function make(array $config, $name = null)$/;"	f
make	bootstrap/cache/compiled.php	/^    public static function make($items = [])$/;"	f
makeConnection	bootstrap/cache/compiled.php	/^    protected function makeConnection($name)$/;"	f
makeController	bootstrap/cache/compiled.php	/^    protected function makeController($controller)$/;"	f
makeDirectory	bootstrap/cache/compiled.php	/^    public function makeDirectory($path, $mode = 0755, $recursive = false, $force = false)$/;"	f
makeDisposition	bootstrap/cache/compiled.php	/^    public function makeDisposition($disposition, $filename, $filenameFallback = '')$/;"	f
makeListener	bootstrap/cache/compiled.php	/^    public function makeListener($listener)$/;"	f
makeVisible	bootstrap/cache/compiled.php	/^    public function makeVisible($attributes)$/;"	f
maknz/slack	composer.json	/^        "maknz\/slack": "~1.5",$/;"	f
manager	bootstrap/cache/compiled.php	/^            $manager = $app['session'];$/;"	v
manager	bootstrap/cache/compiled.php	/^        $this->manager = $manager;$/;"	v
manager	bootstrap/cache/compiled.php	/^    protected $manager;$/;"	v
manifest	bootstrap/cache/compiled.php	/^            $manifest = $this->compileManifest($providers);$/;"	v
manifest	bootstrap/cache/compiled.php	/^            $manifest = $this->files->getRequire($this->manifestPath);$/;"	v
manifest	bootstrap/cache/compiled.php	/^        $manifest = $this->freshManifest($providers);$/;"	v
manifest	bootstrap/cache/compiled.php	/^        $manifest = $this->loadManifest();$/;"	v
manifestPath	bootstrap/cache/compiled.php	/^        $manifestPath = $this->getCachedServicesPath();$/;"	v
manifestPath	bootstrap/cache/compiled.php	/^        $this->manifestPath = $manifestPath;$/;"	v
manifestPath	bootstrap/cache/compiled.php	/^    protected $manifestPath;$/;"	v
manyMethods	bootstrap/cache/compiled.php	/^    public static $manyMethods = ['belongsToMany', 'morphToMany', 'morphedByMany'];$/;"	v
map	app/Providers/RouteServiceProvider.php	/^    public function map(Router $router)$/;"	f
map	bootstrap/cache/compiled.php	/^        $map = $this->middleware;$/;"	v
map	bootstrap/cache/compiled.php	/^    public function map(Router $router)$/;"	f
map	bootstrap/cache/compiled.php	/^    public function map(callable $callback)$/;"	f
mapWebRoutes	app/Providers/RouteServiceProvider.php	/^    protected function mapWebRoutes(Router $router)$/;"	f
mapWebRoutes	bootstrap/cache/compiled.php	/^    protected function mapWebRoutes(Router $router)$/;"	f
markAsRegistered	bootstrap/cache/compiled.php	/^    protected function markAsRegistered($provider)$/;"	f
match	bootstrap/cache/compiled.php	/^                    $match = Str::snake($match);$/;"	v
match	bootstrap/cache/compiled.php	/^    public function match($methods, $uri, $action = null)$/;"	f
match	bootstrap/cache/compiled.php	/^    public function match($methods, $uri, $action);$/;"	f
match	bootstrap/cache/compiled.php	/^    public function match(Request $request)$/;"	f
matchRegexps	bootstrap/cache/compiled.php	/^    protected $matchRegexps = array();$/;"	v
matchToKeys	bootstrap/cache/compiled.php	/^    protected function matchToKeys(array $matches)$/;"	f
matched	bootstrap/cache/compiled.php	/^    public function matched($callback)$/;"	f
matches	bootstrap/cache/compiled.php	/^        $matches = array();$/;"	v
matches	bootstrap/cache/compiled.php	/^    public function matches(Request $request, $includingMethod = true)$/;"	f
matches	bootstrap/cache/compiled.php	/^    public function matches(Route $route, Request $request)$/;"	f
matches	bootstrap/cache/compiled.php	/^    public function matches(Route $route, Request $request);$/;"	f
matchesType	bootstrap/cache/compiled.php	/^    public static function matchesType($actual, $type)$/;"	f
max	bootstrap/cache/compiled.php	/^                    for ($i = 0, $max = count($codes); $i < $max; ++$i) {$/;"	v
max	bootstrap/cache/compiled.php	/^        $max = max(array_map('strlen', array_keys($this->headers))) + 1;$/;"	v
max	bootstrap/cache/compiled.php	/^    public function max($key = null)$/;"	f
maxDepth	bootstrap/cache/compiled.php	/^                    $maxDepth = $comparator->getTarget() - 1;$/;"	v
maxDepth	bootstrap/cache/compiled.php	/^                    $maxDepth = $comparator->getTarget();$/;"	v
maxDepth	bootstrap/cache/compiled.php	/^        $maxDepth = PHP_INT_MAX;$/;"	v
maxFiles	bootstrap/cache/compiled.php	/^        $maxFiles = $config->get('app.log_max_files');$/;"	v
maxFiles	bootstrap/cache/compiled.php	/^        $this->maxFiles = (int) $maxFiles;$/;"	v
maxFiles	bootstrap/cache/compiled.php	/^    protected $maxFiles;$/;"	v
maxFiles	bootstrap/cache/compiled.php	/^    public function __construct($filename, $maxFiles = 0, $level = Logger::DEBUG, $bubble = true, $filePermission = null, $useLocking = false)$/;"	v
me	app/Http/Controllers/Api/MeController.php	/^        $me = new Me(OAuthGuard::user());$/;"	v
merge	bootstrap/cache/compiled.php	/^    public function merge($items)$/;"	f
merge	bootstrap/cache/compiled.php	/^    public function merge($messages)$/;"	f
merge	bootstrap/cache/compiled.php	/^    public function merge($messages);$/;"	f
merge	bootstrap/cache/compiled.php	/^    public function merge(array $input)$/;"	f
mergeConfigFrom	bootstrap/cache/compiled.php	/^    protected function mergeConfigFrom($path, $key)$/;"	f
mergeGroup	bootstrap/cache/compiled.php	/^    public static function mergeGroup($new, $old)$/;"	f
mergeGroupAttributesIntoRoute	bootstrap/cache/compiled.php	/^    protected function mergeGroupAttributesIntoRoute($route)$/;"	f
mergeNewFlashes	bootstrap/cache/compiled.php	/^    protected function mergeNewFlashes(array $keys)$/;"	f
mergeReadWriteConfig	bootstrap/cache/compiled.php	/^    protected function mergeReadWriteConfig(array $config, array $merge)$/;"	f
mergeWithLastGroup	bootstrap/cache/compiled.php	/^    public function mergeWithLastGroup($new)$/;"	f
message	app/Console/Commands/TweetImportantCFPDates.php	/^        $message = 'CFP closes tomorrow for [%s] %s';$/;"	v
message	app/Console/Commands/TweetImportantCFPDates.php	/^        $message = 'CFP opens today for [%s] %s';$/;"	v
message	bootstrap/cache/compiled.php	/^                    $message = 'Fatal ' . $exception->getMessage();$/;"	v
message	bootstrap/cache/compiled.php	/^                    $message = nl2br($this->escapeHtml($e['message']));$/;"	v
message	bootstrap/cache/compiled.php	/^                $message = "Target [{$concrete}] is not instantiable while building [{$previous}].";$/;"	v
message	bootstrap/cache/compiled.php	/^                $message = "Target [{$concrete}] is not instantiable.";$/;"	v
message	bootstrap/cache/compiled.php	/^                $message = 'Uncaught ' . $exception->getMessage();$/;"	v
message	bootstrap/cache/compiled.php	/^                $message = 'Uncaught Exception: ' . $exception->getMessage();$/;"	v
message	bootstrap/cache/compiled.php	/^            $message = str_replace($replace, [$message, $messageKey], $format);$/;"	v
message	bootstrap/cache/compiled.php	/^        $message = "Unresolvable dependency resolving [{$parameter}] in class {$parameter->getDeclaringClass()->getName()}";$/;"	v
message	bootstrap/cache/compiled.php	/^        $message = '';$/;"	v
message	bootstrap/cache/compiled.php	/^        $this->fireLogEvent($level, $message = $this->formatMessage($message), $context);$/;"	v
message	bootstrap/cache/compiled.php	/^    public function abort($code, $message = '', array $headers = [])$/;"	v
messageType	bootstrap/cache/compiled.php	/^    public function useErrorLog($level = 'debug', $messageType = ErrorLogHandler::OPERATING_SYSTEM)$/;"	v
messages	app/Http/Controllers/TalksController.php	/^    protected $messages = [$/;"	v
messages	bootstrap/cache/compiled.php	/^            $messages = $messages->getMessageBag()->getMessages();$/;"	v
messages	bootstrap/cache/compiled.php	/^        $messages = (array) $messages;$/;"	v
messages	bootstrap/cache/compiled.php	/^        $messages = (array) $this->messages;$/;"	v
messages	bootstrap/cache/compiled.php	/^        $messages = is_null($key) ? $this->all($format) : $this->get($key, $format);$/;"	v
messages	bootstrap/cache/compiled.php	/^        $this->messages = array_merge_recursive($this->messages, $messages);$/;"	v
messages	bootstrap/cache/compiled.php	/^    protected $messages = [];$/;"	v
messages	bootstrap/cache/compiled.php	/^    public function __construct(array $messages = [])$/;"	v
messages	bootstrap/cache/compiled.php	/^    public function messages()$/;"	f
messages	bootstrap/cache/compiled.php	/^    public function validate(Request $request, array $rules, array $messages = [], array $customAttributes = [])$/;"	v
messages	bootstrap/cache/compiled.php	/^    public function validateWithBag($errorBag, Request $request, array $rules, array $messages = [], array $customAttributes = [])$/;"	v
meta	bootstrap/cache/compiled.php	/^        $this->meta =& $array;$/;"	v
meta	bootstrap/cache/compiled.php	/^    protected $meta = array(self::CREATED => 0, self::UPDATED => 0, self::LIFETIME => 0);$/;"	v
metaBag	bootstrap/cache/compiled.php	/^        $this->metaBag = new MetadataBag();$/;"	v
metaBag	bootstrap/cache/compiled.php	/^    protected $metaBag;$/;"	v
method	bootstrap/cache/compiled.php	/^                    $this->method = strtoupper($method);$/;"	v
method	bootstrap/cache/compiled.php	/^                    $this->method = strtoupper($this->request->get('_method', $this->query->get('_method', 'POST')));$/;"	v
method	bootstrap/cache/compiled.php	/^                $method = $parameter->isDefaultValueAvailable() ? 'first' : 'firstOrFail';$/;"	v
method	bootstrap/cache/compiled.php	/^            $method = $abstract == $concrete ? 'build' : 'make';$/;"	v
method	bootstrap/cache/compiled.php	/^            $method = 'set' . Str::studly($key) . 'Attribute';$/;"	v
method	bootstrap/cache/compiled.php	/^            $method = count($segments) == 2 ? $segments[1] : 'bind';$/;"	v
method	bootstrap/cache/compiled.php	/^            $this->method = strtoupper($this->server->get('REQUEST_METHOD', 'GET'));$/;"	v
method	bootstrap/cache/compiled.php	/^            if (method_exists($class, $method = 'boot' . class_basename($trait))) {$/;"	v
method	bootstrap/cache/compiled.php	/^            } elseif (method_exists($this, $method = 'compile' . ucfirst($match[1]))) {$/;"	v
method	bootstrap/cache/compiled.php	/^        $method = $halt ? 'until' : 'fire';$/;"	v
method	bootstrap/cache/compiled.php	/^        $method = 'configure' . ucfirst($app['config']['app.log']) . 'Handler';$/;"	v
method	bootstrap/cache/compiled.php	/^        $method = 'create' . Str::studly($driver) . 'Driver';$/;"	v
method	bootstrap/cache/compiled.php	/^        $method = Str::contains($prefix, 'composing') ? 'compose' : 'create';$/;"	v
method	bootstrap/cache/compiled.php	/^        $method = count($segments) == 2 ? $segments[1] : $defaultMethod;$/;"	v
method	bootstrap/cache/compiled.php	/^        $this->method = $method;$/;"	v
method	bootstrap/cache/compiled.php	/^        $this->method = null;$/;"	v
method	bootstrap/cache/compiled.php	/^        foreach ($routable as $method => $routes) {$/;"	v
method	bootstrap/cache/compiled.php	/^        foreach ($this->getEchoMethods() as $method => $length) {$/;"	v
method	bootstrap/cache/compiled.php	/^    protected $method = 'handle';$/;"	v
method	bootstrap/cache/compiled.php	/^    protected $method;$/;"	v
method	bootstrap/cache/compiled.php	/^    public function method()$/;"	f
method	bootstrap/cache/compiled.php	/^    public static function create($uri, $method = 'GET', $parameters = array(), $cookies = array(), $files = array(), $server = array(), $content = null)$/;"	v
methodExcludedByOptions	bootstrap/cache/compiled.php	/^    public function methodExcludedByOptions($method, array $options)$/;"	f
methodNotAllowed	bootstrap/cache/compiled.php	/^    protected function methodNotAllowed(array $others)$/;"	f
methods	bootstrap/cache/compiled.php	/^        $methods = $reflection->getMethods(ReflectionMethod::IS_PUBLIC);$/;"	v
methods	bootstrap/cache/compiled.php	/^        $methods = ['compileRawEchos' => strlen(stripcslashes($this->rawTags[0])), 'compileEscapedEchos' => strlen(stripcslashes($this->escapedTags[0])), 'compileRegularEchos' => strlen(stripcslashes($this->contentTags[0]))];$/;"	v
methods	bootstrap/cache/compiled.php	/^        $methods = array_diff(Router::$verbs, [$request->getMethod()]);$/;"	v
methods	bootstrap/cache/compiled.php	/^        $this->methods = $data['methods'];$/;"	v
methods	bootstrap/cache/compiled.php	/^        $this->methods = (array) $methods;$/;"	v
methods	bootstrap/cache/compiled.php	/^        $this->methods = array_map('strtoupper', (array) $methods);$/;"	v
methods	bootstrap/cache/compiled.php	/^    private $methods = array();$/;"	v
methods	bootstrap/cache/compiled.php	/^    protected $methods;$/;"	v
methods	bootstrap/cache/compiled.php	/^    public function methods()$/;"	f
microsecondTimestamps	bootstrap/cache/compiled.php	/^        $this->microsecondTimestamps = (bool) $micro;$/;"	v
microsecondTimestamps	bootstrap/cache/compiled.php	/^    protected $microsecondTimestamps = true;$/;"	v
middleware	app/Http/Kernel.php	/^    protected $middleware = [$/;"	v
middleware	bootstrap/cache/compiled.php	/^                $middleware = $this->middleware[$middleware];$/;"	v
middleware	bootstrap/cache/compiled.php	/^            $middleware = [$middleware];$/;"	v
middleware	bootstrap/cache/compiled.php	/^        $middleware = $shouldSkipMiddleware ? [] : $this->gatherRouteMiddlewares($route);$/;"	v
middleware	bootstrap/cache/compiled.php	/^        $middleware = $shouldSkipMiddleware ? [] : $this->getMiddleware($instance, $method);$/;"	v
middleware	bootstrap/cache/compiled.php	/^    protected $middleware = [];$/;"	v
middleware	bootstrap/cache/compiled.php	/^    public function middleware($middleware = null)$/;"	f
middleware	bootstrap/cache/compiled.php	/^    public function middleware($middleware, array $options = [])$/;"	f
middleware	bootstrap/cache/compiled.php	/^    public function middleware($name, $class)$/;"	f
middlewareGroup	bootstrap/cache/compiled.php	/^    public function middlewareGroup($name, array $middleware)$/;"	f
middlewareGroups	app/Http/Kernel.php	/^    protected $middlewareGroups = [$/;"	v
middlewareGroups	bootstrap/cache/compiled.php	/^    protected $middlewareGroups = [];$/;"	v
middlewares	bootstrap/cache/compiled.php	/^        $middlewares = $this->app->shouldSkipMiddleware() ? [] : array_merge($this->gatherRouteMiddlewares($request), $this->middleware);$/;"	v
migrate	bootstrap/cache/compiled.php	/^    public function migrate($destroy = false, $lifetime = null)$/;"	f
migrate	bootstrap/cache/compiled.php	/^    public function migrate($destroy = false, $lifetime = null);$/;"	f
mimeType	bootstrap/cache/compiled.php	/^    public function mimeType($path)$/;"	f
min	bootstrap/cache/compiled.php	/^    public function min($key = null)$/;"	f
minDepth	bootstrap/cache/compiled.php	/^                    $minDepth = $comparator->getTarget() + 1;$/;"	v
minDepth	bootstrap/cache/compiled.php	/^                    $minDepth = $comparator->getTarget();$/;"	v
minDepth	bootstrap/cache/compiled.php	/^                    $minDepth = $maxDepth = $comparator->getTarget();$/;"	v
minDepth	bootstrap/cache/compiled.php	/^        $minDepth = 0;$/;"	v
minutes	bootstrap/cache/compiled.php	/^        $minutes = $this->app['config']['session.lifetime'];$/;"	v
minutes	bootstrap/cache/compiled.php	/^    public function make($name, $value, $minutes = 0, $path = null, $domain = null, $secure = false, $httpOnly = true)$/;"	v
minutes	bootstrap/cache/compiled.php	/^    public function make($name, $value, $minutes = 0, $path = null, $domain = null, $secure = false, $httpOnly = true);$/;"	v
missing	bootstrap/cache/compiled.php	/^        $missing = $this->any($uri . '\/{_missing}', $controller . '@missingMethod');$/;"	v
missingMethod	bootstrap/cache/compiled.php	/^    public function missingMethod($parameters = [])$/;"	f
mock	bootstrap/cache/compiled.php	/^            $mock = static::$resolvedInstance[$name];$/;"	v
mock	bootstrap/cache/compiled.php	/^            $mock = static::createFreshMockInstance($name);$/;"	v
mock	bootstrap/cache/compiled.php	/^        static::$resolvedInstance[$name] = $mock = static::createMockByName($name);$/;"	v
mockery/mockery	composer.json	/^        "mockery\/mockery": "0.9.*",$/;"	f
mode	bootstrap/cache/compiled.php	/^        $this->mode = $mode;$/;"	v
mode	bootstrap/cache/compiled.php	/^        $this->mode = Iterator\\FileTypeFilterIterator::ONLY_DIRECTORIES;$/;"	v
mode	bootstrap/cache/compiled.php	/^        $this->mode = Iterator\\FileTypeFilterIterator::ONLY_FILES;$/;"	v
mode	bootstrap/cache/compiled.php	/^    private $mode = 0;$/;"	v
mode	bootstrap/cache/compiled.php	/^    private $mode;$/;"	v
mode	bootstrap/cache/compiled.php	/^    public function makeDirectory($path, $mode = 0755, $recursive = false, $force = false)$/;"	v
model	bootstrap/cache/compiled.php	/^                $model = $class->newInstance();$/;"	v
model	bootstrap/cache/compiled.php	/^        $model = $this->createModel();$/;"	v
model	bootstrap/cache/compiled.php	/^        $model = $this->newInstance([], true);$/;"	v
model	bootstrap/cache/compiled.php	/^        $model = $this;$/;"	v
model	bootstrap/cache/compiled.php	/^        $model = new static($attributes);$/;"	v
model	bootstrap/cache/compiled.php	/^        $model = new static((array) $attributes);$/;"	v
model	bootstrap/cache/compiled.php	/^        $model = new static();$/;"	v
model	bootstrap/cache/compiled.php	/^        $this->model = $model;$/;"	v
model	bootstrap/cache/compiled.php	/^    protected $model;$/;"	v
model	bootstrap/cache/compiled.php	/^    public function model($key, $class, Closure $callback = null)$/;"	f
modelScopes	bootstrap/cache/compiled.php	/^        $modelScopes = Arr::get(static::$globalScopes, static::class, []);$/;"	v
models	app/modelEvents.php	/^$models = ['Talk', 'Conference', 'TalkRevision', 'Bio'];$/;"	v
models	bootstrap/cache/compiled.php	/^            $models = $models instanceof Collection ? $models->all() : [$models];$/;"	v
models	bootstrap/cache/compiled.php	/^        $models = [$related, $base];$/;"	v
models	bootstrap/cache/compiled.php	/^    public function newCollection(array $models = [])$/;"	v
modifiedSince	bootstrap/cache/compiled.php	/^        $modifiedSince = $request->headers->get('If-Modified-Since');$/;"	v
monolog	bootstrap/cache/compiled.php	/^        $this->monolog = $monolog;$/;"	v
monolog	bootstrap/cache/compiled.php	/^    protected $monolog;$/;"	v
monologConfigurator	bootstrap/cache/compiled.php	/^        $this->monologConfigurator = $callback;$/;"	v
monologConfigurator	bootstrap/cache/compiled.php	/^    protected $monologConfigurator;$/;"	v
morphClass	bootstrap/cache/compiled.php	/^    protected $morphClass;$/;"	v
morphMany	bootstrap/cache/compiled.php	/^    public function morphMany($related, $name, $type = null, $id = null, $localKey = null)$/;"	f
morphMap	bootstrap/cache/compiled.php	/^        $morphMap = Relation::morphMap();$/;"	v
morphOne	bootstrap/cache/compiled.php	/^    public function morphOne($related, $name, $type = null, $id = null, $localKey = null)$/;"	f
morphTo	bootstrap/cache/compiled.php	/^    public function morphTo($name = null, $type = null, $id = null)$/;"	f
morphToJson	bootstrap/cache/compiled.php	/^    protected function morphToJson($content)$/;"	f
morphToMany	bootstrap/cache/compiled.php	/^    public function morphToMany($related, $name, $table = null, $foreignKey = null, $otherKey = null, $inverse = false)$/;"	f
morphedByMany	bootstrap/cache/compiled.php	/^    public function morphedByMany($related, $name, $table = null, $foreignKey = null, $otherKey = null)$/;"	f
move	bootstrap/cache/compiled.php	/^    public function move($path, $target)$/;"	f
msg	bootstrap/cache/compiled.php	/^                $msg = 'Malformed UTF-8 characters, possibly incorrectly encoded';$/;"	v
msg	bootstrap/cache/compiled.php	/^                $msg = 'Maximum stack depth exceeded';$/;"	v
msg	bootstrap/cache/compiled.php	/^                $msg = 'Underflow or the modes mismatch';$/;"	v
msg	bootstrap/cache/compiled.php	/^                $msg = 'Unexpected control character found';$/;"	v
msg	bootstrap/cache/compiled.php	/^                $msg = 'Unknown error';$/;"	v
mustRevalidate	bootstrap/cache/compiled.php	/^    public function mustRevalidate()$/;"	f
mustRotate	bootstrap/cache/compiled.php	/^            $this->mustRotate = !file_exists($this->url);$/;"	v
mustRotate	bootstrap/cache/compiled.php	/^            $this->mustRotate = true;$/;"	v
mustRotate	bootstrap/cache/compiled.php	/^        $this->mustRotate = false;$/;"	v
mustRotate	bootstrap/cache/compiled.php	/^    protected $mustRotate;$/;"	v
mutateAttribute	bootstrap/cache/compiled.php	/^    protected function mutateAttribute($key, $value)$/;"	f
mutateAttributeForArray	bootstrap/cache/compiled.php	/^    protected function mutateAttributeForArray($key, $value)$/;"	f
mutatedAttributes	bootstrap/cache/compiled.php	/^        $mutatedAttributes = $this->getMutatedAttributes();$/;"	v
mutatedAttributes	bootstrap/cache/compiled.php	/^        $mutatedAttributes = [];$/;"	v
mutatorCache	bootstrap/cache/compiled.php	/^    protected static $mutatorCache = [];$/;"	v
myTalks	app/models/Conference.php	/^    public function myTalks()$/;"	f
name	app/Console/Commands/Inspire.php	/^    protected $name = 'inspire';$/;"	v
name	app/Console/Commands/TweetImportantCFPDates.php	/^    protected $name = 'tweet:cfpDates';$/;"	v
name	app/Console/Commands/syncJoindInEvents.php	/^    protected $name = 'joindin:sync';$/;"	v
name	bootstrap/cache/compiled.php	/^            $name = Str::snake($caller['function']);$/;"	v
name	bootstrap/cache/compiled.php	/^            $name = implode('-', array_map('ucfirst', explode('-', $name)));$/;"	v
name	bootstrap/cache/compiled.php	/^            $name = static::class;$/;"	v
name	bootstrap/cache/compiled.php	/^            foreach ($exception->getHeaders() as $name => $value) {$/;"	v
name	bootstrap/cache/compiled.php	/^        $name = $name ?: $this->getDefaultConnection();$/;"	v
name	bootstrap/cache/compiled.php	/^        $name = $name ?: $this->getDefaultDriver();$/;"	v
name	bootstrap/cache/compiled.php	/^        $name = $prefix . $view;$/;"	v
name	bootstrap/cache/compiled.php	/^        $name = is_string($provider) ? $provider : get_class($provider);$/;"	v
name	bootstrap/cache/compiled.php	/^        $name = static::getFacadeAccessor();$/;"	v
name	bootstrap/cache/compiled.php	/^        $this->name = $name;$/;"	v
name	bootstrap/cache/compiled.php	/^        foreach ($attributes as $name => $value) {$/;"	v
name	bootstrap/cache/compiled.php	/^        foreach ($defaults as $name => $default) {$/;"	v
name	bootstrap/cache/compiled.php	/^        foreach ($instance->getMiddleware() as $name => $options) {$/;"	v
name	bootstrap/cache/compiled.php	/^        foreach ($options as $name => $option) {$/;"	v
name	bootstrap/cache/compiled.php	/^        foreach ($resources as $name => $controller) {$/;"	v
name	bootstrap/cache/compiled.php	/^        foreach ($this->headers as $name => $values) {$/;"	v
name	bootstrap/cache/compiled.php	/^        foreach ($this->headers->allPreserveCase() as $name => $values) {$/;"	v
name	bootstrap/cache/compiled.php	/^        foreach ($this->parseWhere($name, $expression) as $name => $expression) {$/;"	v
name	bootstrap/cache/compiled.php	/^        foreach ($wheres as $name => $expression) {$/;"	v
name	bootstrap/cache/compiled.php	/^    private $name = '__metadata';$/;"	v
name	bootstrap/cache/compiled.php	/^    private $name = 'attributes';$/;"	v
name	bootstrap/cache/compiled.php	/^    protected $name;$/;"	v
name	bootstrap/cache/compiled.php	/^    public function download($file, $name = null, array $headers = [], $disposition = 'attachment');$/;"	v
name	bootstrap/cache/compiled.php	/^    public function make(array $config, $name = null)$/;"	v
name	bootstrap/cache/compiled.php	/^    public function name($name)$/;"	f
name	bootstrap/cache/compiled.php	/^    public function name($path)$/;"	f
name	bootstrap/cache/compiled.php	/^    public function name($pattern)$/;"	f
name	bootstrap/cache/compiled.php	/^    public function name($view, $name)$/;"	f
name	bootstrap/cache/compiled.php	/^    public function name()$/;"	f
name	bootstrap/cache/compiled.php	/^    public function name();$/;"	f
name	composer.json	/^    "name": "laravel\/laravel",$/;"	f
nameList	bootstrap/cache/compiled.php	/^        $this->nameList = [];$/;"	v
nameList	bootstrap/cache/compiled.php	/^    protected $nameList = [];$/;"	v
names	bootstrap/cache/compiled.php	/^    private $names = array();$/;"	v
names	bootstrap/cache/compiled.php	/^    protected $names = [];$/;"	v
names	bootstrap/cache/compiled.php	/^    public function controller($uri, $controller, $names = [])$/;"	v
namespace	app/Providers/RouteServiceProvider.php	/^    protected $namespace = 'App\\Http\\Controllers';$/;"	v
namespace	bootstrap/cache/compiled.php	/^                    return $this->namespace = $namespace;$/;"	v
namespace	bootstrap/cache/compiled.php	/^        foreach ((array) data_get($composer, 'autoload.psr-4') as $namespace => $path) {$/;"	v
namespace	bootstrap/cache/compiled.php	/^    protected $namespace = 'App\\\\Http\\\\Controllers';$/;"	v
namespace	bootstrap/cache/compiled.php	/^    protected $namespace = null;$/;"	v
namespace	bootstrap/cache/compiled.php	/^    protected $namespace;$/;"	v
nbToken	bootstrap/cache/compiled.php	/^        for ($i = 0, $nbToken = count($tokens); $i < $nbToken; ++$i) {$/;"	v
nbTokens	bootstrap/cache/compiled.php	/^                    $nbTokens = count($tokens);$/;"	v
needle	bootstrap/cache/compiled.php	/^            if ((string) $needle === static::substr($haystack, -static::length($needle))) {$/;"	v
needs	bootstrap/cache/compiled.php	/^    public function needs($abstract);$/;"	f
needsRehash	bootstrap/cache/compiled.php	/^    public function needsRehash($hashedValue, array $options = [])$/;"	f
needsRehash	bootstrap/cache/compiled.php	/^    public function needsRehash($hashedValue, array $options = []);$/;"	f
nest	bootstrap/cache/compiled.php	/^    public function nest($key, $view, array $data = [])$/;"	f
nesting	bootstrap/cache/compiled.php	/^            $nesting = $this->getConfigurationNesting($file, $configPath);$/;"	v
new	bootstrap/cache/compiled.php	/^        $new = [];$/;"	v
new	bootstrap/cache/compiled.php	/^        $new = clone $this;$/;"	v
newBaseQueryBuilder	bootstrap/cache/compiled.php	/^    protected function newBaseQueryBuilder()$/;"	f
newCollection	bootstrap/cache/compiled.php	/^    public function newCollection(array $models = [])$/;"	f
newEloquentBuilder	bootstrap/cache/compiled.php	/^    public function newEloquentBuilder($query)$/;"	f
newFromBuilder	bootstrap/cache/compiled.php	/^    public function newFromBuilder($attributes = [], $connection = null)$/;"	f
newInstance	bootstrap/cache/compiled.php	/^    public function newInstance($attributes = [], $exists = false)$/;"	f
newPivot	bootstrap/cache/compiled.php	/^    public function newPivot(Model $parent, array $attributes, $table, $exists)$/;"	f
newQuery	bootstrap/cache/compiled.php	/^    public function newQuery()$/;"	f
newQueryWithoutScope	bootstrap/cache/compiled.php	/^    public function newQueryWithoutScope($scope)$/;"	f
newQueryWithoutScopes	bootstrap/cache/compiled.php	/^    public function newQueryWithoutScopes()$/;"	f
newRoute	bootstrap/cache/compiled.php	/^    protected function newRoute($methods, $uri, $action)$/;"	f
newTalkId	database/migrations/2015_05_24_113910_drop_versions.php	/^                    $newTalkId = (string)\\Rhumsaa\\Uuid\\Uuid::uuid4();$/;"	v
nextPageUrl	bootstrap/cache/compiled.php	/^    public function nextPageUrl()$/;"	f
nextPageUrl	bootstrap/cache/compiled.php	/^    public function nextPageUrl();$/;"	f
nextRotation	bootstrap/cache/compiled.php	/^        $this->nextRotation = new \\DateTime('tomorrow');$/;"	v
nextRotation	bootstrap/cache/compiled.php	/^    protected $nextRotation;$/;"	v
nextSeparator	bootstrap/cache/compiled.php	/^                $nextSeparator = self::findNextSeparator($followingPattern);$/;"	v
noMatchRegexps	bootstrap/cache/compiled.php	/^    protected $noMatchRegexps = array();$/;"	v
non_owners_can_view_conference	tests/ConferenceTest.php	/^    public function non_owners_can_view_conference()$/;"	f
normalize	bootstrap/cache/compiled.php	/^    protected function normalize($data)$/;"	f
normalize	bootstrap/cache/compiled.php	/^    protected function normalize($service)$/;"	f
normalizeException	bootstrap/cache/compiled.php	/^    protected function normalizeException($e)$/;"	f
normalizeName	bootstrap/cache/compiled.php	/^    protected function normalizeName($name)$/;"	f
normalizeQueryString	bootstrap/cache/compiled.php	/^    public static function normalizeQueryString($qs)$/;"	f
normalized	bootstrap/cache/compiled.php	/^            $normalized = array();$/;"	v
notContains	bootstrap/cache/compiled.php	/^    private $notContains = array();$/;"	v
notContains	bootstrap/cache/compiled.php	/^    public function notContains($pattern)$/;"	f
notModified	bootstrap/cache/compiled.php	/^            $notModified = in_array($this->getEtag(), $etags) || in_array('*', $etags);$/;"	v
notModified	bootstrap/cache/compiled.php	/^            $notModified = strtotime($modifiedSince) >= strtotime($lastModified) && (!$etags || $notModified);$/;"	v
notModified	bootstrap/cache/compiled.php	/^        $notModified = false;$/;"	v
notName	bootstrap/cache/compiled.php	/^    public function notName($pattern)$/;"	f
notNames	bootstrap/cache/compiled.php	/^    private $notNames = array();$/;"	v
notPath	bootstrap/cache/compiled.php	/^    public function notPath($pattern)$/;"	f
notPaths	bootstrap/cache/compiled.php	/^    private $notPaths = array();$/;"	v
notice	bootstrap/cache/compiled.php	/^    public function notice($message, array $context = [])$/;"	f
notice	bootstrap/cache/compiled.php	/^    public function notice($message, array $context = []);$/;"	f
notice	bootstrap/cache/compiled.php	/^    public function notice($message, array $context = array())$/;"	f
notice	bootstrap/cache/compiled.php	/^    public function notice($message, array $context = array());$/;"	f
now	bootstrap/cache/compiled.php	/^    public function now($key, $value)$/;"	f
numRows	bootstrap/cache/compiled.php	/^                $numRows = $this->setKeysForSaveQuery($query)->update($dirty);$/;"	v
obLevel	bootstrap/cache/compiled.php	/^        $obLevel = ob_get_level();$/;"	v
object	bootstrap/cache/compiled.php	/^                $object = $closure($container);$/;"	v
object	bootstrap/cache/compiled.php	/^            $object = $extender($object, $this);$/;"	v
object	bootstrap/cache/compiled.php	/^            $object = $this->build($concrete, $parameters);$/;"	v
object	bootstrap/cache/compiled.php	/^            $object = $this->make($concrete, $parameters);$/;"	v
object	bootstrap/cache/compiled.php	/^            static $object;$/;"	v
observables	bootstrap/cache/compiled.php	/^        $observables = is_array($observables) ? $observables : func_get_args();$/;"	v
observables	bootstrap/cache/compiled.php	/^        $this->observables = $observables;$/;"	v
observables	bootstrap/cache/compiled.php	/^        $this->observables = array_diff($this->observables, $observables);$/;"	v
observables	bootstrap/cache/compiled.php	/^        $this->observables = array_unique(array_merge($this->observables, $observables));$/;"	v
observables	bootstrap/cache/compiled.php	/^    protected $observables = [];$/;"	v
observe	bootstrap/cache/compiled.php	/^    public static function observe($class, $priority = 0)$/;"	f
of	bootstrap/cache/compiled.php	/^    public function of($view, $data = [])$/;"	f
offset	bootstrap/cache/compiled.php	/^    public function every($step, $offset = 0)$/;"	v
offsetExists	bootstrap/cache/compiled.php	/^    public function offsetExists($key)$/;"	f
offsetExists	bootstrap/cache/compiled.php	/^    public function offsetExists($offset)$/;"	f
offsetGet	bootstrap/cache/compiled.php	/^    public function offsetGet($key)$/;"	f
offsetGet	bootstrap/cache/compiled.php	/^    public function offsetGet($offset)$/;"	f
offsetSet	bootstrap/cache/compiled.php	/^    public function offsetSet($key, $value)$/;"	f
offsetSet	bootstrap/cache/compiled.php	/^    public function offsetSet($offset, $value)$/;"	f
offsetUnset	bootstrap/cache/compiled.php	/^    public function offsetUnset($key)$/;"	f
offsetUnset	bootstrap/cache/compiled.php	/^    public function offsetUnset($offset)$/;"	f
old	bootstrap/cache/compiled.php	/^        $old = $this->fileLinkFormat;$/;"	v
old	bootstrap/cache/compiled.php	/^        $old = $this->getOldInput($key);$/;"	v
old	bootstrap/cache/compiled.php	/^        $old = $this->handler;$/;"	v
old	bootstrap/cache/compiled.php	/^    public function old($key = null, $default = null)$/;"	f
oldPrefix	bootstrap/cache/compiled.php	/^        $oldPrefix = isset($old['prefix']) ? $old['prefix'] : null;$/;"	v
oldRevision	tests/SubmissionTest.php	/^        $oldRevision = Factory::create('talkRevision', [$/;"	v
oldVersionId	database/migrations/2015_05_24_113910_drop_versions.php	/^            $oldVersionId = $revision->talk_version_id;$/;"	v
on	bootstrap/cache/compiled.php	/^    public static function on($connection = null)$/;"	f
onNewConference	app/Handlers/Events/SlackSubscriber.php	/^    public function onNewConference($conference)$/;"	f
onNewSignup	app/Handlers/Events/SlackSubscriber.php	/^    public function onNewSignup($user)$/;"	f
onWriteConnection	bootstrap/cache/compiled.php	/^    public static function onWriteConnection()$/;"	f
once	bootstrap/cache/compiled.php	/^    public function once(array $credentials = [])$/;"	f
once	bootstrap/cache/compiled.php	/^    public function once(array $credentials = []);$/;"	f
onceBasic	bootstrap/cache/compiled.php	/^    public function onceBasic($field = 'email', $extraConditions = [])$/;"	f
onceUsingId	bootstrap/cache/compiled.php	/^    public function onceUsingId($id)$/;"	f
onceUsingId	bootstrap/cache/compiled.php	/^    public function onceUsingId($id);$/;"	f
only	bootstrap/cache/compiled.php	/^    public function only($keys)$/;"	f
only	bootstrap/cache/compiled.php	/^    public static function only($array, $keys)$/;"	f
optionals	bootstrap/cache/compiled.php	/^        $optionals = $this->extractOptionalParameters();$/;"	v
options	bootstrap/cache/compiled.php	/^            $options = array('flags' => $options);$/;"	v
options	bootstrap/cache/compiled.php	/^        $options = $options ?: FilesystemIterator::SKIP_DOTS;$/;"	v
options	bootstrap/cache/compiled.php	/^        $this->options = $data['options'];$/;"	v
options	bootstrap/cache/compiled.php	/^        $this->options = array('compiler_class' => 'Symfony\\\\Component\\\\Routing\\\\RouteCompiler');$/;"	v
options	bootstrap/cache/compiled.php	/^    private $options = array();$/;"	v
options	bootstrap/cache/compiled.php	/^    protected function performInsert(Builder $query, array $options = [])$/;"	v
options	bootstrap/cache/compiled.php	/^    protected function performUpdate(Builder $query, array $options = [])$/;"	v
options	bootstrap/cache/compiled.php	/^    public function check($value, $hashedValue, array $options = [])$/;"	v
options	bootstrap/cache/compiled.php	/^    public function check($value, $hashedValue, array $options = []);$/;"	v
options	bootstrap/cache/compiled.php	/^    public function copyDirectory($directory, $destination, $options = null)$/;"	v
options	bootstrap/cache/compiled.php	/^    public function make($value, array $options = [])$/;"	v
options	bootstrap/cache/compiled.php	/^    public function make($value, array $options = []);$/;"	v
options	bootstrap/cache/compiled.php	/^    public function middleware($middleware, array $options = [])$/;"	v
options	bootstrap/cache/compiled.php	/^    public function needsRehash($hashedValue, array $options = [])$/;"	v
options	bootstrap/cache/compiled.php	/^    public function needsRehash($hashedValue, array $options = []);$/;"	v
options	bootstrap/cache/compiled.php	/^    public function options($uri, $action = null)$/;"	f
options	bootstrap/cache/compiled.php	/^    public function options($uri, $action);$/;"	f
options	bootstrap/cache/compiled.php	/^    public function register($provider, $options = [], $force = false)$/;"	v
options	bootstrap/cache/compiled.php	/^    public function register($provider, $options = [], $force = false);$/;"	v
options	bootstrap/cache/compiled.php	/^    public function resource($name, $controller, array $options = [])$/;"	v
options	bootstrap/cache/compiled.php	/^    public function resource($name, $controller, array $options = []);$/;"	v
options	bootstrap/cache/compiled.php	/^    public function save(array $options = [])$/;"	v
options	bootstrap/cache/compiled.php	/^    public function saveOrFail(array $options = [])$/;"	v
options	bootstrap/cache/compiled.php	/^    public function sortBy($callback, $options = SORT_REGULAR, $descending = false)$/;"	v
options	bootstrap/cache/compiled.php	/^    public function sortByDesc($callback, $options = SORT_REGULAR)$/;"	v
order	bootstrap/cache/compiled.php	/^        $order = array();$/;"	v
organizer_notes	app/models/TalkRevision.php	/^    protected $organizer_notes;$/;"	v
original	bootstrap/cache/compiled.php	/^        $original = $this->original[$key];$/;"	v
original	bootstrap/cache/compiled.php	/^        $original =& $array;$/;"	v
original	bootstrap/cache/compiled.php	/^        $this->original = $content;$/;"	v
original	bootstrap/cache/compiled.php	/^        $this->original = $this->attributes;$/;"	v
original	bootstrap/cache/compiled.php	/^    protected $original = [];$/;"	v
original	bootstrap/cache/compiled.php	/^    public $original;$/;"	v
originalIsNumericallyEquivalent	bootstrap/cache/compiled.php	/^    protected function originalIsNumericallyEquivalent($key)$/;"	f
originalParameters	bootstrap/cache/compiled.php	/^        $originalParameters = $parameters;$/;"	v
otherKey	bootstrap/cache/compiled.php	/^        $otherKey = $otherKey ?: $instance->getForeignKey();$/;"	v
otherKey	bootstrap/cache/compiled.php	/^        $otherKey = $otherKey ?: $instance->getKeyName();$/;"	v
otherKey	bootstrap/cache/compiled.php	/^        $otherKey = $otherKey ?: $name . '_id';$/;"	v
otherUser	tests/AccountTest.php	/^        $otherUser = Factory::create('user');$/;"	v
otherUser	tests/ConferenceTest.php	/^        $otherUser = Factory::create('user');        $/;"	v
otherUser	tests/SubmissionTest.php	/^        $otherUser = Factory::create('user', [$/;"	v
others	bootstrap/cache/compiled.php	/^        $others = $this->checkForAlternateVerbs($request);$/;"	v
others	bootstrap/cache/compiled.php	/^        $others = [];$/;"	v
output	bootstrap/cache/compiled.php	/^                $output = str_replace('%' . $var . '%', $this->stringify($val), $output);$/;"	v
output	bootstrap/cache/compiled.php	/^                $output = str_replace('%context%', '', $output);$/;"	v
output	bootstrap/cache/compiled.php	/^                $output = str_replace('%context.' . $var . '%', $this->stringify($val), $output);$/;"	v
output	bootstrap/cache/compiled.php	/^                $output = str_replace('%extra%', '', $output);$/;"	v
output	bootstrap/cache/compiled.php	/^                $output = str_replace('%extra.' . $var . '%', $this->stringify($val), $output);$/;"	v
output	bootstrap/cache/compiled.php	/^        $output = $this->format;$/;"	v
output	bootstrap/cache/compiled.php	/^        $output = sprintf('%s; filename="%s"', $disposition, str_replace('"', '\\\\"', $filenameFallback));$/;"	v
outputParameters	app/macros.php	/^    $outputParameters = [];$/;"	v
overload	bootstrap/cache/compiled.php	/^    public function overload()$/;"	f
overrideGlobals	bootstrap/cache/compiled.php	/^    public function overrideGlobals()$/;"	f
page	bootstrap/cache/compiled.php	/^            $page = $this->app['request']->input($pageName);$/;"	v
page	bootstrap/cache/compiled.php	/^            $page = 1;$/;"	v
pageName	bootstrap/cache/compiled.php	/^        $this->pageName = $name;$/;"	v
pageName	bootstrap/cache/compiled.php	/^    protected $pageName = 'page';$/;"	v
parameter	bootstrap/cache/compiled.php	/^    public function parameter($name, $default = null)$/;"	f
parameterNames	bootstrap/cache/compiled.php	/^        return $this->parameterNames = $this->compileParameterNames();$/;"	v
parameterNames	bootstrap/cache/compiled.php	/^    protected $parameterNames;$/;"	v
parameterNames	bootstrap/cache/compiled.php	/^    public function parameterNames()$/;"	f
parameters	bootstrap/cache/compiled.php	/^                    $parameters = [$passable, $stack];$/;"	v
parameters	bootstrap/cache/compiled.php	/^                    $parameters = array_merge([$passable, $stack], $parameters);$/;"	v
parameters	bootstrap/cache/compiled.php	/^            $parameters = (new ReflectionFunction($action['uses']))->getParameters();$/;"	v
parameters	bootstrap/cache/compiled.php	/^            $parameters = (new ReflectionMethod($class, $method))->getParameters();$/;"	v
parameters	bootstrap/cache/compiled.php	/^            $parameters = array_merge($this->query, $parameters);$/;"	v
parameters	bootstrap/cache/compiled.php	/^            $parameters = explode(',', $parameters);$/;"	v
parameters	bootstrap/cache/compiled.php	/^        $parameters = $route->parameters();$/;"	v
parameters	bootstrap/cache/compiled.php	/^        $parameters = $this->formatParameters($parameters);$/;"	v
parameters	bootstrap/cache/compiled.php	/^        $parameters = $this->keyParametersByArgument($dependencies, $parameters);$/;"	v
parameters	bootstrap/cache/compiled.php	/^        $parameters = $this->resolveClassMethodDependencies($route->parametersWithoutNulls(), $instance, $method);$/;"	v
parameters	bootstrap/cache/compiled.php	/^        $parameters = $this->resolveMethodDependencies($this->parametersWithoutNulls(), new ReflectionFunction($this->action['uses']));$/;"	v
parameters	bootstrap/cache/compiled.php	/^        $parameters = [$this->pageName => $page];$/;"	v
parameters	bootstrap/cache/compiled.php	/^        $parameters = array_intersect_key($matches, array_flip($parameterNames));$/;"	v
parameters	bootstrap/cache/compiled.php	/^        $parameters = is_array($parameters) ? $parameters : [$parameters];$/;"	v
parameters	bootstrap/cache/compiled.php	/^        $this->parameters = $parameters;$/;"	v
parameters	bootstrap/cache/compiled.php	/^        $this->parameters = array();$/;"	v
parameters	bootstrap/cache/compiled.php	/^        $this->parameters = array_replace($this->parameters, $parameters);$/;"	v
parameters	bootstrap/cache/compiled.php	/^        return $this->parameters = $this->replaceDefaults($params);$/;"	v
parameters	bootstrap/cache/compiled.php	/^        return function ($c, $parameters = []) use($abstract, $concrete) {$/;"	v
parameters	bootstrap/cache/compiled.php	/^    protected $parameters;$/;"	v
parameters	bootstrap/cache/compiled.php	/^    protected function callClass($target, array $parameters = [], $defaultMethod = null)$/;"	v
parameters	bootstrap/cache/compiled.php	/^    protected function getMethodDependencies($callback, array $parameters = [])$/;"	v
parameters	bootstrap/cache/compiled.php	/^    public function __construct(array $parameters = array())$/;"	v
parameters	bootstrap/cache/compiled.php	/^    public function action($action, $parameters = [], $absolute = true)$/;"	v
parameters	bootstrap/cache/compiled.php	/^    public function action($action, $parameters = [], $absolute = true);$/;"	v
parameters	bootstrap/cache/compiled.php	/^    public function add(array $parameters = array())$/;"	v
parameters	bootstrap/cache/compiled.php	/^    public function build($concrete, array $parameters = [])$/;"	v
parameters	bootstrap/cache/compiled.php	/^    public function call($callback, array $parameters = [], $defaultMethod = null)$/;"	v
parameters	bootstrap/cache/compiled.php	/^    public function call($callback, array $parameters = [], $defaultMethod = null);$/;"	v
parameters	bootstrap/cache/compiled.php	/^    public function make($abstract, array $parameters = [])$/;"	v
parameters	bootstrap/cache/compiled.php	/^    public function make($abstract, array $parameters = []);$/;"	v
parameters	bootstrap/cache/compiled.php	/^    public function parameters()$/;"	f
parameters	bootstrap/cache/compiled.php	/^    public function redirectToAction($action, $parameters = [], $status = 302, $headers = []);$/;"	v
parameters	bootstrap/cache/compiled.php	/^    public function redirectToRoute($route, $parameters = [], $status = 302, $headers = []);$/;"	v
parameters	bootstrap/cache/compiled.php	/^    public function replace(array $parameters = array())$/;"	v
parameters	bootstrap/cache/compiled.php	/^    public function resourceParameters(array $parameters = [])$/;"	v
parameters	bootstrap/cache/compiled.php	/^    public function route($name, $parameters = [], $absolute = true)$/;"	v
parameters	bootstrap/cache/compiled.php	/^    public function route($name, $parameters = [], $absolute = true);$/;"	v
parameters	bootstrap/cache/compiled.php	/^    public function secure($path, $parameters = [])$/;"	v
parameters	bootstrap/cache/compiled.php	/^    public function secure($path, $parameters = []);$/;"	v
parameters	bootstrap/cache/compiled.php	/^    public function wrap(Closure $callback, array $parameters = [])$/;"	v
parametersWithoutNulls	bootstrap/cache/compiled.php	/^    public function parametersWithoutNulls()$/;"	f
params	app/Http/Controllers/OAuthController.php	/^        $params = $this->authorizer->getAuthCodeRequestParams();$/;"	v
params	bootstrap/cache/compiled.php	/^            $params = $this->bindHostParameters($request, $params);$/;"	v
params	bootstrap/cache/compiled.php	/^        $params = $this->matchToKeys(array_slice($this->bindPathParameters($request), 1));$/;"	v
params	bootstrap/cache/compiled.php	/^        $params = array_merge([function () {$/;"	v
parseAbilityAndArguments	bootstrap/cache/compiled.php	/^    protected function parseAbilityAndArguments($ability, $arguments)$/;"	f
parseAction	bootstrap/cache/compiled.php	/^    protected function parseAction($action)$/;"	f
parseBasicSegments	bootstrap/cache/compiled.php	/^    protected function parseBasicSegments(array $segments)$/;"	f
parseCacheControl	bootstrap/cache/compiled.php	/^    protected function parseCacheControl($header)$/;"	f
parseCallback	bootstrap/cache/compiled.php	/^    public static function parseCallback($callback, $default)$/;"	f
parseClassCallable	bootstrap/cache/compiled.php	/^    protected function parseClassCallable($listener)$/;"	f
parseClassEvent	bootstrap/cache/compiled.php	/^    protected function parseClassEvent($class, $prefix)$/;"	f
parseConfig	bootstrap/cache/compiled.php	/^    protected function parseConfig(array $config, $name)$/;"	f
parseConnectionName	bootstrap/cache/compiled.php	/^    protected function parseConnectionName($name)$/;"	f
parseData	bootstrap/cache/compiled.php	/^    protected function parseData($data)$/;"	f
parseJson	tests/Api/ApiTestCase.php	/^    protected function parseJson($response)$/;"	f
parseKey	bootstrap/cache/compiled.php	/^    public function parseKey($key)$/;"	f
parseLevel	bootstrap/cache/compiled.php	/^    protected function parseLevel($level)$/;"	f
parseMiddleware	bootstrap/cache/compiled.php	/^    protected function parseMiddleware($middleware)$/;"	f
parseMiddlewareGroup	bootstrap/cache/compiled.php	/^    protected function parseMiddlewareGroup($name)$/;"	f
parseNamespacedSegments	bootstrap/cache/compiled.php	/^    protected function parseNamespacedSegments($key)$/;"	f
parsePipeString	bootstrap/cache/compiled.php	/^    protected function parsePipeString($pipe)$/;"	f
parseToken	bootstrap/cache/compiled.php	/^    protected function parseToken($token)$/;"	f
parseWhere	bootstrap/cache/compiled.php	/^    protected function parseWhere($name, $expression)$/;"	f
parsed	bootstrap/cache/compiled.php	/^            $parsed = $this->parseBasicSegments($segments);$/;"	v
parsed	bootstrap/cache/compiled.php	/^            $parsed = $this->parseNamespacedSegments($key);$/;"	v
parsed	bootstrap/cache/compiled.php	/^    protected $parsed = [];$/;"	v
part	bootstrap/cache/compiled.php	/^                $part = array_shift($parts);$/;"	v
parts	bootstrap/cache/compiled.php	/^                $parts = explode('=', $bit);$/;"	v
parts	bootstrap/cache/compiled.php	/^            $parts = explode('.', $key);$/;"	v
parts	bootstrap/cache/compiled.php	/^        $parts = array();$/;"	v
parts	bootstrap/cache/compiled.php	/^        $parts = explode('\\\\', $class);$/;"	v
pass	bootstrap/cache/compiled.php	/^        $pass = $this->getPassword();$/;"	v
passable	bootstrap/cache/compiled.php	/^        $this->passable = $passable;$/;"	v
passable	bootstrap/cache/compiled.php	/^    protected $passable;$/;"	v
passesAuthorization	bootstrap/cache/compiled.php	/^    protected function passesAuthorization()$/;"	f
patch	bootstrap/cache/compiled.php	/^    public function patch($uri, $action = null)$/;"	f
patch	bootstrap/cache/compiled.php	/^    public function patch($uri, $action);$/;"	f
path	app/Http/Controllers/AccountController.php	/^        $path = storage_path() . '\/app\/';$/;"	v
path	bootstrap/cache/compiled.php	/^                $path = $item->getPathname();$/;"	v
path	bootstrap/cache/compiled.php	/^            $path = $this->isDir() ? $this->current()->getRelativePathname() : $this->current()->getRelativePath();$/;"	v
path	bootstrap/cache/compiled.php	/^            $path = $this->server->get('PHP_SELF', '');$/;"	v
path	bootstrap/cache/compiled.php	/^            $path = '\/';$/;"	v
path	bootstrap/cache/compiled.php	/^            $path = mb_substr($path, 0, $queryPosition);$/;"	v
path	bootstrap/cache/compiled.php	/^            $path = str_replace('\\\\', '\/', $path);$/;"	v
path	bootstrap/cache/compiled.php	/^        $path = $request->path() == '\/' ? '\/' : '\/' . $request->path();$/;"	v
path	bootstrap/cache/compiled.php	/^        $path = $route->getPath();$/;"	v
path	bootstrap/cache/compiled.php	/^        $path = $this->app['config']['session.files'];$/;"	v
path	bootstrap/cache/compiled.php	/^        $path = $this->escapeHtml($path);$/;"	v
path	bootstrap/cache/compiled.php	/^        $path = $this->finder->find($view);$/;"	v
path	bootstrap/cache/compiled.php	/^        $path = $this->replaceNamedParameters($path, $parameters);$/;"	v
path	bootstrap/cache/compiled.php	/^        $path = preg_replace_callback('\/\\\\{.*?\\\\}\/', function ($match) use(&$parameters) {$/;"	v
path	bootstrap/cache/compiled.php	/^        $path = str_repeat('..\/', count($sourceDirs)) . implode('\/', $targetDirs);$/;"	v
path	bootstrap/cache/compiled.php	/^        $this->path = $data['path'];$/;"	v
path	bootstrap/cache/compiled.php	/^        $this->path = $path;$/;"	v
path	bootstrap/cache/compiled.php	/^        $this->path = $this->path != '\/' ? rtrim($this->path, '\/') : $this->path;$/;"	v
path	bootstrap/cache/compiled.php	/^        $this->path = '\/' . ltrim(trim($pattern), '\/');$/;"	v
path	bootstrap/cache/compiled.php	/^        $this->path = empty($path) ? '\/' : $path;$/;"	v
path	bootstrap/cache/compiled.php	/^    private $path = '\/';$/;"	v
path	bootstrap/cache/compiled.php	/^    protected $path = '\/';$/;"	v
path	bootstrap/cache/compiled.php	/^    protected $path;$/;"	v
path	bootstrap/cache/compiled.php	/^    public function clearCookie($name, $path = '\/', $domain = null, $secure = false, $httpOnly = true)$/;"	v
path	bootstrap/cache/compiled.php	/^    public function forever($name, $value, $path = null, $domain = null, $secure = false, $httpOnly = true)$/;"	v
path	bootstrap/cache/compiled.php	/^    public function forever($name, $value, $path = null, $domain = null, $secure = false, $httpOnly = true);$/;"	v
path	bootstrap/cache/compiled.php	/^    public function forget($name, $path = null, $domain = null)$/;"	v
path	bootstrap/cache/compiled.php	/^    public function forget($name, $path = null, $domain = null);$/;"	v
path	bootstrap/cache/compiled.php	/^    public function path($pattern)$/;"	f
path	bootstrap/cache/compiled.php	/^    public function path()$/;"	f
path	bootstrap/cache/compiled.php	/^    public function removeCookie($name, $path = '\/', $domain = null)$/;"	v
pathInfo	bootstrap/cache/compiled.php	/^            $this->pathInfo = $this->preparePathInfo();$/;"	v
pathInfo	bootstrap/cache/compiled.php	/^        $pathInfo = substr($requestUri, strlen($baseUrl));$/;"	v
pathInfo	bootstrap/cache/compiled.php	/^        $this->pathInfo = null;$/;"	v
pathInfo	bootstrap/cache/compiled.php	/^    protected $pathInfo;$/;"	v
pathVariables	bootstrap/cache/compiled.php	/^        $pathVariables = $result['variables'];$/;"	v
pathVariables	bootstrap/cache/compiled.php	/^        $this->pathVariables = $data['path_vars'];$/;"	v
pathVariables	bootstrap/cache/compiled.php	/^        $this->pathVariables = $pathVariables;$/;"	v
pathVariables	bootstrap/cache/compiled.php	/^    private $pathVariables;$/;"	v
paths	bootstrap/cache/compiled.php	/^            $paths = $app['config']['view.paths'];$/;"	v
paths	bootstrap/cache/compiled.php	/^            $paths = array_merge($paths, $publish);$/;"	v
paths	bootstrap/cache/compiled.php	/^        $paths = [];$/;"	v
paths	bootstrap/cache/compiled.php	/^        $paths = is_array($paths) ? $paths : func_get_args();$/;"	v
paths	bootstrap/cache/compiled.php	/^        $this->paths = $paths;$/;"	v
paths	bootstrap/cache/compiled.php	/^    private $paths = array();$/;"	v
paths	bootstrap/cache/compiled.php	/^    protected $paths;$/;"	v
pathsToPublish	bootstrap/cache/compiled.php	/^    public static function pathsToPublish($provider = null, $group = null)$/;"	f
pattern	bootstrap/cache/compiled.php	/^        $pattern = preg_quote($pattern, '#');$/;"	v
pattern	bootstrap/cache/compiled.php	/^        $pattern = preg_replace('#\\\\{\\\\w+\\\\}#', '', $pattern);$/;"	v
pattern	bootstrap/cache/compiled.php	/^        $pattern = sprintf('\/%s--(.*?)--%s\/s', $this->contentTags[0], $this->contentTags[1]);$/;"	v
pattern	bootstrap/cache/compiled.php	/^        $pattern = sprintf('\/(@)?%s\\\\s*(.+?)\\\\s*%s(\\\\r?\\\\n)?\/s', $this->contentTags[0], $this->contentTags[1]);$/;"	v
pattern	bootstrap/cache/compiled.php	/^        $pattern = sprintf('\/(@)?%s\\\\s*(.+?)\\\\s*%s(\\\\r?\\\\n)?\/s', $this->escapedTags[0], $this->escapedTags[1]);$/;"	v
pattern	bootstrap/cache/compiled.php	/^        $pattern = sprintf('\/(@)?%s\\\\s*(.+?)\\\\s*%s(\\\\r?\\\\n)?\/s', $this->rawTags[0], $this->rawTags[1]);$/;"	v
pattern	bootstrap/cache/compiled.php	/^        $pattern = str_replace('\\\\*', '.*', $pattern);$/;"	v
pattern	bootstrap/cache/compiled.php	/^        $pattern = trim($this->getPathInfo(), '\/');$/;"	v
pattern	bootstrap/cache/compiled.php	/^        return $pattern == '' ? '\/' : $pattern;$/;"	v
pattern	bootstrap/cache/compiled.php	/^    public function pattern($key, $pattern)$/;"	f
patterns	bootstrap/cache/compiled.php	/^            $patterns = is_array(func_get_arg(0)) ? func_get_arg(0) : func_get_args();$/;"	v
patterns	bootstrap/cache/compiled.php	/^        $patterns = array();$/;"	v
patterns	bootstrap/cache/compiled.php	/^    protected $patterns = [];$/;"	v
patterns	bootstrap/cache/compiled.php	/^    public function patterns($patterns)$/;"	f
payload	bootstrap/cache/compiled.php	/^            $payload = [$payload];$/;"	v
payload	bootstrap/cache/compiled.php	/^        $payload = $this->getJsonPayload($payload);$/;"	v
payload	bootstrap/cache/compiled.php	/^        $payload = json_decode(base64_decode($payload), true);$/;"	v
payload	bootstrap/cache/compiled.php	/^    public function fire($event, $payload = [], $halt = false)$/;"	v
payload	bootstrap/cache/compiled.php	/^    public function fire($event, $payload = [], $halt = false);$/;"	v
payload	bootstrap/cache/compiled.php	/^    public function push($event, $payload = [])$/;"	v
payload	bootstrap/cache/compiled.php	/^    public function push($event, $payload = []);$/;"	v
payload	bootstrap/cache/compiled.php	/^    public function until($event, $payload = [])$/;"	v
payload	bootstrap/cache/compiled.php	/^    public function until($event, $payload = []);$/;"	v
pdo	bootstrap/cache/compiled.php	/^        $pdo = function () use($config) {$/;"	v
perPage	bootstrap/cache/compiled.php	/^        $this->perPage = $perPage;$/;"	v
perPage	bootstrap/cache/compiled.php	/^    protected $perPage = 15;$/;"	v
perPage	bootstrap/cache/compiled.php	/^    protected $perPage;$/;"	v
perPage	bootstrap/cache/compiled.php	/^    public function perPage()$/;"	f
perPage	bootstrap/cache/compiled.php	/^    public function perPage();$/;"	f
performBinding	bootstrap/cache/compiled.php	/^    protected function performBinding($key, $value, $route)$/;"	f
performDeleteOnModel	bootstrap/cache/compiled.php	/^    protected function performDeleteOnModel()$/;"	f
performInsert	bootstrap/cache/compiled.php	/^    protected function performInsert(Builder $query, array $options = [])$/;"	f
performUpdate	bootstrap/cache/compiled.php	/^    protected function performUpdate(Builder $query, array $options = [])$/;"	f
phpspec/phpspec	composer.json	/^        "phpspec\/phpspec": "~2.1",$/;"	f
phpunit/phpunit	composer.json	/^        "phpunit\/phpunit": "~4.4.0",$/;"	f
pipe	bootstrap/cache/compiled.php	/^                    $pipe = $this->container->make($name);$/;"	v
pipeThrough	bootstrap/cache/compiled.php	/^    public function pipeThrough(array $pipes)$/;"	f
pipeThrough	bootstrap/cache/compiled.php	/^    public function pipeThrough(array $pipes);$/;"	f
pipeline	bootstrap/cache/compiled.php	/^        $this->pipeline = new Pipeline($container);$/;"	v
pipeline	bootstrap/cache/compiled.php	/^    protected $pipeline;$/;"	v
pipes	bootstrap/cache/compiled.php	/^        $pipes = array_reverse($this->pipes);$/;"	v
pipes	bootstrap/cache/compiled.php	/^        $this->pipes = $pipes;$/;"	v
pipes	bootstrap/cache/compiled.php	/^        $this->pipes = is_array($pipes) ? $pipes : func_get_args();$/;"	v
pipes	bootstrap/cache/compiled.php	/^    protected $pipes = [];$/;"	v
pjax	bootstrap/cache/compiled.php	/^    public function pjax()$/;"	f
plain	bootstrap/cache/compiled.php	/^        $plain = $credentials['password'];$/;"	v
pluck	bootstrap/cache/compiled.php	/^    public function pluck($value, $key = null)$/;"	f
pluck	bootstrap/cache/compiled.php	/^    public static function pluck($array, $value, $key = null)$/;"	f
plural	bootstrap/cache/compiled.php	/^    public static function plural($value, $count = 2)$/;"	f
policies	bootstrap/cache/compiled.php	/^        $this->policies = $policies;$/;"	v
policies	bootstrap/cache/compiled.php	/^    protected $policies = [];$/;"	v
policy	bootstrap/cache/compiled.php	/^    public function policy($class, $policy)$/;"	f
policy	bootstrap/cache/compiled.php	/^    public function policy($class, $policy);$/;"	f
pool	bootstrap/cache/compiled.php	/^        $pool = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';$/;"	v
pop	bootstrap/cache/compiled.php	/^    public function pop()$/;"	f
popHandler	bootstrap/cache/compiled.php	/^    public function popHandler()$/;"	f
popProcessor	bootstrap/cache/compiled.php	/^    public function popProcessor()$/;"	f
popProcessor	bootstrap/cache/compiled.php	/^    public function popProcessor();$/;"	f
port	bootstrap/cache/compiled.php	/^        $port = $this->getPort();$/;"	v
port	bootstrap/cache/compiled.php	/^        $port = (int) $this->request->getPort();$/;"	v
port	bootstrap/cache/compiled.php	/^        if ($secure && $port === 443 || !$secure && $port === 80) {$/;"	v
port	bootstrap/cache/compiled.php	/^        if ('http' == $scheme && $port == 80 || 'https' == $scheme && $port == 443) {$/;"	v
pos	bootstrap/cache/compiled.php	/^                $pos = strpos($host, ':', strrpos($host, ']'));$/;"	v
pos	bootstrap/cache/compiled.php	/^                $pos = strrpos($host, ':');$/;"	v
pos	bootstrap/cache/compiled.php	/^            $pos = $match[0][1] + strlen($match[0][0]);$/;"	v
pos	bootstrap/cache/compiled.php	/^        $pos = 0;$/;"	v
pos	bootstrap/cache/compiled.php	/^        $pos = strpos($stream, ':\/\/');$/;"	v
position	bootstrap/cache/compiled.php	/^                foreach ($exception->toArray() as $position => $e) {$/;"	v
position	bootstrap/cache/compiled.php	/^        $position = 0;$/;"	v
position	bootstrap/cache/compiled.php	/^        $position = strpos($subject, $search);$/;"	v
position	bootstrap/cache/compiled.php	/^        $position = strrpos($subject, $search);$/;"	v
post	bootstrap/cache/compiled.php	/^    public function post($uri, $action = null)$/;"	f
post	bootstrap/cache/compiled.php	/^    public function post($uri, $action);$/;"	f
post-create-project-cmd	composer.json	/^        "post-create-project-cmd": [$/;"	f
post-install-cmd	composer.json	/^        "post-install-cmd": [$/;"	f
post-update-cmd	composer.json	/^        "post-update-cmd": [$/;"	f
postAccessToken	app/Http/Controllers/OAuthController.php	/^    public function postAccessToken()$/;"	f
postAuthorize	app/Http/Controllers/OAuthController.php	/^    public function postAuthorize()$/;"	f
postEmail	app/Http/Controllers/PublicProfileController.php	/^    public function postEmail($profile_slug, Captcha $captcha, Request $request)$/;"	f
postEmail	bootstrap/cache/compiled.php	/^    public function postEmail(Request $request)$/;"	f
postLogin	app/Http/Controllers/AuthController.php	/^    public function postLogin()$/;"	f
postLogin	bootstrap/cache/compiled.php	/^    public function postLogin(Request $request)$/;"	f
postRegister	bootstrap/cache/compiled.php	/^    public function postRegister(Request $request)$/;"	f
postReset	bootstrap/cache/compiled.php	/^    public function postReset(Request $request)$/;"	f
precedingChar	bootstrap/cache/compiled.php	/^            $precedingChar = strlen($precedingText) > 0 ? substr($precedingText, -1) : '';$/;"	v
precedingText	bootstrap/cache/compiled.php	/^            $precedingText = substr($pattern, $pos, $match[0][1] - $pos);$/;"	v
preferred-install	composer.json	/^        "preferred-install": "dist"$/;"	f
preferredLanguages	bootstrap/cache/compiled.php	/^        $preferredLanguages = $this->getLanguages();$/;"	v
preferredLanguages	bootstrap/cache/compiled.php	/^        $preferredLanguages = array_values(array_intersect($extendedPreferredLanguages, $locales));$/;"	v
prefers	bootstrap/cache/compiled.php	/^    public function prefers($contentTypes)$/;"	f
prefix	bootstrap/cache/compiled.php	/^    protected function addViewEvent($view, $callback, $prefix = 'composing: ', $priority = null)$/;"	v
prefix	bootstrap/cache/compiled.php	/^    protected function createConnection($driver, $connection, $database, $prefix = '', array $config = [])$/;"	v
prefix	bootstrap/cache/compiled.php	/^    protected function prefix($uri)$/;"	f
prefix	bootstrap/cache/compiled.php	/^    public function prefix($prefix)$/;"	f
prepare	bootstrap/cache/compiled.php	/^    protected function prepare(Connection $connection)$/;"	f
prepare	bootstrap/cache/compiled.php	/^    public function prepare(Request $request)$/;"	f
prepareBasePath	bootstrap/cache/compiled.php	/^    protected function prepareBasePath()$/;"	f
prepareBaseUrl	bootstrap/cache/compiled.php	/^    protected function prepareBaseUrl()$/;"	f
prepareForSerialization	bootstrap/cache/compiled.php	/^    public function prepareForSerialization()$/;"	f
prepareForStorage	bootstrap/cache/compiled.php	/^    protected function prepareForStorage($data)$/;"	f
prepareForUnserialize	bootstrap/cache/compiled.php	/^    protected function prepareForUnserialize($data)$/;"	f
preparePathInfo	bootstrap/cache/compiled.php	/^    protected function preparePathInfo()$/;"	f
prepareRequestUri	bootstrap/cache/compiled.php	/^    protected function prepareRequestUri()$/;"	f
prepareResponse	bootstrap/cache/compiled.php	/^    public function prepareResponse($request, $response)$/;"	f
prepend	bootstrap/cache/compiled.php	/^    public function prepend($key, $value)$/;"	f
prepend	bootstrap/cache/compiled.php	/^    public function prepend($key, $value);$/;"	f
prepend	bootstrap/cache/compiled.php	/^    public function prepend($path, $data)$/;"	f
prepend	bootstrap/cache/compiled.php	/^    public function prepend($value, $key = null)$/;"	f
prepend	bootstrap/cache/compiled.php	/^    public static function dot($array, $prepend = '')$/;"	v
prepend	bootstrap/cache/compiled.php	/^    public static function prepend($array, $value, $key = null)$/;"	f
prependGroupUses	bootstrap/cache/compiled.php	/^    protected function prependGroupUses($uses)$/;"	f
prependMiddleware	bootstrap/cache/compiled.php	/^    public function prependMiddleware($middleware)$/;"	f
prependMiddlewareToGroup	bootstrap/cache/compiled.php	/^    public function prependMiddlewareToGroup($group, $middleware)$/;"	f
prependNamespace	bootstrap/cache/compiled.php	/^    public function prependNamespace($namespace, $hints)$/;"	f
prependNamespace	bootstrap/cache/compiled.php	/^    public function prependNamespace($namespace, $hints);$/;"	f
prependToLoaderStack	bootstrap/cache/compiled.php	/^    protected function prependToLoaderStack()$/;"	f
prepended	bootstrap/cache/compiled.php	/^            $prepended = $this->prependGroupUses($controller);$/;"	v
prepended	bootstrap/cache/compiled.php	/^        $prepended = $controller;$/;"	v
presenter	bootstrap/cache/compiled.php	/^            $presenter = call_user_func(static::$presenterResolver, $this);$/;"	v
presenter	bootstrap/cache/compiled.php	/^        $presenter = $presenter ?: new SimpleBootstrapThreePresenter($this);$/;"	v
presenter	bootstrap/cache/compiled.php	/^    public function links(Presenter $presenter = null)$/;"	v
presenter	bootstrap/cache/compiled.php	/^    public function render(Presenter $presenter = null)$/;"	v
presenter	bootstrap/cache/compiled.php	/^    public function render(Presenter $presenter = null);$/;"	v
presenter	bootstrap/cache/compiled.php	/^    public static function presenter(Closure $resolver)$/;"	f
presenterResolver	bootstrap/cache/compiled.php	/^    protected static $presenterResolver;$/;"	v
preserve	bootstrap/cache/compiled.php	/^    public function deleteDirectory($directory, $preserve = false)$/;"	v
preserveKeys	bootstrap/cache/compiled.php	/^    public function groupBy($groupBy, $preserveKeys = false)$/;"	v
prev	bootstrap/cache/compiled.php	/^        $prev = $this->exceptionHandler;$/;"	v
prev	bootstrap/cache/compiled.php	/^        $prev = $this->loggers;$/;"	v
prev	bootstrap/cache/compiled.php	/^        $prev = $this->scopedErrors;$/;"	v
prev	bootstrap/cache/compiled.php	/^        $prev = $this->screamedErrors;$/;"	v
prev	bootstrap/cache/compiled.php	/^        $prev = $this->thrownErrors;$/;"	v
prev	bootstrap/cache/compiled.php	/^        $prev = $this->tracedErrors;$/;"	v
prev	bootstrap/cache/compiled.php	/^        $prev = set_exception_handler(array($handler, 'handle'));$/;"	v
prevLogged	bootstrap/cache/compiled.php	/^        $prevLogged = $this->loggedErrors;$/;"	v
previous	bootstrap/cache/compiled.php	/^                $previous = implode(', ', $this->buildStack);$/;"	v
previous	bootstrap/cache/compiled.php	/^    public function previous()$/;"	f
previousPageUrl	bootstrap/cache/compiled.php	/^    public function previousPageUrl()$/;"	f
previousPageUrl	bootstrap/cache/compiled.php	/^    public function previousPageUrl();$/;"	f
previousText	bootstrap/cache/compiled.php	/^        $previousText = '';$/;"	v
previousUrl	bootstrap/cache/compiled.php	/^    public function previousUrl()$/;"	f
primaryKey	bootstrap/cache/compiled.php	/^        $this->primaryKey = $key;$/;"	v
primaryKey	bootstrap/cache/compiled.php	/^    protected $primaryKey = 'id';$/;"	v
primitives	bootstrap/cache/compiled.php	/^    protected function getDependencies(array $parameters, array $primitives = [])$/;"	v
priority	bootstrap/cache/compiled.php	/^    protected function addClassEvent($view, $class, $prefix, $priority = null)$/;"	v
priority	bootstrap/cache/compiled.php	/^    protected function addEventListener($name, $callback, $priority = null)$/;"	v
priority	bootstrap/cache/compiled.php	/^    protected static function registerModelEvent($event, $callback, $priority = 0)$/;"	v
priority	bootstrap/cache/compiled.php	/^    public function composer($views, $callback, $priority = null)$/;"	v
priority	bootstrap/cache/compiled.php	/^    public function composer($views, $callback, $priority = null);$/;"	v
priority	bootstrap/cache/compiled.php	/^    public function listen($events, $listener, $priority = 0)$/;"	v
priority	bootstrap/cache/compiled.php	/^    public function listen($events, $listener, $priority = 0);$/;"	v
priority	bootstrap/cache/compiled.php	/^    public static function created($callback, $priority = 0)$/;"	v
priority	bootstrap/cache/compiled.php	/^    public static function creating($callback, $priority = 0)$/;"	v
priority	bootstrap/cache/compiled.php	/^    public static function deleted($callback, $priority = 0)$/;"	v
priority	bootstrap/cache/compiled.php	/^    public static function deleting($callback, $priority = 0)$/;"	v
priority	bootstrap/cache/compiled.php	/^    public static function observe($class, $priority = 0)$/;"	v
priority	bootstrap/cache/compiled.php	/^    public static function saved($callback, $priority = 0)$/;"	v
priority	bootstrap/cache/compiled.php	/^    public static function saving($callback, $priority = 0)$/;"	v
priority	bootstrap/cache/compiled.php	/^    public static function updated($callback, $priority = 0)$/;"	v
priority	bootstrap/cache/compiled.php	/^    public static function updating($callback, $priority = 0)$/;"	v
private	package.json	/^  "private": true,$/;"	f
processRecord	bootstrap/cache/compiled.php	/^    protected function processRecord(array $record)$/;"	f
processors	bootstrap/cache/compiled.php	/^        $this->processors = $processors;$/;"	v
processors	bootstrap/cache/compiled.php	/^    protected $processors = array();$/;"	v
processors	bootstrap/cache/compiled.php	/^    protected $processors;$/;"	v
property	bootstrap/cache/compiled.php	/^        $property = $escaped === true ? 'escapedTags' : 'contentTags';$/;"	v
provider	bootstrap/cache/compiled.php	/^            $provider = $this->resolveProviderClass($provider);$/;"	v
provider	bootstrap/cache/compiled.php	/^        $provider = $this->createUserProvider($config['provider']);$/;"	v
provider	bootstrap/cache/compiled.php	/^        $provider = $this->deferredServices[$service];$/;"	v
provider	bootstrap/cache/compiled.php	/^        $this->provider = $provider;$/;"	v
provider	bootstrap/cache/compiled.php	/^        foreach ($manifest['when'] as $provider => $events) {$/;"	v
provider	bootstrap/cache/compiled.php	/^    public function provider($name, Closure $callback)$/;"	f
providers	bootstrap/cache/compiled.php	/^    protected $providers = [];$/;"	v
provides	bootstrap/cache/compiled.php	/^            $provides = array_merge($provides, $instance->provides());$/;"	v
provides	bootstrap/cache/compiled.php	/^        $provides = [];$/;"	v
provides	bootstrap/cache/compiled.php	/^    public function provides()$/;"	f
psr-4	composer.json	/^        "psr-4": {$/;"	f
publicPath	bootstrap/cache/compiled.php	/^    public function publicPath()$/;"	f
publishGroups	bootstrap/cache/compiled.php	/^    protected static $publishGroups = [];$/;"	v
publishes	bootstrap/cache/compiled.php	/^    protected function publishes(array $paths, $group = null)$/;"	f
publishes	bootstrap/cache/compiled.php	/^    protected static $publishes = [];$/;"	v
pull	bootstrap/cache/compiled.php	/^    public function pull($key, $default = null)$/;"	f
pull	bootstrap/cache/compiled.php	/^    public static function pull(&$array, $key, $default = null)$/;"	f
purge	bootstrap/cache/compiled.php	/^    public function purge($name = null)$/;"	f
push	bootstrap/cache/compiled.php	/^    public function push($event, $payload = [])$/;"	f
push	bootstrap/cache/compiled.php	/^    public function push($event, $payload = []);$/;"	f
push	bootstrap/cache/compiled.php	/^    public function push($key, $value)$/;"	f
push	bootstrap/cache/compiled.php	/^    public function push($key, $value);$/;"	f
push	bootstrap/cache/compiled.php	/^    public function push($value)$/;"	f
push	bootstrap/cache/compiled.php	/^    public function push()$/;"	f
pushCommandToQueue	bootstrap/cache/compiled.php	/^    protected function pushCommandToQueue($queue, $command)$/;"	f
pushHandler	bootstrap/cache/compiled.php	/^    public function pushHandler(HandlerInterface $handler)$/;"	f
pushMiddleware	bootstrap/cache/compiled.php	/^    public function pushMiddleware($middleware)$/;"	f
pushMiddlewareToGroup	bootstrap/cache/compiled.php	/^    public function pushMiddlewareToGroup($group, $middleware)$/;"	f
pushProcessor	bootstrap/cache/compiled.php	/^    public function pushProcessor($callback)$/;"	f
pushProcessor	bootstrap/cache/compiled.php	/^    public function pushProcessor($callback);$/;"	f
pushStack	bootstrap/cache/compiled.php	/^        $this->pushStack = [];$/;"	v
pushStack	bootstrap/cache/compiled.php	/^    protected $pushStack = [];$/;"	v
pushes	bootstrap/cache/compiled.php	/^        $this->pushes = [];$/;"	v
pushes	bootstrap/cache/compiled.php	/^    protected $pushes = [];$/;"	v
put	bootstrap/cache/compiled.php	/^    public function put($key, $value = null)$/;"	f
put	bootstrap/cache/compiled.php	/^    public function put($key, $value)$/;"	f
put	bootstrap/cache/compiled.php	/^    public function put($key, MessageBagContract $bag)$/;"	f
put	bootstrap/cache/compiled.php	/^    public function put($path, $contents, $lock = false)$/;"	f
put	bootstrap/cache/compiled.php	/^    public function put($uri, $action = null)$/;"	f
put	bootstrap/cache/compiled.php	/^    public function put($uri, $action);$/;"	f
qA	bootstrap/cache/compiled.php	/^                $qA = $a->getQuality();$/;"	v
qB	bootstrap/cache/compiled.php	/^                $qB = $b->getQuality();$/;"	v
qs	bootstrap/cache/compiled.php	/^            $qs = '?' . $qs;$/;"	v
qs	bootstrap/cache/compiled.php	/^        $qs = static::normalizeQueryString($this->server->get('QUERY_STRING'));$/;"	v
quality	bootstrap/cache/compiled.php	/^            $this->quality = (double) $value;$/;"	v
quality	bootstrap/cache/compiled.php	/^        $this->quality = $quality;$/;"	v
quality	bootstrap/cache/compiled.php	/^    private $quality = 1.0;$/;"	v
query	bootstrap/cache/compiled.php	/^                $query = $parameters;$/;"	v
query	bootstrap/cache/compiled.php	/^                $query = $qs;$/;"	v
query	bootstrap/cache/compiled.php	/^                $query = array();$/;"	v
query	bootstrap/cache/compiled.php	/^                $query = array_replace($qs, $query);$/;"	v
query	bootstrap/cache/compiled.php	/^            $query = '';$/;"	v
query	bootstrap/cache/compiled.php	/^            $query = mb_substr($path, $queryPosition);$/;"	v
query	bootstrap/cache/compiled.php	/^        $query = $instance->newQuery();$/;"	v
query	bootstrap/cache/compiled.php	/^        $query = $this->createModel()->newQuery();$/;"	v
query	bootstrap/cache/compiled.php	/^        $query = $this->getQueryString();$/;"	v
query	bootstrap/cache/compiled.php	/^        $query = $this->newQuery()->with($relations);$/;"	v
query	bootstrap/cache/compiled.php	/^        $query = $this->newQuery();$/;"	v
query	bootstrap/cache/compiled.php	/^        $query = $this->newQueryWithoutScopes();$/;"	v
query	bootstrap/cache/compiled.php	/^        $query = http_build_query($keyed = $this->getStringParameters($parameters));$/;"	v
query	bootstrap/cache/compiled.php	/^        $this->query = clone $this->query;$/;"	v
query	bootstrap/cache/compiled.php	/^        $this->query = new ParameterBag($query);$/;"	v
query	bootstrap/cache/compiled.php	/^    private static function createRequestFromFactory(array $query = array(), array $request = array(), array $attributes = array(), array $cookies = array(), array $files = array(), array $server = array(), $content = null)$/;"	v
query	bootstrap/cache/compiled.php	/^    protected $query = [];$/;"	v
query	bootstrap/cache/compiled.php	/^    public $query;$/;"	v
query	bootstrap/cache/compiled.php	/^    public function __construct(array $query = array(), array $request = array(), array $attributes = array(), array $cookies = array(), array $files = array(), array $server = array(), $content = null)$/;"	v
query	bootstrap/cache/compiled.php	/^    public function duplicate(array $query = null, array $request = null, array $attributes = null, array $cookies = null, array $files = null, array $server = null)$/;"	v
query	bootstrap/cache/compiled.php	/^    public function initialize(array $query = array(), array $request = array(), array $attributes = array(), array $cookies = array(), array $files = array(), array $server = array(), $content = null)$/;"	v
query	bootstrap/cache/compiled.php	/^    public function query($key = null, $default = null)$/;"	f
query	bootstrap/cache/compiled.php	/^    public static function query()$/;"	f
queryString	bootstrap/cache/compiled.php	/^                $queryString = $components['query'];$/;"	v
queryString	bootstrap/cache/compiled.php	/^                $queryString = http_build_query($query, '', '&');$/;"	v
queryString	bootstrap/cache/compiled.php	/^            $queryString = http_build_query($query, '', '&');$/;"	v
queryString	bootstrap/cache/compiled.php	/^        $queryString = '';$/;"	v
question	bootstrap/cache/compiled.php	/^        $question = $this->getBaseUrl() . $this->getPathInfo() == '\/' ? '\/?' : '?';$/;"	v
queue	bootstrap/cache/compiled.php	/^            $queue = method_exists($event, 'onQueue') ? $event->onQueue() : null;$/;"	v
queue	bootstrap/cache/compiled.php	/^        $queue = call_user_func($this->queueResolver, $connection);$/;"	v
queue	bootstrap/cache/compiled.php	/^    public function queue()$/;"	f
queue	bootstrap/cache/compiled.php	/^    public function queue();$/;"	f
queueRecallerCookie	bootstrap/cache/compiled.php	/^    protected function queueRecallerCookie(AuthenticatableContract $user)$/;"	f
queueResolver	bootstrap/cache/compiled.php	/^        $this->queueResolver = $queueResolver;$/;"	v
queueResolver	bootstrap/cache/compiled.php	/^        $this->queueResolver = $resolver;$/;"	v
queueResolver	bootstrap/cache/compiled.php	/^    protected $queueResolver;$/;"	v
queueResolver	bootstrap/cache/compiled.php	/^    public function __construct(Container $container, Closure $queueResolver = null)$/;"	v
queued	bootstrap/cache/compiled.php	/^    protected $queued = [];$/;"	v
queued	bootstrap/cache/compiled.php	/^    public function queued($key, $default = null)$/;"	f
quickRandom	bootstrap/cache/compiled.php	/^    public static function quickRandom($length = 16)$/;"	f
quoted	bootstrap/cache/compiled.php	/^        $quoted = preg_quote($cap, '\/');$/;"	v
ramsey/uuid	composer.json	/^        "ramsey\/uuid": "~2.8",$/;"	f
random	bootstrap/cache/compiled.php	/^    public function random($amount = 1)$/;"	f
random	bootstrap/cache/compiled.php	/^    public static function random($length = 16)$/;"	f
randomBytes	bootstrap/cache/compiled.php	/^    public static function randomBytes($length = 16)$/;"	f
raw	bootstrap/cache/compiled.php	/^    protected function raw($ability, $arguments = [])$/;"	f
rawTags	bootstrap/cache/compiled.php	/^        $this->rawTags = [preg_quote($openTag), preg_quote($closeTag)];$/;"	v
rawTags	bootstrap/cache/compiled.php	/^    protected $rawTags = ['{!!', '!!}'];$/;"	v
reRegister	bootstrap/cache/compiled.php	/^    private function reRegister($prev)$/;"	f
readConfig	bootstrap/cache/compiled.php	/^        $readConfig = $this->getReadConfig($config);$/;"	v
readConfig	bootstrap/cache/compiled.php	/^        $readConfig = $this->getReadWriteConfig($config, 'read');$/;"	v
readFromHandler	bootstrap/cache/compiled.php	/^    protected function readFromHandler()$/;"	f
rebinding	bootstrap/cache/compiled.php	/^    public function rebinding($abstract, Closure $callback)$/;"	f
rebound	bootstrap/cache/compiled.php	/^    protected function rebound($abstract)$/;"	f
reboundCallbacks	bootstrap/cache/compiled.php	/^    protected $reboundCallbacks = [];$/;"	v
recaller	bootstrap/cache/compiled.php	/^            $recaller = $this->getRecallerName();$/;"	v
recaller	bootstrap/cache/compiled.php	/^        $recaller = $this->getRecaller();$/;"	v
recaptcha/php5	composer.json	/^        "recaptcha\/php5": "^2.0"$/;"	f
reconnect	bootstrap/cache/compiled.php	/^    public function reconnect($name = null)$/;"	f
record	bootstrap/cache/compiled.php	/^                $record = call_user_func($processor, $record);$/;"	v
record	bootstrap/cache/compiled.php	/^            $record = call_user_func($processor, $record);$/;"	v
record	bootstrap/cache/compiled.php	/^        $record = $this->processRecord($record);$/;"	v
record	bootstrap/cache/compiled.php	/^        $record = array('level' => $level);$/;"	v
record	bootstrap/cache/compiled.php	/^        $record = array('message' => (string) $message, 'context' => $context, 'level' => $level, 'level_name' => $levelName, 'channel' => $this->name, 'datetime' => $ts, 'extra' => array());$/;"	v
redirect	bootstrap/cache/compiled.php	/^    protected $redirect;$/;"	v
redirectAction	bootstrap/cache/compiled.php	/^    protected $redirectAction;$/;"	v
redirectGuest	bootstrap/cache/compiled.php	/^    public function redirectGuest($path, $status = 302, $headers = [], $secure = null);$/;"	f
redirectPath	bootstrap/cache/compiled.php	/^    public function redirectPath()$/;"	f
redirectRoute	bootstrap/cache/compiled.php	/^    protected $redirectRoute;$/;"	v
redirectTo	app/Http/Controllers/Auth/PasswordController.php	/^    protected $redirectTo = '\/dashboard';$/;"	v
redirectTo	bootstrap/cache/compiled.php	/^    public function redirectTo($path, $status = 302, $headers = [], $secure = null);$/;"	f
redirectToAction	bootstrap/cache/compiled.php	/^    public function redirectToAction($action, $parameters = [], $status = 302, $headers = []);$/;"	f
redirectToIntended	bootstrap/cache/compiled.php	/^    public function redirectToIntended($default = '\/', $status = 302, $headers = [], $secure = null);$/;"	f
redirectToRoute	bootstrap/cache/compiled.php	/^    public function redirectToRoute($route, $parameters = [], $status = 302, $headers = []);$/;"	f
redirectUri	app/Http/Controllers/OAuthController.php	/^            $redirectUri = $this->authorizer->authCodeRequestDeniedRedirectUri();$/;"	v
redirectUri	app/Http/Controllers/OAuthController.php	/^            $redirectUri = $this->authorizer->issueAuthCode('user', $params['user_id'], $params);$/;"	v
redirectUri	app/Http/Controllers/OAuthController.php	/^        $redirectUri = '';$/;"	v
redirector	bootstrap/cache/compiled.php	/^            $redirector = new Redirector($app['url']);$/;"	v
redirector	bootstrap/cache/compiled.php	/^        $this->redirector = $redirector;$/;"	v
redirector	bootstrap/cache/compiled.php	/^    protected $redirector;$/;"	v
reduce	bootstrap/cache/compiled.php	/^    public function reduce(callable $callback, $initial = null)$/;"	f
referrer	bootstrap/cache/compiled.php	/^        $referrer = $this->request->headers->get('referer');$/;"	v
reflash	bootstrap/cache/compiled.php	/^    public function reflash()$/;"	f
reflection	bootstrap/cache/compiled.php	/^        $reflection = new ReflectionClass($controller);$/;"	v
reflector	bootstrap/cache/compiled.php	/^        $reflector = new ReflectionClass($concrete);$/;"	v
refresh	bootstrap/cache/compiled.php	/^    public function refresh($abstract, $target, $method)$/;"	f
refreshNameLookups	bootstrap/cache/compiled.php	/^    public function refreshNameLookups()$/;"	f
refreshPdoConnections	bootstrap/cache/compiled.php	/^    protected function refreshPdoConnections($name)$/;"	f
refreshRememberToken	bootstrap/cache/compiled.php	/^    protected function refreshRememberToken(AuthenticatableContract $user)$/;"	f
regenerate	bootstrap/cache/compiled.php	/^    public function regenerate($destroy = false)$/;"	f
regenerateToken	bootstrap/cache/compiled.php	/^    public function regenerateToken()$/;"	f
regex	bootstrap/cache/compiled.php	/^            $regex = (string) substr($regex, 1);$/;"	v
regex	bootstrap/cache/compiled.php	/^            $regex = substr($regex, 0, -1);$/;"	v
regex	bootstrap/cache/compiled.php	/^        $regex = $result['regex'];$/;"	v
regex	bootstrap/cache/compiled.php	/^        $regex = '';$/;"	v
regex	bootstrap/cache/compiled.php	/^        $this->regex = $data['path_regex'];$/;"	v
regex	bootstrap/cache/compiled.php	/^        $this->regex = $regex;$/;"	v
regex	bootstrap/cache/compiled.php	/^    private $regex;$/;"	v
regexp	bootstrap/cache/compiled.php	/^                    $regexp = "(?:{$regexp}";$/;"	v
regexp	bootstrap/cache/compiled.php	/^                $regexp = sprintf('%s(?P<%s>%s)', preg_quote($token[1], self::REGEX_DELIMITER), $token[3], $token[2]);$/;"	v
regexp	bootstrap/cache/compiled.php	/^                $regexp = sprintf('[^%s%s]+', preg_quote($defaultSeparator, self::REGEX_DELIMITER), $defaultSeparator !== $nextSeparator && '' !== $nextSeparator ? preg_quote($nextSeparator, self::REGEX_DELIMITER) : '');$/;"	v
regexp	bootstrap/cache/compiled.php	/^            $regexp = $route->getRequirement($varName);$/;"	v
regexp	bootstrap/cache/compiled.php	/^        $regexp = '';$/;"	v
register	app/Providers/AppServiceProvider.php	/^    public function register()$/;"	f
register	app/Providers/BusServiceProvider.php	/^    public function register()$/;"	f
register	app/Providers/CaptchaServiceProvider.php	/^    public function register()$/;"	f
register	app/Providers/ConfigServiceProvider.php	/^    public function register()$/;"	f
register	app/Providers/OAuthGuardServiceProvider.php	/^    public function register()$/;"	f
register	bootstrap/cache/compiled.php	/^    public abstract function register();$/;"	f
register	bootstrap/cache/compiled.php	/^    public function register($engine, Closure $resolver)$/;"	f
register	bootstrap/cache/compiled.php	/^    public function register($provider, $options = [], $force = false)$/;"	f
register	bootstrap/cache/compiled.php	/^    public function register($provider, $options = [], $force = false);$/;"	f
register	bootstrap/cache/compiled.php	/^    public function register()$/;"	f
register	bootstrap/cache/compiled.php	/^    public function register(Request $request)$/;"	f
register	bootstrap/cache/compiled.php	/^    public static function register($debug = true, $charset = null, $fileLinkFormat = null)$/;"	f
register	bootstrap/cache/compiled.php	/^    public static function register(self $handler = null, $replace = true)$/;"	f
registerAccessGate	bootstrap/cache/compiled.php	/^    protected function registerAccessGate()$/;"	f
registerAuthenticator	bootstrap/cache/compiled.php	/^    protected function registerAuthenticator()$/;"	f
registerBag	bootstrap/cache/compiled.php	/^    public function registerBag(SessionBagInterface $bag)$/;"	f
registerBag	bootstrap/cache/compiled.php	/^    public function registerBag(SessionBagInterface $bag);$/;"	f
registerBaseBindings	bootstrap/cache/compiled.php	/^    protected function registerBaseBindings()$/;"	f
registerBaseServiceProviders	bootstrap/cache/compiled.php	/^    protected function registerBaseServiceProviders()$/;"	f
registerBladeEngine	bootstrap/cache/compiled.php	/^    public function registerBladeEngine($resolver)$/;"	f
registerConfiguredProviders	bootstrap/cache/compiled.php	/^    public function registerConfiguredProviders()$/;"	f
registerConfiguredProviders	bootstrap/cache/compiled.php	/^    public function registerConfiguredProviders();$/;"	f
registerCoreContainerAliases	bootstrap/cache/compiled.php	/^    public function registerCoreContainerAliases()$/;"	f
registerDeferredProvider	bootstrap/cache/compiled.php	/^    public function registerDeferredProvider($provider, $service = null)$/;"	f
registerDeferredProvider	bootstrap/cache/compiled.php	/^    public function registerDeferredProvider($provider, $service = null);$/;"	f
registerEloquentFactory	bootstrap/cache/compiled.php	/^    protected function registerEloquentFactory()$/;"	f
registerEngineResolver	bootstrap/cache/compiled.php	/^    public function registerEngineResolver()$/;"	f
registerFactory	bootstrap/cache/compiled.php	/^    public function registerFactory()$/;"	f
registerFlysystem	bootstrap/cache/compiled.php	/^    protected function registerFlysystem()$/;"	f
registerInspected	bootstrap/cache/compiled.php	/^    protected function registerInspected($route, $controller, $method, &$names)$/;"	f
registerLoadEvents	bootstrap/cache/compiled.php	/^    protected function registerLoadEvents($provider, array $events)$/;"	f
registerLogger	bootstrap/cache/compiled.php	/^    protected function registerLogger(Application $app)$/;"	f
registerManager	bootstrap/cache/compiled.php	/^    protected function registerManager()$/;"	f
registerModelEvent	bootstrap/cache/compiled.php	/^    protected static function registerModelEvent($event, $callback, $priority = 0)$/;"	f
registerNativeFilesystem	bootstrap/cache/compiled.php	/^    protected function registerNativeFilesystem()$/;"	f
registerPhpEngine	bootstrap/cache/compiled.php	/^    public function registerPhpEngine($resolver)$/;"	f
registerPolicies	bootstrap/cache/compiled.php	/^    public function registerPolicies(GateContract $gate)$/;"	f
registerPresenceVerifier	bootstrap/cache/compiled.php	/^    protected function registerPresenceVerifier()$/;"	f
registerPsrRequest	bootstrap/cache/compiled.php	/^    protected function registerPsrRequest()$/;"	f
registerPsrResponse	bootstrap/cache/compiled.php	/^    protected function registerPsrResponse()$/;"	f
registerQueueableEntityResolver	bootstrap/cache/compiled.php	/^    protected function registerQueueableEntityResolver()$/;"	f
registerRedirector	bootstrap/cache/compiled.php	/^    protected function registerRedirector()$/;"	f
registerRequestRebindHandler	bootstrap/cache/compiled.php	/^    protected function registerRequestRebindHandler()$/;"	f
registerResponseFactory	bootstrap/cache/compiled.php	/^    protected function registerResponseFactory()$/;"	f
registerRouter	bootstrap/cache/compiled.php	/^    protected function registerRouter()$/;"	f
registerSessionDriver	bootstrap/cache/compiled.php	/^    protected function registerSessionDriver()$/;"	f
registerSessionManager	bootstrap/cache/compiled.php	/^    protected function registerSessionManager()$/;"	f
registerUrlGenerator	bootstrap/cache/compiled.php	/^    protected function registerUrlGenerator()$/;"	f
registerUserResolver	bootstrap/cache/compiled.php	/^    protected function registerUserResolver()$/;"	f
registerValidationFactory	bootstrap/cache/compiled.php	/^    protected function registerValidationFactory()$/;"	f
registerViewFinder	bootstrap/cache/compiled.php	/^    public function registerViewFinder()$/;"	f
registered	bootstrap/cache/compiled.php	/^            $registered = array_merge($registered, $this->composer($views, $callback));$/;"	v
registered	bootstrap/cache/compiled.php	/^            $this->registered = true;$/;"	v
registered	bootstrap/cache/compiled.php	/^        $registered = [];$/;"	v
registered	bootstrap/cache/compiled.php	/^        $this->registered = $value;$/;"	v
registered	bootstrap/cache/compiled.php	/^    protected $registered = false;$/;"	v
registrar	bootstrap/cache/compiled.php	/^            $registrar = $this->container->make('Illuminate\\\\Routing\\\\ResourceRegistrar');$/;"	v
registrar	bootstrap/cache/compiled.php	/^            $registrar = new ResourceRegistrar($this);$/;"	v
reguard	bootstrap/cache/compiled.php	/^    public static function reguard()$/;"	f
reject	bootstrap/cache/compiled.php	/^    public function reject($callback)$/;"	f
related	bootstrap/cache/compiled.php	/^        $related = Str::snake(class_basename($related));$/;"	v
relation	bootstrap/cache/compiled.php	/^                $relation = $value->toArray();$/;"	v
relation	bootstrap/cache/compiled.php	/^                $relation = $value;$/;"	v
relation	bootstrap/cache/compiled.php	/^            $relation = $caller['function'];$/;"	v
relation	bootstrap/cache/compiled.php	/^            $relation = $this->getBelongsToManyCaller();$/;"	v
relationLoaded	bootstrap/cache/compiled.php	/^    public function relationLoaded($key)$/;"	f
relations	bootstrap/cache/compiled.php	/^            $relations = func_get_args();$/;"	v
relations	bootstrap/cache/compiled.php	/^        $relations = $this->{$method}();$/;"	v
relations	bootstrap/cache/compiled.php	/^        $this->relations = $relations;$/;"	v
relations	bootstrap/cache/compiled.php	/^    protected $relations = [];$/;"	v
relationsToArray	bootstrap/cache/compiled.php	/^    public function relationsToArray()$/;"	f
relativePath	bootstrap/cache/compiled.php	/^        $this->relativePath = $relativePath;$/;"	v
relativePath	bootstrap/cache/compiled.php	/^    private $relativePath;$/;"	v
relativePathname	bootstrap/cache/compiled.php	/^        $this->relativePathname = $relativePathname;$/;"	v
relativePathname	bootstrap/cache/compiled.php	/^    private $relativePathname;$/;"	v
remember	bootstrap/cache/compiled.php	/^    protected function fireLoginEvent($user, $remember = false)$/;"	v
remember	bootstrap/cache/compiled.php	/^    public function login(Authenticatable $user, $remember = false);$/;"	v
remember	bootstrap/cache/compiled.php	/^    public function login(AuthenticatableContract $user, $remember = false)$/;"	v
remember	bootstrap/cache/compiled.php	/^    public function loginUsingId($id, $remember = false)$/;"	v
remember	bootstrap/cache/compiled.php	/^    public function loginUsingId($id, $remember = false);$/;"	v
remove	bootstrap/cache/compiled.php	/^    public function remove($key)$/;"	f
remove	bootstrap/cache/compiled.php	/^    public function remove($name)$/;"	f
remove	bootstrap/cache/compiled.php	/^    public function remove($name);$/;"	f
removeCacheControlDirective	bootstrap/cache/compiled.php	/^    public function removeCacheControlDirective($key)$/;"	f
removeCookie	bootstrap/cache/compiled.php	/^    public function removeCookie($name, $path = '\/', $domain = null)$/;"	f
removeEmptyFields	app/Services/CreateBioForm.php	/^    private function removeEmptyFields($input)$/;"	f
removeEmptyFields	app/Services/CreateConferenceForm.php	/^    private function removeEmptyFields($input)$/;"	f
removeFromOldFlashData	bootstrap/cache/compiled.php	/^    protected function removeFromOldFlashData(array $keys)$/;"	f
removeIndex	bootstrap/cache/compiled.php	/^    protected function removeIndex($root)$/;"	f
removeObservableEvents	bootstrap/cache/compiled.php	/^    public function removeObservableEvents($observables)$/;"	f
removeTableFromKey	bootstrap/cache/compiled.php	/^    protected function removeTableFromKey($key)$/;"	f
render	app/Exceptions/Handler.php	/^    public function render($request, Exception $e)$/;"	f
render	bootstrap/cache/compiled.php	/^    public function render($request, Exception $e);$/;"	f
render	bootstrap/cache/compiled.php	/^    public function render();$/;"	f
render	bootstrap/cache/compiled.php	/^    public function render(Presenter $presenter = null)$/;"	f
render	bootstrap/cache/compiled.php	/^    public function render(Presenter $presenter = null);$/;"	f
render	bootstrap/cache/compiled.php	/^    public function render(callable $callback = null)$/;"	f
renderContents	bootstrap/cache/compiled.php	/^    protected function renderContents()$/;"	f
renderCount	bootstrap/cache/compiled.php	/^        $this->renderCount = 0;$/;"	v
renderCount	bootstrap/cache/compiled.php	/^        return $this->renderCount == 0;$/;"	v
renderCount	bootstrap/cache/compiled.php	/^    protected $renderCount = 0;$/;"	v
renderEach	bootstrap/cache/compiled.php	/^    public function renderEach($view, $data, $iterator, $empty = 'raw|')$/;"	f
renderException	bootstrap/cache/compiled.php	/^    protected function renderException($request, Exception $e)$/;"	f
renderForConsole	bootstrap/cache/compiled.php	/^    protected function renderForConsole(Exception $e)$/;"	f
renderForConsole	bootstrap/cache/compiled.php	/^    public function renderForConsole($output, Exception $e);$/;"	f
renderHttpResponse	bootstrap/cache/compiled.php	/^    protected function renderHttpResponse(Exception $e)$/;"	f
renderSections	bootstrap/cache/compiled.php	/^    public function renderSections()$/;"	f
replace	bootstrap/cache/compiled.php	/^            $replace = false;$/;"	v
replace	bootstrap/cache/compiled.php	/^        $replace = [':message', ':key'];$/;"	v
replace	bootstrap/cache/compiled.php	/^    public function header($key, $value, $replace = true)$/;"	v
replace	bootstrap/cache/compiled.php	/^    public function replace(array $attributes)$/;"	f
replace	bootstrap/cache/compiled.php	/^    public function replace(array $attributes);$/;"	f
replace	bootstrap/cache/compiled.php	/^    public function replace(array $files = array())$/;"	f
replace	bootstrap/cache/compiled.php	/^    public function replace(array $headers = array())$/;"	f
replace	bootstrap/cache/compiled.php	/^    public function replace(array $input)$/;"	f
replace	bootstrap/cache/compiled.php	/^    public function replace(array $parameters = array())$/;"	f
replace	bootstrap/cache/compiled.php	/^    public function scopeAt($levels, $replace = false)$/;"	v
replace	bootstrap/cache/compiled.php	/^    public function screamAt($levels, $replace = false)$/;"	v
replace	bootstrap/cache/compiled.php	/^    public function set($key, $values, $replace = true)$/;"	v
replace	bootstrap/cache/compiled.php	/^    public function setVary($headers, $replace = true)$/;"	v
replace	bootstrap/cache/compiled.php	/^    public function throwAt($levels, $replace = false)$/;"	v
replace	bootstrap/cache/compiled.php	/^    public function traceAt($levels, $replace = false)$/;"	v
replaceDefaults	bootstrap/cache/compiled.php	/^    protected function replaceDefaults(array $parameters)$/;"	f
replaceFirst	bootstrap/cache/compiled.php	/^    public static function replaceFirst($search, $replace, $subject)$/;"	f
replaceLast	bootstrap/cache/compiled.php	/^    public static function replaceLast($search, $replace, $subject)$/;"	f
replaceNamedParameters	bootstrap/cache/compiled.php	/^    protected function replaceNamedParameters($path, &$parameters)$/;"	f
replaceNewlines	bootstrap/cache/compiled.php	/^    protected function replaceNewlines($str)$/;"	f
replaceRoot	bootstrap/cache/compiled.php	/^    protected function replaceRoot($route, $domain, &$parameters)$/;"	f
replaceRoutableParameters	bootstrap/cache/compiled.php	/^    protected function replaceRoutableParameters($parameters = [])$/;"	f
replaceRouteParameters	bootstrap/cache/compiled.php	/^    protected function replaceRouteParameters($path, array &$parameters)$/;"	f
replicate	bootstrap/cache/compiled.php	/^    public function replicate(array $except = null)$/;"	f
report	app/Exceptions/Handler.php	/^    public function report(Exception $e)$/;"	f
report	bootstrap/cache/compiled.php	/^    public function report(Exception $e);$/;"	f
reportException	bootstrap/cache/compiled.php	/^    protected function reportException(Exception $e)$/;"	f
repositories	composer.json	/^    "repositories": [$/;"	f
request	bootstrap/cache/compiled.php	/^                $request = $parameters;$/;"	v
request	bootstrap/cache/compiled.php	/^                $request = array();$/;"	v
request	bootstrap/cache/compiled.php	/^            $request = call_user_func(self::$requestFactory, $query, $request, $attributes, $cookies, $files, $server, $content);$/;"	v
request	bootstrap/cache/compiled.php	/^        $request = $request ?: app('request');$/;"	v
request	bootstrap/cache/compiled.php	/^        $request = (new static())->duplicate($request->query->all(), $request->request->all(), $request->attributes->all(), $request->cookies->all(), $request->files->all(), $request->server->all());$/;"	v
request	bootstrap/cache/compiled.php	/^        $request = array('g' => $_GET, 'p' => $_POST, 'c' => $_COOKIE);$/;"	v
request	bootstrap/cache/compiled.php	/^        $request = self::createRequestFromFactory($_GET, $_POST, array(), $_COOKIE, $_FILES, $server);$/;"	v
request	bootstrap/cache/compiled.php	/^        $this->request = $request;$/;"	v
request	bootstrap/cache/compiled.php	/^        $this->request = clone $this->request;$/;"	v
request	bootstrap/cache/compiled.php	/^        $this->request = new ParameterBag($request);$/;"	v
request	bootstrap/cache/compiled.php	/^    protected $request;$/;"	v
request	bootstrap/cache/compiled.php	/^    public $request;$/;"	v
request	bootstrap/cache/compiled.php	/^    public function __construct($name, UserProvider $provider, SessionInterface $session, Request $request = null)$/;"	v
request	bootstrap/cache/compiled.php	/^    public function validateWith($validator, Request $request = null)$/;"	v
request	public/index.php	/^	$request = Illuminate\\Http\\Request::capture()$/;"	v
requestFactory	bootstrap/cache/compiled.php	/^    protected static $requestFactory;$/;"	v
requestOrder	bootstrap/cache/compiled.php	/^        $requestOrder = ini_get('request_order') ?: ini_get('variables_order');$/;"	v
requestOrder	bootstrap/cache/compiled.php	/^        $requestOrder = preg_replace('#[^cgp]#', '', strtolower($requestOrder)) ?: 'gp';$/;"	v
requestRebinder	bootstrap/cache/compiled.php	/^    protected function requestRebinder()$/;"	f
requestUri	bootstrap/cache/compiled.php	/^                $requestUri = substr($requestUri, strlen($schemeAndHttpHost));$/;"	v
requestUri	bootstrap/cache/compiled.php	/^            $requestUri = $this->headers->get('X_ORIGINAL_URL');$/;"	v
requestUri	bootstrap/cache/compiled.php	/^            $requestUri = $this->headers->get('X_REWRITE_URL');$/;"	v
requestUri	bootstrap/cache/compiled.php	/^            $requestUri = $this->server->get('ORIG_PATH_INFO');$/;"	v
requestUri	bootstrap/cache/compiled.php	/^            $requestUri = $this->server->get('REQUEST_URI');$/;"	v
requestUri	bootstrap/cache/compiled.php	/^            $requestUri = $this->server->get('UNENCODED_URL');$/;"	v
requestUri	bootstrap/cache/compiled.php	/^            $requestUri = substr($requestUri, 0, $pos);$/;"	v
requestUri	bootstrap/cache/compiled.php	/^            $this->requestUri = $this->prepareRequestUri();$/;"	v
requestUri	bootstrap/cache/compiled.php	/^        $requestUri = $this->getRequestUri();$/;"	v
requestUri	bootstrap/cache/compiled.php	/^        $requestUri = '';$/;"	v
requestUri	bootstrap/cache/compiled.php	/^        $this->requestUri = null;$/;"	v
requestUri	bootstrap/cache/compiled.php	/^    protected $requestUri;$/;"	v
require	composer.json	/^    "require": {$/;"	f
require-dev	composer.json	/^    "require-dev": {$/;"	f
requireOnce	bootstrap/cache/compiled.php	/^    public function requireOnce($file)$/;"	f
required	bootstrap/cache/compiled.php	/^    public function required($variable)$/;"	f
requirements	bootstrap/cache/compiled.php	/^        $this->requirements = $data['requirements'];$/;"	v
requirements	bootstrap/cache/compiled.php	/^        $this->requirements = array();$/;"	v
requirements	bootstrap/cache/compiled.php	/^    private $requirements = array();$/;"	v
reservedMemory	bootstrap/cache/compiled.php	/^    private static $reservedMemory;$/;"	v
reset	bootstrap/cache/compiled.php	/^    public function reset(Request $request)$/;"	f
resetEmailBuilder	bootstrap/cache/compiled.php	/^    protected function resetEmailBuilder()$/;"	f
resetPassword	bootstrap/cache/compiled.php	/^    protected function resetPassword($user, $password)$/;"	f
resolve	bootstrap/cache/compiled.php	/^    protected function resolve($name)$/;"	f
resolve	bootstrap/cache/compiled.php	/^    public function resolve($engine)$/;"	f
resolveAuthCallback	bootstrap/cache/compiled.php	/^    protected function resolveAuthCallback($user, $ability, array $arguments)$/;"	f
resolveClass	bootstrap/cache/compiled.php	/^    protected function resolveClass(ReflectionParameter $parameter)$/;"	f
resolveClassMethodDependencies	bootstrap/cache/compiled.php	/^    protected function resolveClassMethodDependencies(array $parameters, $instance, $method)$/;"	f
resolveConnection	bootstrap/cache/compiled.php	/^    public static function resolveConnection($connection = null)$/;"	f
resolveCurrentPage	bootstrap/cache/compiled.php	/^    public static function resolveCurrentPage($pageName = 'page', $default = 1)$/;"	f
resolveCurrentPath	bootstrap/cache/compiled.php	/^    public static function resolveCurrentPath($default = '\/')$/;"	f
resolveFacadeInstance	bootstrap/cache/compiled.php	/^    protected static function resolveFacadeInstance($name)$/;"	f
resolveMethodDependencies	bootstrap/cache/compiled.php	/^    public function resolveMethodDependencies(array $parameters, ReflectionFunctionAbstract $reflector)$/;"	f
resolveMiddlewareClassName	bootstrap/cache/compiled.php	/^    public function resolveMiddlewareClassName($name)$/;"	f
resolveNonClass	bootstrap/cache/compiled.php	/^    protected function resolveNonClass(ReflectionParameter $parameter)$/;"	f
resolvePolicy	bootstrap/cache/compiled.php	/^    public function resolvePolicy($class)$/;"	f
resolvePolicyCallback	bootstrap/cache/compiled.php	/^    protected function resolvePolicyCallback($user, $ability, array $arguments)$/;"	f
resolveProviderClass	bootstrap/cache/compiled.php	/^    public function resolveProviderClass($provider)$/;"	f
resolveQueue	bootstrap/cache/compiled.php	/^    protected function resolveQueue()$/;"	f
resolveSubscriber	bootstrap/cache/compiled.php	/^    protected function resolveSubscriber($subscriber)$/;"	f
resolveUser	bootstrap/cache/compiled.php	/^    protected function resolveUser()$/;"	f
resolveUsersUsing	bootstrap/cache/compiled.php	/^    public function resolveUsersUsing(Closure $userResolver)$/;"	f
resolved	bootstrap/cache/compiled.php	/^        $this->resolved = [];$/;"	v
resolved	bootstrap/cache/compiled.php	/^    protected $resolved = [];$/;"	v
resolved	bootstrap/cache/compiled.php	/^    public function resolved($abstract)$/;"	f
resolved	bootstrap/cache/compiled.php	/^    public function resolved($abstract);$/;"	f
resolvedDirs	bootstrap/cache/compiled.php	/^                $resolvedDirs = array_merge($resolvedDirs, $glob);$/;"	v
resolvedDirs	bootstrap/cache/compiled.php	/^        $resolvedDirs = array();$/;"	v
resolvedInstance	bootstrap/cache/compiled.php	/^    protected static $resolvedInstance;$/;"	v
resolver	bootstrap/cache/compiled.php	/^            $resolver = $app['view.engine.resolver'];$/;"	v
resolver	bootstrap/cache/compiled.php	/^            $resolver = new EngineResolver();$/;"	v
resolver	bootstrap/cache/compiled.php	/^    protected static $resolver;$/;"	v
resolver	bootstrap/cache/compiled.php	/^    public function addExtension($extension, $engine, $resolver = null)$/;"	v
resolvers	bootstrap/cache/compiled.php	/^    protected $resolvers = [];$/;"	v
resolving	bootstrap/cache/compiled.php	/^    public function resolving($abstract, Closure $callback = null)$/;"	f
resolving	bootstrap/cache/compiled.php	/^    public function resolving($abstract, Closure $callback = null);$/;"	f
resolvingCallback	bootstrap/cache/compiled.php	/^    protected function resolvingCallback(Closure $callback)$/;"	f
resolvingCallbacks	bootstrap/cache/compiled.php	/^    protected $resolvingCallbacks = [];$/;"	v
resource	bootstrap/cache/compiled.php	/^                $resource = fopen('php:\/\/temp', 'r+');$/;"	v
resource	bootstrap/cache/compiled.php	/^    public function resource($name, $controller, array $options = [])$/;"	f
resource	bootstrap/cache/compiled.php	/^    public function resource($name, $controller, array $options = []);$/;"	f
resourceParameters	bootstrap/cache/compiled.php	/^    public function resourceParameters(array $parameters = [])$/;"	f
resources	bootstrap/cache/compiled.php	/^    public function resources(array $resources)$/;"	f
response	app/macros.php	/^    $response = Response::json($value);$/;"	v
response	bootstrap/cache/compiled.php	/^            $response = $this->renderException($request, $e);$/;"	v
response	bootstrap/cache/compiled.php	/^            $response = $this->sendRequestThroughRouter($request);$/;"	v
response	bootstrap/cache/compiled.php	/^            $response = (new HttpFoundationFactory())->createResponse($response);$/;"	v
response	bootstrap/cache/compiled.php	/^            $response = call_user_func_array($listener, $payload);$/;"	v
response	bootstrap/cache/compiled.php	/^            $response = isset($callback) ? call_user_func($callback, $this, $contents) : null;$/;"	v
response	bootstrap/cache/compiled.php	/^            $response = new Response($response);$/;"	v
response	bootstrap/cache/compiled.php	/^        $response = $next($request);$/;"	v
response	bootstrap/cache/compiled.php	/^        $response = $this->dispatchToRoute($request);$/;"	v
response	bootstrap/cache/compiled.php	/^        $response = $this->runRouteWithinStack($route, $request);$/;"	v
response	bootstrap/cache/compiled.php	/^        $response = Password::broker($broker)->reset($credentials, function ($user, $password) {$/;"	v
response	bootstrap/cache/compiled.php	/^        $response = Password::broker($broker)->sendResetLink($request->only('email'), $this->resetEmailBuilder());$/;"	v
response	bootstrap/cache/compiled.php	/^    public function response(array $errors)$/;"	f
response	public/index.php	/^$response = $kernel->handle($/;"	v
response	tests/Api/BioApiTest.php	/^        $response = $this->call('GET', 'api\/bios\/' . $bioId);$/;"	v
response	tests/Api/BioApiTest.php	/^        $response = $this->call('GET', 'api\/user\/1\/bios');$/;"	v
response	tests/Api/BioApiTest.php	/^        $response = $this->call('GET', 'api\/user\/2\/bios');$/;"	v
response	tests/Api/BioApiTest.php	/^    \/\/     $response = $this->call('GET', 'api\/user\/1\/bios');$/;"	v
response	tests/Api/ConferenceApiTest.php	/^        $response = $this->call('GET', 'api\/conferences');$/;"	v
response	tests/Api/ConferenceApiTest.php	/^        $response = $this->call('GET', 'api\/conferences\/' . $conference->id);$/;"	v
response	tests/Api/ConferenceApiTest.php	/^        $response = $this->call('GET', 'api\/conferences\/' . $conferenceId);$/;"	v
response	tests/Api/JsonApiTest.php	/^        $response = $this->call('GET', '\/api\/user\/1\/talks');$/;"	v
response	tests/Api/MeApiTest.php	/^        $response = $this->call('GET', 'api\/me');$/;"	v
response	tests/Api/OAuthTest.php	/^        $response = $this->call('GET', 'api\/me');$/;"	v
response	tests/Api/TalkApiTest.php	/^        $response = $this->call('GET', 'api\/talks\/' . $talkId);$/;"	v
response	tests/Api/TalkApiTest.php	/^        $response = $this->call('GET', 'api\/user\/1\/talks');$/;"	v
response	tests/Api/TalkApiTest.php	/^        $response = $this->call('GET', 'api\/user\/2\/talks');$/;"	v
responses	bootstrap/cache/compiled.php	/^        $responses = [];$/;"	v
restoreVerbatimBlocks	bootstrap/cache/compiled.php	/^    protected function restoreVerbatimBlocks($result)$/;"	f
result	bootstrap/cache/compiled.php	/^                    $result = array_merge($result, $item);$/;"	v
result	bootstrap/cache/compiled.php	/^                $result = $this->make($empty)->render();$/;"	v
result	bootstrap/cache/compiled.php	/^                $result = array_merge($result, static::flatten($item, $depth - 1));$/;"	v
result	bootstrap/cache/compiled.php	/^                $result = call_user_func_array([$instance, 'before'], $beforeArguments);$/;"	v
result	bootstrap/cache/compiled.php	/^                $result = substr($empty, 4);$/;"	v
result	bootstrap/cache/compiled.php	/^            $result = $this->callAuthCallback($user, $ability, $arguments);$/;"	v
result	bootstrap/cache/compiled.php	/^            $result = $this->raw($ability, $arguments);$/;"	v
result	bootstrap/cache/compiled.php	/^            $result = $this->restoreVerbatimBlocks($result);$/;"	v
result	bootstrap/cache/compiled.php	/^            $result = ltrim($result, PHP_EOL) . PHP_EOL . implode(PHP_EOL, array_reverse($this->footer));$/;"	v
result	bootstrap/cache/compiled.php	/^            $result = self::compilePattern($route, $host, true);$/;"	v
result	bootstrap/cache/compiled.php	/^        $result = $this->raw($ability, $arguments);$/;"	v
result	bootstrap/cache/compiled.php	/^        $result = '';$/;"	v
result	bootstrap/cache/compiled.php	/^        $result = [];$/;"	v
result	bootstrap/cache/compiled.php	/^        $result = array();$/;"	v
result	bootstrap/cache/compiled.php	/^        $result = preg_replace_callback('\/' . preg_quote($this->verbatimPlaceholder) . '\/', function () {$/;"	v
result	bootstrap/cache/compiled.php	/^        $result = self::compilePattern($route, $path, false);$/;"	v
results	bootstrap/cache/compiled.php	/^                $results = array_merge($results, $callbacks);$/;"	v
results	bootstrap/cache/compiled.php	/^                $results = array_merge($results, $this->parseMiddlewareGroup($middleware));$/;"	v
results	bootstrap/cache/compiled.php	/^                $results = array_merge($results, static::dot($value, $prepend . $key . '.'));$/;"	v
results	bootstrap/cache/compiled.php	/^            $results = array_merge($results, $values);$/;"	v
results	bootstrap/cache/compiled.php	/^        $results = $this->all();$/;"	v
results	bootstrap/cache/compiled.php	/^        $results = $this->evaluatePath($compiled, $data);$/;"	v
results	bootstrap/cache/compiled.php	/^        $results = [];$/;"	v
results	bootstrap/cache/compiled.php	/^        $results = new Collection();$/;"	v
results	bootstrap/cache/compiled.php	/^        $this->setRelation($method, $results = $relations->getResults());$/;"	v
ret	bootstrap/cache/compiled.php	/^            $ret = array_merge($ret, preg_split('\/[\\\\s,]+\/', $item));$/;"	v
ret	bootstrap/cache/compiled.php	/^        $ret = array();$/;"	v
retrieveByCredentials	bootstrap/cache/compiled.php	/^    public function retrieveByCredentials(array $credentials)$/;"	f
retrieveByCredentials	bootstrap/cache/compiled.php	/^    public function retrieveByCredentials(array $credentials);$/;"	f
retrieveById	bootstrap/cache/compiled.php	/^    public function retrieveById($identifier)$/;"	f
retrieveById	bootstrap/cache/compiled.php	/^    public function retrieveById($identifier);$/;"	f
retrieveByToken	bootstrap/cache/compiled.php	/^    public function retrieveByToken($identifier, $token)$/;"	f
retrieveByToken	bootstrap/cache/compiled.php	/^    public function retrieveByToken($identifier, $token);$/;"	f
retrieveItem	bootstrap/cache/compiled.php	/^    protected function retrieveItem($source, $key, $default)$/;"	f
return	app/Http/Controllers/Api/UserBiosController.php	/^        $return = OAuthGuard::user()->bios->map(function ($bio) {$/;"	v
return	app/Http/Controllers/Api/UserTalksController.php	/^        $return = OAuthGuard::user()->talks->map(function ($talk) {$/;"	v
return	app/models/Conference.php	/^        $return = $hasOpenCfp$/;"	v
return	bootstrap/cache/compiled.php	/^            $return = [];$/;"	v
return	bootstrap/cache/compiled.php	/^        $return = $this->attributes;$/;"	v
retval	bootstrap/cache/compiled.php	/^            $retval = $this->attributes[$name];$/;"	v
retval	bootstrap/cache/compiled.php	/^        $retval = null;$/;"	v
reverse	bootstrap/cache/compiled.php	/^    public function reverse()$/;"	f
revision	app/Http/Controllers/TalksController.php	/^            $revision = new TalkRevision;$/;"	v
revision	tests/SubmissionTest.php	/^        $revision = Factory::create('talkRevision');$/;"	v
revision	tests/SubmissionTest.php	/^        $revision = Factory::create('talkRevision', [$/;"	v
revision	tests/TalkTest.php	/^        $revision = Factory::create('talkRevision');$/;"	v
revision1	tests/TalkTest.php	/^        $revision1 = Factory::create('talkRevision', [$/;"	v
revision2	tests/SubmissionTest.php	/^        $revision2 = Factory::create('talkRevision');$/;"	v
revision2	tests/TalkTest.php	/^        $revision2 = Factory::create('talkRevision', [$/;"	v
revisionIds	app/Commands/DestroySubmission.php	/^        $revisionIds = Talk::findOrFail($this->talkId)->revisions->pluck('id');$/;"	v
revisions	app/models/Talk.php	/^    public function revisions()$/;"	f
revisions	database/migrations/2015_05_24_113910_drop_versions.php	/^        $revisions = DB::table('talk_revisions')->get();$/;"	v
rewind	bootstrap/cache/compiled.php	/^    public function rewind()$/;"	f
rewindable	bootstrap/cache/compiled.php	/^                return $this->rewindable = true;$/;"	v
rewindable	bootstrap/cache/compiled.php	/^        return $this->rewindable = false;$/;"	v
rewindable	bootstrap/cache/compiled.php	/^    private $rewindable;$/;"	v
rexxars/joindin-client	composer.json	/^        "rexxars\/joindin-client": "dev-master",$/;"	f
role	app/User.php	/^        return $this->role == self::ADMIN_ROLE;$/;"	v
root	bootstrap/cache/compiled.php	/^            $root = $this->cachedRoot;$/;"	v
root	bootstrap/cache/compiled.php	/^        $root = $this->getRootUrl($scheme);$/;"	v
root	bootstrap/cache/compiled.php	/^        $root = $this->getRootUrl($this->getScheme($secure));$/;"	v
root	bootstrap/cache/compiled.php	/^        $root = $this->getRootUrl($this->getScheme($secure), $root);$/;"	v
root	bootstrap/cache/compiled.php	/^    protected function getRootUrl($scheme, $root = null)$/;"	v
root	bootstrap/cache/compiled.php	/^    public function root()$/;"	f
rootNamespace	bootstrap/cache/compiled.php	/^        $this->rootNamespace = $rootNamespace;$/;"	v
rootNamespace	bootstrap/cache/compiled.php	/^    protected $rootNamespace;$/;"	v
rootPath	bootstrap/cache/compiled.php	/^        $this->rootPath = $path;$/;"	v
rootPath	bootstrap/cache/compiled.php	/^    private $rootPath;$/;"	v
rotate	bootstrap/cache/compiled.php	/^    protected function rotate()$/;"	f
rounds	bootstrap/cache/compiled.php	/^        $this->rounds = (int) $rounds;$/;"	v
rounds	bootstrap/cache/compiled.php	/^    protected $rounds = 10;$/;"	v
routable	bootstrap/cache/compiled.php	/^        $routable = (new ControllerInspector())->getRoutable($prepended, $uri);$/;"	v
routable	bootstrap/cache/compiled.php	/^        $routable = [];$/;"	v
route	bootstrap/cache/compiled.php	/^        $route = $this->check($routes, $request);$/;"	v
route	bootstrap/cache/compiled.php	/^        $route = $this->findRoute($request);$/;"	v
route	bootstrap/cache/compiled.php	/^        $route = $this->newRoute($methods, $this->prefix($uri), $action);$/;"	v
route	bootstrap/cache/compiled.php	/^        $route = call_user_func($this->getRouteResolver());$/;"	v
route	bootstrap/cache/compiled.php	/^    public function route($name, $parameters = [], $absolute = true)$/;"	f
route	bootstrap/cache/compiled.php	/^    public function route($name, $parameters = [], $absolute = true);$/;"	f
route	bootstrap/cache/compiled.php	/^    public function route($param = null)$/;"	f
routeMiddleware	app/Http/Kernel.php	/^    protected $routeMiddleware = [$/;"	v
routeMiddleware	bootstrap/cache/compiled.php	/^    protected $routeMiddleware = [];$/;"	v
routeResolver	bootstrap/cache/compiled.php	/^        $this->routeResolver = $callback;$/;"	v
routeResolver	bootstrap/cache/compiled.php	/^    protected $routeResolver;$/;"	v
router	bootstrap/cache/compiled.php	/^        $router = $this->app->make(Router::class);$/;"	v
router	bootstrap/cache/compiled.php	/^        $this->router = $router;$/;"	v
router	bootstrap/cache/compiled.php	/^    protected $router;$/;"	v
router	bootstrap/cache/compiled.php	/^    protected static $router;$/;"	v
routes	bootstrap/cache/compiled.php	/^            $routes = $app['router']->getRoutes();$/;"	v
routes	bootstrap/cache/compiled.php	/^        $routes = $this->get($request->getMethod());$/;"	v
routes	bootstrap/cache/compiled.php	/^        $this->routes = $routes;$/;"	v
routes	bootstrap/cache/compiled.php	/^        $this->routes = new RouteCollection();$/;"	v
routes	bootstrap/cache/compiled.php	/^    protected $routes = [];$/;"	v
routes	bootstrap/cache/compiled.php	/^    protected $routes;$/;"	v
routesAreCached	bootstrap/cache/compiled.php	/^    public function routesAreCached()$/;"	f
rules	app/Http/Controllers/TalksController.php	/^    protected $rules = [$/;"	v
rules	app/Services/CreateBioForm.php	/^    private $rules = [$/;"	v
rules	app/Services/CreateConferenceForm.php	/^    private $rules = [$/;"	v
rules	app/models/Talk.php	/^    public static $rules = [];$/;"	v
rules	app/models/TalkRevision.php	/^    public static $rules = [];$/;"	v
run	bootstrap/cache/compiled.php	/^    public function run(Request $request)$/;"	f
run	database/seeds/BiosSeeder.php	/^    public function run()$/;"	f
run	database/seeds/ConferencesSeeder.php	/^    public function run()$/;"	f
run	database/seeds/DatabaseSeeder.php	/^    public function run()$/;"	f
run	database/seeds/TalksSeeder.php	/^    public function run()$/;"	f
run	database/seeds/UsersSeeder.php	/^    public function run()$/;"	f
runCallable	bootstrap/cache/compiled.php	/^    protected function runCallable(Request $request)$/;"	f
runController	bootstrap/cache/compiled.php	/^    protected function runController(Request $request)$/;"	f
runRouteWithinStack	bootstrap/cache/compiled.php	/^    protected function runRouteWithinStack(Route $route, Request $request)$/;"	f
runningInConsole	bootstrap/cache/compiled.php	/^    public function runningInConsole()$/;"	f
runningUnitTests	bootstrap/cache/compiled.php	/^    protected function runningUnitTests()$/;"	f
runningUnitTests	bootstrap/cache/compiled.php	/^    public function runningUnitTests()$/;"	f
sanitizeRequirement	bootstrap/cache/compiled.php	/^    private function sanitizeRequirement($key, $regex)$/;"	f
save	bootstrap/cache/compiled.php	/^    public function save()$/;"	f
save	bootstrap/cache/compiled.php	/^    public function save();$/;"	f
save	bootstrap/cache/compiled.php	/^    public function save(array $options = [])$/;"	f
saveOrFail	bootstrap/cache/compiled.php	/^    public function saveOrFail(array $options = [])$/;"	f
saved	bootstrap/cache/compiled.php	/^            $saved = $this->performInsert($query, $options);$/;"	v
saved	bootstrap/cache/compiled.php	/^            $saved = $this->performUpdate($query, $options);$/;"	v
saved	bootstrap/cache/compiled.php	/^    public static function saved($callback, $priority = 0)$/;"	f
saving	bootstrap/cache/compiled.php	/^    public static function saving($callback, $priority = 0)$/;"	f
schedule	app/Console/Kernel.php	/^    protected function schedule(Schedule $schedule)$/;"	f
scheme	bootstrap/cache/compiled.php	/^        $scheme = $this->getScheme($secure);$/;"	v
scheme	bootstrap/cache/compiled.php	/^        $scheme = $this->getScheme();$/;"	v
schemeAndHttpHost	bootstrap/cache/compiled.php	/^            $schemeAndHttpHost = $this->getSchemeAndHttpHost();$/;"	v
schemes	bootstrap/cache/compiled.php	/^        $this->schemes = $data['schemes'];$/;"	v
schemes	bootstrap/cache/compiled.php	/^        $this->schemes = array_map('strtolower', (array) $schemes);$/;"	v
schemes	bootstrap/cache/compiled.php	/^    private $schemes = array();$/;"	v
scopeAt	bootstrap/cache/compiled.php	/^    public function scopeAt($levels, $replace = false)$/;"	f
scopeCfpClosingTomorrow	app/models/Conference.php	/^    public function scopeCfpClosingTomorrow($query)$/;"	f
scopeCfpOpeningToday	app/models/Conference.php	/^    public function scopeCfpOpeningToday($query)$/;"	f
scopeFuture	app/models/Conference.php	/^    public function scopeFuture($query)$/;"	f
scopeOpenCfp	app/models/Conference.php	/^    public function scopeOpenCfp($query)$/;"	f
scopePublic	app/models/Bio.php	/^    public function scopePublic($query)$/;"	f
scopePublic	app/models/Talk.php	/^    public function scopePublic($query)$/;"	f
scopeUnclosedCfp	app/models/Conference.php	/^    public function scopeUnclosedCfp($query)$/;"	f
scopedErrors	bootstrap/cache/compiled.php	/^        $this->scopedErrors = (int) $levels;$/;"	v
scopedErrors	bootstrap/cache/compiled.php	/^    private $scopedErrors = 0x1fff;$/;"	v
screamAt	bootstrap/cache/compiled.php	/^    public function screamAt($levels, $replace = false)$/;"	f
screamedErrors	bootstrap/cache/compiled.php	/^        $this->screamedErrors = (int) $levels;$/;"	v
screamedErrors	bootstrap/cache/compiled.php	/^    private $screamedErrors = 0x55;$/;"	v
scripts	composer.json	/^    "scripts": {$/;"	f
search	bootstrap/cache/compiled.php	/^    public function search($value, $strict = false)$/;"	f
searchInDirectory	bootstrap/cache/compiled.php	/^    private function searchInDirectory($dir)$/;"	f
secondKey	bootstrap/cache/compiled.php	/^        $secondKey = $secondKey ?: $through->getForeignKey();$/;"	v
sectionContent	bootstrap/cache/compiled.php	/^            $sectionContent = $this->sections[$section];$/;"	v
sectionContent	bootstrap/cache/compiled.php	/^        $sectionContent = $default;$/;"	v
sectionContent	bootstrap/cache/compiled.php	/^        $sectionContent = str_replace('@@parent', '--parent--holder--', $sectionContent);$/;"	v
sectionStack	bootstrap/cache/compiled.php	/^        $this->sectionStack = [];$/;"	v
sectionStack	bootstrap/cache/compiled.php	/^    protected $sectionStack = [];$/;"	v
sections	bootstrap/cache/compiled.php	/^        $this->sections = [];$/;"	v
sections	bootstrap/cache/compiled.php	/^    protected $sections = [];$/;"	v
secure	bootstrap/cache/compiled.php	/^        $secure = $this->request->isSecure();$/;"	v
secure	bootstrap/cache/compiled.php	/^        $this->secure = (bool) $secure;$/;"	v
secure	bootstrap/cache/compiled.php	/^    protected $secure = false;$/;"	v
secure	bootstrap/cache/compiled.php	/^    protected $secure;$/;"	v
secure	bootstrap/cache/compiled.php	/^    protected function getPathAndDomain($path, $domain, $secure = false)$/;"	v
secure	bootstrap/cache/compiled.php	/^    public function asset($path, $secure = null)$/;"	v
secure	bootstrap/cache/compiled.php	/^    public function asset($path, $secure = null);$/;"	v
secure	bootstrap/cache/compiled.php	/^    public function assetFrom($root, $path, $secure = null)$/;"	v
secure	bootstrap/cache/compiled.php	/^    public function secure($path, $parameters = [])$/;"	f
secure	bootstrap/cache/compiled.php	/^    public function secure($path, $parameters = []);$/;"	f
secure	bootstrap/cache/compiled.php	/^    public function secure()$/;"	f
secure	bootstrap/cache/compiled.php	/^    public function setDefaultPathAndDomain($path, $domain, $secure = false)$/;"	v
secureAsset	bootstrap/cache/compiled.php	/^    public function secureAsset($path)$/;"	f
seg	bootstrap/cache/compiled.php	/^                $seg = $segs[$index];$/;"	v
segment	bootstrap/cache/compiled.php	/^    public function segment($index, $default = null)$/;"	f
segments	bootstrap/cache/compiled.php	/^            $segments = explode('.', $key);$/;"	v
segments	bootstrap/cache/compiled.php	/^            $segments = explode('@', $binding);$/;"	v
segments	bootstrap/cache/compiled.php	/^        $segments = explode(',', preg_replace("\/[\\\\(\\\\)\\\\\\"\\\\']\/", '', $expression));$/;"	v
segments	bootstrap/cache/compiled.php	/^        $segments = explode('@', $listener);$/;"	v
segments	bootstrap/cache/compiled.php	/^        $segments = explode('@', $target);$/;"	v
segments	bootstrap/cache/compiled.php	/^        $segments = explode('\/', $this->path());$/;"	v
segments	bootstrap/cache/compiled.php	/^        $segments = explode('|', $recaller);$/;"	v
segments	bootstrap/cache/compiled.php	/^        $segments = explode(static::HINT_PATH_DELIMITER, $name);$/;"	v
segments	bootstrap/cache/compiled.php	/^    public function segments()$/;"	f
segs	bootstrap/cache/compiled.php	/^            $segs = array_reverse($segs);$/;"	v
segs	bootstrap/cache/compiled.php	/^            $segs = explode('\/', trim($file, '\/'));$/;"	v
self	bootstrap/cache/compiled.php	/^        $self = __FUNCTION__;$/;"	v
send	bootstrap/cache/compiled.php	/^    public function send($passable)$/;"	f
send	bootstrap/cache/compiled.php	/^    public function send($traveler);$/;"	f
send	bootstrap/cache/compiled.php	/^    public function send()$/;"	f
sendContent	bootstrap/cache/compiled.php	/^    public function sendContent()$/;"	f
sendFailedLoginResponse	bootstrap/cache/compiled.php	/^    protected function sendFailedLoginResponse(Request $request)$/;"	f
sendHeaders	bootstrap/cache/compiled.php	/^    public function sendHeaders()$/;"	f
sendPhpResponse	bootstrap/cache/compiled.php	/^    public function sendPhpResponse($exception)$/;"	f
sendRequestThroughRouter	bootstrap/cache/compiled.php	/^    protected function sendRequestThroughRouter($request)$/;"	f
sendResetLinkEmail	bootstrap/cache/compiled.php	/^    public function sendResetLinkEmail(Request $request)$/;"	f
separator	bootstrap/cache/compiled.php	/^    public static function slug($title, $separator = '-')$/;"	v
serialize	bootstrap/cache/compiled.php	/^    public function serialize()$/;"	f
serializeDate	bootstrap/cache/compiled.php	/^    protected function serializeDate(DateTime $date)$/;"	f
server	bootstrap/cache/compiled.php	/^        $server = $_SERVER;$/;"	v
server	bootstrap/cache/compiled.php	/^        $server = array_replace(array('SERVER_NAME' => 'localhost', 'SERVER_PORT' => 80, 'HTTP_HOST' => 'localhost', 'HTTP_USER_AGENT' => 'Symfony\/3.X', 'HTTP_ACCEPT' => 'text\/html,application\/xhtml+xml,application\/xml;q=0.9,*\/*;q=0.8', 'HTTP_ACCEPT_LANGUAGE' => 'en-us,en;q=0.5', 'HTTP_ACCEPT_CHARSET' => 'ISO-8859-1,utf-8;q=0.7,*;q=0.7', 'REMOTE_ADDR' => '127.0.0.1', 'SCRIPT_NAME' => '', 'SCRIPT_FILENAME' => '', 'SERVER_PROTOCOL' => 'HTTP\/1.1', 'REQUEST_TIME' => time()), $server);$/;"	v
server	bootstrap/cache/compiled.php	/^        $this->server = clone $this->server;$/;"	v
server	bootstrap/cache/compiled.php	/^        $this->server = new ServerBag($server);$/;"	v
server	bootstrap/cache/compiled.php	/^    public $server;$/;"	v
server	bootstrap/cache/compiled.php	/^    public function server($key = null, $default = null)$/;"	f
service	bootstrap/cache/compiled.php	/^        foreach ($this->deferredServices as $service => $provider) {$/;"	v
service	bootstrap/cache/compiled.php	/^    public function registerDeferredProvider($provider, $service = null)$/;"	v
service	bootstrap/cache/compiled.php	/^    public function registerDeferredProvider($provider, $service = null);$/;"	v
serviceProviders	bootstrap/cache/compiled.php	/^    protected $serviceProviders = [];$/;"	v
session	bootstrap/cache/compiled.php	/^            $session = $this->startSession($request);$/;"	v
session	bootstrap/cache/compiled.php	/^        $session = $this->getSession($request);$/;"	v
session	bootstrap/cache/compiled.php	/^        $session = $this->getSession();$/;"	v
session	bootstrap/cache/compiled.php	/^        $session = $this->manager->driver();$/;"	v
session	bootstrap/cache/compiled.php	/^        $this->session = $session;$/;"	v
session	bootstrap/cache/compiled.php	/^    protected $session;$/;"	v
session	bootstrap/cache/compiled.php	/^    public function session()$/;"	f
sessionConfigured	bootstrap/cache/compiled.php	/^    protected function sessionConfigured()$/;"	f
sessionHandled	bootstrap/cache/compiled.php	/^        $this->sessionHandled = true;$/;"	v
sessionHandled	bootstrap/cache/compiled.php	/^    protected $sessionHandled = false;$/;"	v
sessionIsPersistent	bootstrap/cache/compiled.php	/^    protected function sessionIsPersistent(array $config = null)$/;"	f
sessionResolver	bootstrap/cache/compiled.php	/^        $this->sessionResolver = $sessionResolver;$/;"	v
sessionResolver	bootstrap/cache/compiled.php	/^    protected $sessionResolver;$/;"	v
sessionToken	bootstrap/cache/compiled.php	/^        $sessionToken = $request->session()->token();$/;"	v
set	bootstrap/cache/compiled.php	/^    public function set($key, $value = null)$/;"	f
set	bootstrap/cache/compiled.php	/^    public function set($key, $value = null);$/;"	f
set	bootstrap/cache/compiled.php	/^    public function set($key, $value)$/;"	f
set	bootstrap/cache/compiled.php	/^    public function set($key, $values, $replace = true)$/;"	f
set	bootstrap/cache/compiled.php	/^    public function set($name, $value)$/;"	f
set	bootstrap/cache/compiled.php	/^    public function set($name, $value);$/;"	f
set	bootstrap/cache/compiled.php	/^    public static function set(&$array, $key, $value)$/;"	f
setAction	bootstrap/cache/compiled.php	/^    public function setAction(array $action)$/;"	f
setAliases	bootstrap/cache/compiled.php	/^    public function setAliases(array $aliases)$/;"	f
setAppends	bootstrap/cache/compiled.php	/^    public function setAppends(array $appends)$/;"	f
setAttribute	bootstrap/cache/compiled.php	/^    public function setAttribute($key, $value)$/;"	f
setAttribute	bootstrap/cache/compiled.php	/^    public function setAttribute($name, $value)$/;"	f
setBasePath	bootstrap/cache/compiled.php	/^    public function setBasePath($basePath)$/;"	f
setBubble	bootstrap/cache/compiled.php	/^    public function setBubble($bubble)$/;"	f
setCache	bootstrap/cache/compiled.php	/^    public function setCache(array $options)$/;"	f
setCharset	bootstrap/cache/compiled.php	/^    public function setCharset($charset)$/;"	f
setClientTtl	bootstrap/cache/compiled.php	/^    public function setClientTtl($seconds)$/;"	f
setCollection	bootstrap/cache/compiled.php	/^    public function setCollection(Collection $collection)$/;"	f
setCondition	bootstrap/cache/compiled.php	/^    public function setCondition($condition)$/;"	f
setConnection	bootstrap/cache/compiled.php	/^    public function setConnection($name)$/;"	f
setConnectionResolver	bootstrap/cache/compiled.php	/^    public static function setConnectionResolver(Resolver $resolver)$/;"	f
setContainer	bootstrap/cache/compiled.php	/^    public function setContainer(Container $container)$/;"	f
setContent	bootstrap/cache/compiled.php	/^    public function setContent($content)$/;"	f
setContentTags	bootstrap/cache/compiled.php	/^    public function setContentTags($openTag, $closeTag, $escaped = false)$/;"	f
setCookie	bootstrap/cache/compiled.php	/^    public function setCookie(Cookie $cookie)$/;"	f
setCookieJar	bootstrap/cache/compiled.php	/^    public function setCookieJar(CookieJar $cookie)$/;"	f
setCreatedAt	bootstrap/cache/compiled.php	/^    public function setCreatedAt($value)$/;"	f
setCurrentPage	bootstrap/cache/compiled.php	/^    protected function setCurrentPage($currentPage)$/;"	f
setDate	bootstrap/cache/compiled.php	/^    public function setDate(\\DateTime $date)$/;"	f
setDateFormat	bootstrap/cache/compiled.php	/^    public function setDateFormat($format)$/;"	f
setDefault	bootstrap/cache/compiled.php	/^    public function setDefault($name, $default)$/;"	f
setDefaultConnection	bootstrap/cache/compiled.php	/^    public function setDefaultConnection($name)$/;"	f
setDefaultConnection	bootstrap/cache/compiled.php	/^    public function setDefaultConnection($name);$/;"	f
setDefaultDriver	bootstrap/cache/compiled.php	/^    public function setDefaultDriver($name)$/;"	f
setDefaultLocale	bootstrap/cache/compiled.php	/^    public function setDefaultLocale($locale)$/;"	f
setDefaultLogger	bootstrap/cache/compiled.php	/^    public function setDefaultLogger(LoggerInterface $logger, $levels = E_ALL, $replace = false)$/;"	f
setDefaultPathAndDomain	bootstrap/cache/compiled.php	/^    public function setDefaultPathAndDomain($path, $domain, $secure = false)$/;"	f
setDefaults	bootstrap/cache/compiled.php	/^    public function setDefaults(array $defaults)$/;"	f
setDeferredServices	bootstrap/cache/compiled.php	/^    public function setDeferredServices(array $services)$/;"	f
setDispatcher	bootstrap/cache/compiled.php	/^    public function setDispatcher(Dispatcher $events)$/;"	f
setEchoFormat	bootstrap/cache/compiled.php	/^    public function setEchoFormat($format)$/;"	f
setEscapedContentTags	bootstrap/cache/compiled.php	/^    public function setEscapedContentTags($openTag, $closeTag)$/;"	f
setEtag	bootstrap/cache/compiled.php	/^    public function setEtag($etag = null, $weak = false)$/;"	f
setEventDispatcher	bootstrap/cache/compiled.php	/^    public function setEventDispatcher(Dispatcher $dispatcher)$/;"	f
setEventDispatcher	bootstrap/cache/compiled.php	/^    public static function setEventDispatcher(Dispatcher $dispatcher)$/;"	f
setExceptionHandler	bootstrap/cache/compiled.php	/^    public function setExceptionHandler(callable $handler = null)$/;"	f
setExists	bootstrap/cache/compiled.php	/^    public function setExists($value)$/;"	f
setExpires	bootstrap/cache/compiled.php	/^    public function setExpires(\\DateTime $date = null)$/;"	f
setFacadeApplication	bootstrap/cache/compiled.php	/^    public static function setFacadeApplication($app)$/;"	f
setFactory	bootstrap/cache/compiled.php	/^    public static function setFactory($callable)$/;"	f
setFileLinkFormat	bootstrap/cache/compiled.php	/^    public function setFileLinkFormat($format)$/;"	f
setFilenameFormat	bootstrap/cache/compiled.php	/^    public function setFilenameFormat($filenameFormat, $dateFormat)$/;"	f
setFinder	bootstrap/cache/compiled.php	/^    public function setFinder(ViewFinderInterface $finder)$/;"	f
setFormat	bootstrap/cache/compiled.php	/^    public function setFormat($format = ':message')$/;"	f
setFormat	bootstrap/cache/compiled.php	/^    public function setFormat($format = ':message');$/;"	f
setFormat	bootstrap/cache/compiled.php	/^    public function setFormat($format, $mimeTypes)$/;"	f
setFormatter	bootstrap/cache/compiled.php	/^    public function setFormatter(FormatterInterface $formatter)$/;"	f
setFormatter	bootstrap/cache/compiled.php	/^    public function setFormatter(FormatterInterface $formatter);$/;"	f
setHandler	bootstrap/cache/compiled.php	/^    public function setHandler(callable $handler = null)$/;"	f
setHandlers	bootstrap/cache/compiled.php	/^    public function setHandlers(array $handlers)$/;"	f
setHasher	bootstrap/cache/compiled.php	/^    public function setHasher(HasherContract $hasher)$/;"	f
setHidden	bootstrap/cache/compiled.php	/^    public function setHidden(array $hidden)$/;"	f
setHost	bootstrap/cache/compiled.php	/^    public function setHost($pattern)$/;"	f
setId	bootstrap/cache/compiled.php	/^    public function setId($id)$/;"	f
setId	bootstrap/cache/compiled.php	/^    public function setId($id);$/;"	f
setIncrementing	bootstrap/cache/compiled.php	/^    public function setIncrementing($value)$/;"	f
setIndex	bootstrap/cache/compiled.php	/^    public function setIndex($index)$/;"	f
setInstance	bootstrap/cache/compiled.php	/^    public static function setInstance($loader)$/;"	f
setInstance	bootstrap/cache/compiled.php	/^    public static function setInstance(ContainerContract $container)$/;"	f
setKeyName	bootstrap/cache/compiled.php	/^    public function setKeyName($key)$/;"	f
setKeysForSaveQuery	bootstrap/cache/compiled.php	/^    protected function setKeysForSaveQuery(Builder $query)$/;"	f
setLastModified	bootstrap/cache/compiled.php	/^    public function setLastModified(\\DateTime $date = null)$/;"	f
setLevel	bootstrap/cache/compiled.php	/^    public function setLevel($level)$/;"	f
setLocale	bootstrap/cache/compiled.php	/^    public function setLocale($locale)$/;"	f
setLoggers	bootstrap/cache/compiled.php	/^    public function setLoggers(array $loggers)$/;"	f
setMaxAge	bootstrap/cache/compiled.php	/^    public function setMaxAge($value)$/;"	f
setMethod	bootstrap/cache/compiled.php	/^    public function setMethod($method)$/;"	f
setMethods	bootstrap/cache/compiled.php	/^    public function setMethods($methods)$/;"	f
setModel	bootstrap/cache/compiled.php	/^    public function setModel($model)$/;"	f
setName	bootstrap/cache/compiled.php	/^    public function setName($name)$/;"	f
setName	bootstrap/cache/compiled.php	/^    public function setName($name);$/;"	f
setNotModified	bootstrap/cache/compiled.php	/^    public function setNotModified()$/;"	f
setObservableEvents	bootstrap/cache/compiled.php	/^    public function setObservableEvents(array $observables)$/;"	f
setOption	bootstrap/cache/compiled.php	/^    public function setOption($name, $value)$/;"	f
setOptions	bootstrap/cache/compiled.php	/^    public function setOptions(array $options)$/;"	f
setPageName	bootstrap/cache/compiled.php	/^    public function setPageName($name)$/;"	f
setParameter	bootstrap/cache/compiled.php	/^    public function setParameter($name, $value)$/;"	f
setParsedKey	bootstrap/cache/compiled.php	/^    public function setParsedKey($key, $parsed)$/;"	f
setPath	bootstrap/cache/compiled.php	/^    public function setPath($path)$/;"	f
setPath	bootstrap/cache/compiled.php	/^    public function setPath($pattern)$/;"	f
setPdoForType	bootstrap/cache/compiled.php	/^    protected function setPdoForType(Connection $connection, $type = null)$/;"	f
setPerPage	bootstrap/cache/compiled.php	/^    public function setPerPage($perPage)$/;"	f
setPhpDefaultLocale	bootstrap/cache/compiled.php	/^    private function setPhpDefaultLocale($locale)$/;"	f
setPreviousUrl	bootstrap/cache/compiled.php	/^    public function setPreviousUrl($url)$/;"	f
setPrivate	bootstrap/cache/compiled.php	/^    public function setPrivate()$/;"	f
setProtocolVersion	bootstrap/cache/compiled.php	/^    public function setProtocolVersion($version)$/;"	f
setProvider	bootstrap/cache/compiled.php	/^    public function setProvider(UserProvider $provider)$/;"	f
setPublic	bootstrap/cache/compiled.php	/^    public function setPublic()$/;"	f
setQuality	bootstrap/cache/compiled.php	/^    public function setQuality($quality)$/;"	f
setQueueResolver	bootstrap/cache/compiled.php	/^    public function setQueueResolver(callable $resolver)$/;"	f
setRawAttributes	bootstrap/cache/compiled.php	/^    public function setRawAttributes(array $attributes, $sync = false)$/;"	f
setRawTags	bootstrap/cache/compiled.php	/^    public function setRawTags($openTag, $closeTag)$/;"	f
setRedirector	bootstrap/cache/compiled.php	/^    public function setRedirector(Redirector $redirector)$/;"	f
setRegistered	bootstrap/cache/compiled.php	/^    public function setRegistered($value)$/;"	f
setRelation	bootstrap/cache/compiled.php	/^    public function setRelation($relation, $value)$/;"	f
setRelations	bootstrap/cache/compiled.php	/^    public function setRelations(array $relations)$/;"	f
setRequest	bootstrap/cache/compiled.php	/^    public function setRequest(Request $request)$/;"	f
setRequestFormat	bootstrap/cache/compiled.php	/^    public function setRequestFormat($format)$/;"	f
setRequestOnHandler	bootstrap/cache/compiled.php	/^    public function setRequestOnHandler(Request $request)$/;"	f
setRequestOnHandler	bootstrap/cache/compiled.php	/^    public function setRequestOnHandler(Request $request);$/;"	f
setRequirement	bootstrap/cache/compiled.php	/^    public function setRequirement($key, $regex)$/;"	f
setRequirements	bootstrap/cache/compiled.php	/^    public function setRequirements(array $requirements)$/;"	f
setRootControllerNamespace	bootstrap/cache/compiled.php	/^    protected function setRootControllerNamespace()$/;"	f
setRootControllerNamespace	bootstrap/cache/compiled.php	/^    public function setRootControllerNamespace($rootNamespace)$/;"	f
setRootControllerNamespace	bootstrap/cache/compiled.php	/^    public function setRootControllerNamespace($rootNamespace);$/;"	f
setRounds	bootstrap/cache/compiled.php	/^    public function setRounds($rounds)$/;"	f
setRouteResolver	bootstrap/cache/compiled.php	/^    public function setRouteResolver(Closure $callback)$/;"	f
setRouter	bootstrap/cache/compiled.php	/^    public function setRouter(Router $router)$/;"	f
setRouter	bootstrap/cache/compiled.php	/^    public static function setRouter(Router $router)$/;"	f
setRoutes	bootstrap/cache/compiled.php	/^    public function setRoutes(RouteCollection $routes)$/;"	f
setSchemes	bootstrap/cache/compiled.php	/^    public function setSchemes($schemes)$/;"	f
setSession	bootstrap/cache/compiled.php	/^    public function setSession(SessionInterface $session)$/;"	f
setSessionResolver	bootstrap/cache/compiled.php	/^    public function setSessionResolver(callable $sessionResolver)$/;"	f
setSharedMaxAge	bootstrap/cache/compiled.php	/^    public function setSharedMaxAge($value)$/;"	f
setStatusCode	bootstrap/cache/compiled.php	/^    public function setStatusCode($code, $text = null)$/;"	f
setTable	bootstrap/cache/compiled.php	/^    public function setTable($table)$/;"	f
setTimezone	bootstrap/cache/compiled.php	/^    public static function setTimezone(\\DateTimeZone $tz)$/;"	f
setTouchedRelations	bootstrap/cache/compiled.php	/^    public function setTouchedRelations(array $touches)$/;"	f
setTrustedHeaderName	bootstrap/cache/compiled.php	/^    public static function setTrustedHeaderName($key, $value)$/;"	f
setTrustedHosts	bootstrap/cache/compiled.php	/^    public static function setTrustedHosts(array $hostPatterns)$/;"	f
setTrustedProxies	bootstrap/cache/compiled.php	/^    public static function setTrustedProxies(array $proxies)$/;"	f
setTtl	bootstrap/cache/compiled.php	/^    public function setTtl($seconds)$/;"	f
setUp	tests/Api/ApiTestCase.php	/^    public function setUp()$/;"	f
setUp	tests/Api/OAuthTest.php	/^    public function setUp()$/;"	f
setUp	tests/Console/Commands/TweetImportantCFPDatesTest.php	/^    public function setUp()$/;"	f
setUp	tests/IntegrationTestCase.php	/^    public function setUp()$/;"	f
setUpdatedAt	bootstrap/cache/compiled.php	/^    public function setUpdatedAt($value)$/;"	f
setUri	bootstrap/cache/compiled.php	/^    public function setUri($uri)$/;"	f
setUser	bootstrap/cache/compiled.php	/^    public function setUser(Authenticatable $user);$/;"	f
setUser	bootstrap/cache/compiled.php	/^    public function setUser(AuthenticatableContract $user)$/;"	f
setUserResolver	bootstrap/cache/compiled.php	/^    public function setUserResolver(Closure $callback)$/;"	f
setValue	bootstrap/cache/compiled.php	/^    public function setValue($value)$/;"	f
setVary	bootstrap/cache/compiled.php	/^    public function setVary($headers, $replace = true)$/;"	f
setVisible	bootstrap/cache/compiled.php	/^    public function setVisible(array $visible)$/;"	f
setupLayout	app/Http/Controllers/BaseController.php	/^    protected function setupLayout()$/;"	f
setupWildcardListen	bootstrap/cache/compiled.php	/^    protected function setupWildcardListen($event, $listener)$/;"	f
share	bootstrap/cache/compiled.php	/^    public function share($key, $value = null)$/;"	f
share	bootstrap/cache/compiled.php	/^    public function share($key, $value = null);$/;"	f
share	bootstrap/cache/compiled.php	/^    public function share(Closure $closure)$/;"	f
shared	bootstrap/cache/compiled.php	/^    protected $shared = [];$/;"	v
shared	bootstrap/cache/compiled.php	/^    public function shared($key, $default = null)$/;"	f
sharedGet	bootstrap/cache/compiled.php	/^    public function sharedGet($path)$/;"	f
shift	bootstrap/cache/compiled.php	/^    public function shift()$/;"	f
shortBio	database/seeds/BiosSeeder.php	/^        $shortBio = $author->bios()->create(['nickname' => 'Short Bio', 'body' => 'I am short.']);$/;"	v
shortenForTwitter	app/Console/Commands/TweetImportantCFPDates.php	/^    private function shortenForTwitter($message, $available)$/;"	f
shouldBeJson	bootstrap/cache/compiled.php	/^    protected function shouldBeJson($content)$/;"	f
shouldPassThrough	bootstrap/cache/compiled.php	/^    protected function shouldPassThrough($request)$/;"	f
shouldReceive	bootstrap/cache/compiled.php	/^    public static function shouldReceive()$/;"	f
shouldRecompile	bootstrap/cache/compiled.php	/^    public function shouldRecompile($manifest, $providers)$/;"	f
shouldSkipMiddleware	bootstrap/cache/compiled.php	/^        $shouldSkipMiddleware = $this->container->bound('middleware.disable') && $this->container->make('middleware.disable') === true;$/;"	v
shouldSkipMiddleware	bootstrap/cache/compiled.php	/^    public function shouldSkipMiddleware()$/;"	f
shouldUse	bootstrap/cache/compiled.php	/^    public function shouldUse($name)$/;"	f
show	app/Http/Controllers/AccountController.php	/^    public function show()$/;"	f
show	app/Http/Controllers/Api/BiosController.php	/^    public function show($id)$/;"	f
show	app/Http/Controllers/Api/ConferencesController.php	/^    public function show($id)$/;"	f
show	app/Http/Controllers/Api/TalksController.php	/^    public function show($id)$/;"	f
show	app/Http/Controllers/AuthorsController.php	/^    public function show($id)$/;"	f
show	app/Http/Controllers/BiosController.php	/^    public function show($id)$/;"	f
show	app/Http/Controllers/ConferencesController.php	/^    public function show($id)$/;"	f
show	app/Http/Controllers/PublicProfileController.php	/^    public function show($profile_slug)$/;"	f
show	app/Http/Controllers/TalksController.php	/^    public function show($id)$/;"	f
showBio	app/Http/Controllers/PublicProfileController.php	/^    public function showBio($profile_slug, $bio_id)$/;"	f
showLinkRequestForm	bootstrap/cache/compiled.php	/^    public function showLinkRequestForm()$/;"	f
showLoginForm	bootstrap/cache/compiled.php	/^    public function showLoginForm()$/;"	f
showPublic	app/Http/Controllers/ConferencesController.php	/^    private function showPublic($id)$/;"	f
showRegistrationForm	bootstrap/cache/compiled.php	/^    public function showRegistrationForm()$/;"	f
showResetForm	bootstrap/cache/compiled.php	/^    public function showResetForm(Request $request, $token = null)$/;"	f
showTalk	app/Http/Controllers/PublicProfileController.php	/^    public function showTalk($profile_slug, $talk_id)$/;"	f
showWelcome	app/Http/Controllers/HomeController.php	/^    public function showWelcome()$/;"	f
shuffle	bootstrap/cache/compiled.php	/^    public function shuffle()$/;"	f
signature	app/Console/Commands/GenerateOAuthClient.php	/^    protected $signature = 'auth:generate';$/;"	v
signatureParameters	bootstrap/cache/compiled.php	/^    public function signatureParameters($subClass = null)$/;"	f
singleton	bootstrap/cache/compiled.php	/^    public function singleton($abstract, $concrete = null)$/;"	f
singleton	bootstrap/cache/compiled.php	/^    public function singleton($abstract, $concrete = null);$/;"	f
singular	bootstrap/cache/compiled.php	/^    public static function singular($value)$/;"	f
singularResourceParameters	bootstrap/cache/compiled.php	/^    public function singularResourceParameters()$/;"	f
size	bootstrap/cache/compiled.php	/^            $size = $length - $len;$/;"	v
size	bootstrap/cache/compiled.php	/^    public function size($path)$/;"	f
size	bootstrap/cache/compiled.php	/^    public function size($size)$/;"	f
sizeGlob	bootstrap/cache/compiled.php	/^        $sizeGlob = strlen($glob);$/;"	v
sizes	bootstrap/cache/compiled.php	/^    private $sizes = array();$/;"	v
slice	bootstrap/cache/compiled.php	/^    public function slice($offset, $length = null)$/;"	f
slides	app/models/TalkRevision.php	/^    protected $slides;$/;"	v
slug	bootstrap/cache/compiled.php	/^    public static function slug($title, $separator = '-')$/;"	f
snake	bootstrap/cache/compiled.php	/^    public static function snake($value, $delimiter = '_')$/;"	f
snakeAttributes	bootstrap/cache/compiled.php	/^    public static $snakeAttributes = true;$/;"	v
snakeCache	bootstrap/cache/compiled.php	/^    protected static $snakeCache = [];$/;"	v
sort	app/Http/Controllers/Api/ConferencesController.php	/^                $sort = substr($sort, 1);$/;"	v
sort	app/Http/Controllers/Api/ConferencesController.php	/^            $sort = Input::get('sort');$/;"	v
sort	app/Http/Controllers/Api/ConferencesController.php	/^        $sort = 'closing_next';$/;"	v
sort	bootstrap/cache/compiled.php	/^        $this->sort = $closure;$/;"	v
sort	bootstrap/cache/compiled.php	/^        $this->sort = Iterator\\SortableIterator::SORT_BY_ACCESSED_TIME;$/;"	v
sort	bootstrap/cache/compiled.php	/^        $this->sort = Iterator\\SortableIterator::SORT_BY_CHANGED_TIME;$/;"	v
sort	bootstrap/cache/compiled.php	/^        $this->sort = Iterator\\SortableIterator::SORT_BY_MODIFIED_TIME;$/;"	v
sort	bootstrap/cache/compiled.php	/^        $this->sort = Iterator\\SortableIterator::SORT_BY_NAME;$/;"	v
sort	bootstrap/cache/compiled.php	/^        $this->sort = Iterator\\SortableIterator::SORT_BY_TYPE;$/;"	v
sort	bootstrap/cache/compiled.php	/^    private $sort = false;$/;"	v
sort	bootstrap/cache/compiled.php	/^    private function sort()$/;"	f
sort	bootstrap/cache/compiled.php	/^    public function sort(\\Closure $closure)$/;"	f
sort	bootstrap/cache/compiled.php	/^    public function sort(callable $callback = null)$/;"	f
sort	bootstrap/cache/compiled.php	/^    public static function sort($array, callable $callback)$/;"	f
sortBy	bootstrap/cache/compiled.php	/^    public function sortBy($callback, $options = SORT_REGULAR, $descending = false)$/;"	f
sortByAccessedTime	bootstrap/cache/compiled.php	/^    public function sortByAccessedTime()$/;"	f
sortByChangedTime	bootstrap/cache/compiled.php	/^    public function sortByChangedTime()$/;"	f
sortByDesc	bootstrap/cache/compiled.php	/^    public function sortByDesc($callback, $options = SORT_REGULAR)$/;"	f
sortByModifiedTime	bootstrap/cache/compiled.php	/^    public function sortByModifiedTime()$/;"	f
sortByName	bootstrap/cache/compiled.php	/^    public function sortByName()$/;"	f
sortByType	bootstrap/cache/compiled.php	/^    public function sortByType()$/;"	f
sortDir	app/Http/Controllers/Api/ConferencesController.php	/^                $sortDir = 'desc';$/;"	v
sortDir	app/Http/Controllers/Api/ConferencesController.php	/^        $sortDir = 'asc';$/;"	v
sortListeners	bootstrap/cache/compiled.php	/^    protected function sortListeners($eventName)$/;"	f
sortRecursive	bootstrap/cache/compiled.php	/^    public static function sortRecursive($array)$/;"	f
sorted	bootstrap/cache/compiled.php	/^            $this->sorted = true;$/;"	v
sorted	bootstrap/cache/compiled.php	/^        $this->sorted = false;$/;"	v
sorted	bootstrap/cache/compiled.php	/^    private $sorted = true;$/;"	v
sorted	bootstrap/cache/compiled.php	/^    protected $sorted = [];$/;"	v
sorting_talk	app/Http/Controllers/TalksController.php	/^        $sorting_talk = $this->sorting_talks;$/;"	v
sorting_talks	app/Http/Controllers/TalksController.php	/^    protected $sorting_talks = [$/;"	v
sourceDirs	bootstrap/cache/compiled.php	/^        $sourceDirs = explode('\/', isset($basePath[0]) && '\/' === $basePath[0] ? substr($basePath, 1) : $basePath);$/;"	v
spiffyTalk	database/seeds/TalksSeeder.php	/^        $spiffyTalk = $author->talks()->create([]);$/;"	v
splice	bootstrap/cache/compiled.php	/^    public function splice($offset, $length = null, $replacement = [])$/;"	f
spliceIntoParameters	bootstrap/cache/compiled.php	/^    protected function spliceIntoParameters(array &$parameters, $key, $instance)$/;"	f
split	bootstrap/cache/compiled.php	/^        $split = explode('\/', $actual);$/;"	v
splitVersionsToTalks	database/migrations/2015_05_24_113910_drop_versions.php	/^    private function splitVersionsToTalks()$/;"	f
stackErrors	bootstrap/cache/compiled.php	/^    public static function stackErrors()$/;"	f
stackedErrorLevels	bootstrap/cache/compiled.php	/^    private static $stackedErrorLevels = array();$/;"	v
stackedErrors	bootstrap/cache/compiled.php	/^    private static $stackedErrors = array();$/;"	v
stampCreated	bootstrap/cache/compiled.php	/^    private function stampCreated($lifetime = null)$/;"	f
stampNew	bootstrap/cache/compiled.php	/^    public function stampNew($lifetime = null)$/;"	f
start	bootstrap/cache/compiled.php	/^            $start = substr($m[1], 0, 1);$/;"	v
start	bootstrap/cache/compiled.php	/^            if (($start = substr($bit, 0, 1)) === ($end = substr($bit, -1)) && ($start === '"' || $start === '\\'')) {$/;"	v
start	bootstrap/cache/compiled.php	/^        $start = Str::startsWith($root, 'http:\/\/') ? 'http:\/\/' : 'https:\/\/';$/;"	v
start	bootstrap/cache/compiled.php	/^        return new self(($start = substr($value, 0, 1)) === ($end = substr($value, -1)) && ($start === '"' || $start === '\\'') ? substr($value, 1, -1) : $value, $attributes);$/;"	v
start	bootstrap/cache/compiled.php	/^    public function start()$/;"	f
start	bootstrap/cache/compiled.php	/^    public function start();$/;"	f
startPush	bootstrap/cache/compiled.php	/^    public function startPush($section, $content = '')$/;"	f
startSection	bootstrap/cache/compiled.php	/^    public function startSection($section, $content = '')$/;"	f
startSession	bootstrap/cache/compiled.php	/^    protected function startSession(Request $request)$/;"	f
started	bootstrap/cache/compiled.php	/^        $this->started = false;$/;"	v
started	bootstrap/cache/compiled.php	/^        return $this->started = true;$/;"	v
started	bootstrap/cache/compiled.php	/^    protected $started = false;$/;"	v
starts	app/Console/Commands/TweetImportantCFPDates.php	/^            $starts = $conference->cfp_starts_at;$/;"	v
startsAtDisplay	app/models/Conference.php	/^    public function startsAtDisplay()$/;"	f
startsAtSet	app/models/Conference.php	/^    public function startsAtSet()$/;"	f
startsWith	bootstrap/cache/compiled.php	/^    public static function startsWith($haystack, $needles)$/;"	f
starts_at	database/seeds/ConferencesSeeder.php	/^            $starts_at = $faker->dateTimeBetween('now', '3 years');$/;"	v
staticPrefix	bootstrap/cache/compiled.php	/^        $staticPrefix = $result['staticPrefix'];$/;"	v
staticPrefix	bootstrap/cache/compiled.php	/^        $this->staticPrefix = $data['path_prefix'];$/;"	v
staticPrefix	bootstrap/cache/compiled.php	/^        $this->staticPrefix = (string) $staticPrefix;$/;"	v
staticPrefix	bootstrap/cache/compiled.php	/^    private $staticPrefix;$/;"	v
status	artisan	/^$status = $app->make('Illuminate\\Contracts\\Console\\Kernel')->handle($/;"	v
status	bootstrap/cache/compiled.php	/^            $status = mkdir($dir, 0777, true);$/;"	v
status	bootstrap/cache/compiled.php	/^        $status = ob_get_status(true);$/;"	v
status	bootstrap/cache/compiled.php	/^    public function __construct($content = '', $status = 200, $headers = array())$/;"	v
status	bootstrap/cache/compiled.php	/^    public function json($data = [], $status = 200, array $headers = [], $options = 0);$/;"	v
status	bootstrap/cache/compiled.php	/^    public function make($content = '', $status = 200, array $headers = []);$/;"	v
status	bootstrap/cache/compiled.php	/^    public function redirectGuest($path, $status = 302, $headers = [], $secure = null);$/;"	v
status	bootstrap/cache/compiled.php	/^    public function redirectTo($path, $status = 302, $headers = [], $secure = null);$/;"	v
status	bootstrap/cache/compiled.php	/^    public function redirectToIntended($default = '\/', $status = 302, $headers = [], $secure = null);$/;"	v
status	bootstrap/cache/compiled.php	/^    public function status()$/;"	f
status	bootstrap/cache/compiled.php	/^    public function stream($callback, $status = 200, array $headers = []);$/;"	v
status	bootstrap/cache/compiled.php	/^    public static function create($content = '', $status = 200, $headers = array())$/;"	v
statusCode	bootstrap/cache/compiled.php	/^        $this->statusCode = $code = (int) $code;$/;"	v
statusCode	bootstrap/cache/compiled.php	/^    protected $statusCode;$/;"	v
statusText	bootstrap/cache/compiled.php	/^            $this->statusText = '';$/;"	v
statusText	bootstrap/cache/compiled.php	/^            $this->statusText = isset(self::$statusTexts[$code]) ? self::$statusTexts[$code] : 'unknown status';$/;"	v
statusText	bootstrap/cache/compiled.php	/^        $this->statusText = $text;$/;"	v
statusText	bootstrap/cache/compiled.php	/^    protected $statusText;$/;"	v
statusTexts	bootstrap/cache/compiled.php	/^    public static $statusTexts = array(100 => 'Continue', 101 => 'Switching Protocols', 102 => 'Processing', 200 => 'OK', 201 => 'Created', 202 => 'Accepted', 203 => 'Non-Authoritative Information', 204 => 'No Content', 205 => 'Reset Content', 206 => 'Partial Content', 207 => 'Multi-Status', 208 => 'Already Reported', 226 => 'IM Used', 300 => 'Multiple Choices', 301 => 'Moved Permanently', 302 => 'Found', 303 => 'See Other', 304 => 'Not Modified', 305 => 'Use Proxy', 307 => 'Temporary Redirect', 308 => 'Permanent Redirect', 400 => 'Bad Request', 401 => 'Unauthorized', 402 => 'Payment Required', 403 => 'Forbidden', 404 => 'Not Found', 405 => 'Method Not Allowed', 406 => 'Not Acceptable', 407 => 'Proxy Authentication Required', 408 => 'Request Timeout', 409 => 'Conflict', 410 => 'Gone', 411 => 'Length Required', 412 => 'Precondition Failed', 413 => 'Payload Too Large', 414 => 'URI Too Long', 415 => 'Unsupported Media Type', 416 => 'Range Not Satisfiable', 417 => 'Expectation Failed', 418 => 'I\\'m a teapot', 422 => 'Unprocessable Entity', 423 => 'Locked', 424 => 'Failed Dependency', 425 => 'Reserved for WebDAV advanced collections expired proposal', 426 => 'Upgrade Required', 428 => 'Precondition Required', 429 => 'Too Many Requests', 431 => 'Request Header Fields Too Large', 451 => 'Unavailable For Legal Reasons', 500 => 'Internal Server Error', 501 => 'Not Implemented', 502 => 'Bad Gateway', 503 => 'Service Unavailable', 504 => 'Gateway Timeout', 505 => 'HTTP Version Not Supported', 506 => 'Variant Also Negotiates (Experimental)', 507 => 'Insufficient Storage', 508 => 'Loop Detected', 510 => 'Not Extended', 511 => 'Network Authentication Required');$/;"	v
step	bootstrap/cache/compiled.php	/^            if ($position % $step === $offset) {$/;"	v
stopPush	bootstrap/cache/compiled.php	/^    public function stopPush()$/;"	f
stopSection	bootstrap/cache/compiled.php	/^    public function stopSection($overwrite = false)$/;"	f
storageKey	bootstrap/cache/compiled.php	/^        $this->storageKey = $storageKey;$/;"	v
storageKey	bootstrap/cache/compiled.php	/^    private $storageKey;$/;"	v
storagePath	bootstrap/cache/compiled.php	/^        $this->storagePath = $path;$/;"	v
storagePath	bootstrap/cache/compiled.php	/^    protected $storagePath;$/;"	v
storagePath	bootstrap/cache/compiled.php	/^    public function storagePath()$/;"	f
store	app/Http/Controllers/AccountController.php	/^    public function store(Request $request)$/;"	f
store	app/Http/Controllers/BiosController.php	/^    public function store()$/;"	f
store	app/Http/Controllers/ConferencesController.php	/^    public function store()$/;"	f
store	app/Http/Controllers/SubmissionsController.php	/^    public function store(Request $request)$/;"	f
store	app/Http/Controllers/TalksController.php	/^    public function store()$/;"	f
storeCurrentUrl	bootstrap/cache/compiled.php	/^    protected function storeCurrentUrl(Request $request, $session)$/;"	f
storeVerbatimBlocks	bootstrap/cache/compiled.php	/^    protected function storeVerbatimBlocks($value)$/;"	f
str	bootstrap/cache/compiled.php	/^        $str = '[object] (' . get_class($e) . '(code: ' . $e->getCode() . '): ' . $e->getMessage() . ' at ' . $e->getFile() . ':' . $e->getLine() . $previousText . ')';$/;"	v
str	bootstrap/cache/compiled.php	/^        $str = urlencode($this->getName()) . '=';$/;"	v
stream	bootstrap/cache/compiled.php	/^                $this->stream = null;$/;"	v
stream	bootstrap/cache/compiled.php	/^            $this->stream = $stream;$/;"	v
stream	bootstrap/cache/compiled.php	/^            $this->stream = fopen($this->url, 'a');$/;"	v
stream	bootstrap/cache/compiled.php	/^        $this->stream = null;$/;"	v
stream	bootstrap/cache/compiled.php	/^    protected $stream;$/;"	v
stream	bootstrap/cache/compiled.php	/^    public function stream($callback, $status = 200, array $headers = []);$/;"	f
strict	bootstrap/cache/compiled.php	/^    public function search($value, $strict = false)$/;"	v
strict	bootstrap/cache/compiled.php	/^    public function where($key, $value, $strict = true)$/;"	v
strict	bootstrap/cache/compiled.php	/^    public function whereIn($key, array $values, $strict = true)$/;"	v
strictLeadingDot	bootstrap/cache/compiled.php	/^    public static function toRegex($glob, $strictLeadingDot = true, $strictWildcardSlash = true, $delimiter = '#')$/;"	v
string	bootstrap/cache/compiled.php	/^        $string = $this->value . ($this->quality < 1 ? ';q=' . $this->quality : '');$/;"	v
string	bootstrap/cache/compiled.php	/^        $string = '';$/;"	v
stringify	bootstrap/cache/compiled.php	/^    public function stringify($value)$/;"	f
stripParentheses	bootstrap/cache/compiled.php	/^    protected function stripParentheses($expression)$/;"	f
studly	bootstrap/cache/compiled.php	/^    public static function studly($value)$/;"	f
studlyCache	bootstrap/cache/compiled.php	/^    protected static $studlyCache = [];$/;"	v
subPath	bootstrap/cache/compiled.php	/^    private $subPath;$/;"	v
subPathname	bootstrap/cache/compiled.php	/^            $subPathname = $this->subPath = (string) $this->getSubPath();$/;"	v
submissions	app/models/Conference.php	/^    public function submissions()$/;"	f
submissions	app/models/Talk.php	/^\/\/    public function submissions()$/;"	f
submits_current_revision_if_many	tests/SubmissionTest.php	/^    public function submits_current_revision_if_many()$/;"	f
submitters	app/models/Conference.php	/^\/\/    public function submitters()$/;"	f
submitting_attaches_to_conference	tests/SubmissionTest.php	/^    public function submitting_attaches_to_conference()$/;"	f
subscribe	app/Handlers/Events/SlackSubscriber.php	/^    public function subscribe($events)$/;"	f
subscribe	bootstrap/cache/compiled.php	/^    protected $subscribe = [];$/;"	v
subscribe	bootstrap/cache/compiled.php	/^    public function subscribe($subscriber)$/;"	f
subscribe	bootstrap/cache/compiled.php	/^    public function subscribe($subscriber);$/;"	f
subscriber	bootstrap/cache/compiled.php	/^        $subscriber = $this->resolveSubscriber($subscriber);$/;"	v
substituteBindings	bootstrap/cache/compiled.php	/^    protected function substituteBindings($route)$/;"	f
substituteImplicitBindings	bootstrap/cache/compiled.php	/^    protected function substituteImplicitBindings($route)$/;"	f
substr	bootstrap/cache/compiled.php	/^    public static function substr($string, $start, $length = null)$/;"	f
success	bootstrap/cache/compiled.php	/^                    $success = false;$/;"	v
success	bootstrap/cache/compiled.php	/^                $success = false;$/;"	v
success	bootstrap/cache/compiled.php	/^        $success = true;$/;"	v
sum	bootstrap/cache/compiled.php	/^    public function sum($callback = null)$/;"	f
superLanguage	bootstrap/cache/compiled.php	/^                $superLanguage = substr($language, 0, $position);$/;"	v
superTalk	database/seeds/TalksSeeder.php	/^        $superTalk = $author->talks()->create([]);$/;"	v
supported	bootstrap/cache/compiled.php	/^    public static function supported($key, $cipher)$/;"	f
supportedDrivers	bootstrap/cache/compiled.php	/^    public function supportedDrivers()$/;"	f
swap	bootstrap/cache/compiled.php	/^    public static function swap($instance)$/;"	f
symfony/css-selector	composer.json	/^        "symfony\/css-selector": "~3.0"$/;"	f
symfony/dom-crawler	composer.json	/^        "symfony\/dom-crawler": "~3.0",$/;"	f
sync	bootstrap/cache/compiled.php	/^    public function setRawAttributes(array $attributes, $sync = false)$/;"	v
syncJoindInEvents	app/Console/Commands/syncJoindInEvents.php	/^class syncJoindInEvents extends Command$/;"	c
syncOriginal	bootstrap/cache/compiled.php	/^    public function syncOriginal()$/;"	f
syncOriginalAttribute	bootstrap/cache/compiled.php	/^    public function syncOriginalAttribute($attribute)$/;"	f
table	app/models/Bio.php	/^    protected $table = 'bios';$/;"	v
table	app/models/Conference.php	/^    protected $table = 'conferences';$/;"	v
table	app/models/Talk.php	/^    protected $table = 'talks';$/;"	v
table	app/models/TalkRevision.php	/^    protected $table = 'talk_revisions';$/;"	v
table	bootstrap/cache/compiled.php	/^            $table = $this->joiningTable($related);$/;"	v
table	bootstrap/cache/compiled.php	/^        $table = $instance->getTable();$/;"	v
table	bootstrap/cache/compiled.php	/^        $table = $table ?: Str::plural($name);$/;"	v
table	bootstrap/cache/compiled.php	/^        $table = $this->app['config']['session.table'];$/;"	v
table	bootstrap/cache/compiled.php	/^        $this->table = $table;$/;"	v
table	bootstrap/cache/compiled.php	/^    protected $table;$/;"	v
table	bootstrap/cache/compiled.php	/^    public function belongsToMany($related, $table = null, $foreignKey = null, $otherKey = null, $relation = null)$/;"	v
table	bootstrap/cache/compiled.php	/^    public function morphToMany($related, $name, $table = null, $foreignKey = null, $otherKey = null, $inverse = false)$/;"	v
table	bootstrap/cache/compiled.php	/^    public function morphedByMany($related, $name, $table = null, $foreignKey = null, $otherKey = null)$/;"	v
tag	bootstrap/cache/compiled.php	/^    public function tag($abstracts, $tags)$/;"	f
tag	bootstrap/cache/compiled.php	/^    public function tag($abstracts, $tags);$/;"	f
tagged	bootstrap/cache/compiled.php	/^    public function tagged($tag)$/;"	f
tagged	bootstrap/cache/compiled.php	/^    public function tagged($tag);$/;"	f
tags	bootstrap/cache/compiled.php	/^        $tags = $escaped ? $this->escapedTags : $this->contentTags;$/;"	v
tags	bootstrap/cache/compiled.php	/^        $tags = is_array($tags) ? $tags : array_slice(func_get_args(), 1);$/;"	v
tags	bootstrap/cache/compiled.php	/^    protected $tags = [];$/;"	v
tail	bootstrap/cache/compiled.php	/^        $tail = implode('\/', array_map('rawurlencode', (array) $extra));$/;"	v
tail	bootstrap/cache/compiled.php	/^    protected function trimUrl($root, $path, $tail = '')$/;"	v
take	bootstrap/cache/compiled.php	/^    public function take($limit)$/;"	f
talk	app/ApiResources/Talk.php	/^        $this->talk = $talk;$/;"	v
talk	app/ApiResources/Talk.php	/^    private $talk;$/;"	v
talk	app/Commands/CreateSubmission.php	/^        $talk = Talk::findOrFail($this->talkId);$/;"	v
talk	app/Http/Controllers/Api/TalksController.php	/^            $talk = OAuthGuard::user()->talks()->findOrFail($id);$/;"	v
talk	app/Http/Controllers/Api/TalksController.php	/^        $talk = new Talk($talk);$/;"	v
talk	app/Http/Controllers/PublicProfileController.php	/^        $talk = $user->talks()->public()->findOrFail($talk_id);$/;"	v
talk	app/Http/Controllers/SubmissionsController.php	/^        $talk = Auth::user()->talks()->findOrFail($request->get('talkId'));$/;"	v
talk	app/Http/Controllers/TalksController.php	/^            $talk = Auth::user()->talks()->findOrFail($talkId);$/;"	v
talk	app/Http/Controllers/TalksController.php	/^            $talk = new Talk;$/;"	v
talk	app/Http/Controllers/TalksController.php	/^        $talk = Auth::user()->talks()->findOrFail($id);$/;"	v
talk	app/Http/Controllers/TalksController.php	/^        $talk = new Talk;$/;"	v
talk	app/models/TalkRevision.php	/^    public function talk()$/;"	f
talk	tests/AccountTest.php	/^        $talk = Factory::build('talk');$/;"	v
talk	tests/PublicSpeakerProfileTest.php	/^        $talk = Factory::build('talk');$/;"	v
talk	tests/SubmissionTest.php	/^        $talk = Factory::create('talk', [$/;"	v
talk	tests/TalkTest.php	/^        $talk = Factory::create('talk', [$/;"	v
talk1	tests/SubmissionTest.php	/^        $talk1 = Factory::create('talk', [$/;"	v
talk1	tests/TalkTest.php	/^        $talk1 = Factory::create('talk', [$/;"	v
talk1revision	tests/SubmissionTest.php	/^        $talk1revision = Factory::create('talkRevision');$/;"	v
talk2	tests/SubmissionTest.php	/^        $talk2 = Factory::create('talk', [$/;"	v
talk2	tests/TalkTest.php	/^        $talk2 = Factory::create('talk', [$/;"	v
talk2revision	tests/SubmissionTest.php	/^        $talk2revision = Factory::create('talkRevision');$/;"	v
talkId	app/Commands/CreateSubmission.php	/^        $this->talkId = $talkId;$/;"	v
talkId	app/Commands/CreateSubmission.php	/^    private $talkId;$/;"	v
talkId	app/Commands/DestroySubmission.php	/^        $this->talkId = $talkId;$/;"	v
talkId	app/Commands/DestroySubmission.php	/^    private $talkId;$/;"	v
talkId	tests/Api/TalkApiTest.php	/^        $talkId = Talk::first()->id;$/;"	v
talkId	tests/Api/TalkApiTest.php	/^        $talkId = Talk::where('author_id', 2)->first()->id;$/;"	v
talkRevision	app/Commands/DestroySubmission.php	/^        $talkRevision = $conference->submissions()$/;"	v
talkRevision	tests/AccountTest.php	/^        $talkRevision = Factory::build('talkRevision');$/;"	v
talkRevision	tests/PublicSpeakerProfileTest.php	/^        $talkRevision = Factory::build('talkRevision');$/;"	v
talks	app/Http/Controllers/DashboardController.php	/^        $talks = Auth::user()->talks->sortBy(function ($talk) {$/;"	v
talks	app/Http/Controllers/PublicProfileController.php	/^        $talks = $user->talks()->public()->get()->sortBy(function ($talk) {$/;"	v
talks	app/Http/Controllers/TalksController.php	/^                $talks = Auth::user()->talks->sortBy(function ($talk) {$/;"	v
talks	app/Http/Controllers/TalksController.php	/^                $talks = Auth::user()->talks->sortByDesc('created_at');$/;"	v
talks	app/User.php	/^    public function talks()$/;"	f
talks	app/models/Conference.php	/^        $talks = Auth::user()->talks;$/;"	v
talks	database/migrations/2015_05_24_113910_drop_versions.php	/^        $talks = DB::table('talks')->get();$/;"	v
talks	tests/TalkTest.php	/^        $talks = $user->talks;$/;"	v
talksAtConference	app/Http/Controllers/ConferencesController.php	/^        $talksAtConference = $conference->myTalks()->map(function ($talkRevision) {$/;"	v
talks_are_sorted_alphabetically	tests/TalkTest.php	/^    public function talks_are_sorted_alphabetically()$/;"	f
target	bootstrap/cache/compiled.php	/^            $target = $destination . '\/' . $item->getBasename();$/;"	v
targetDirs	bootstrap/cache/compiled.php	/^        $targetDirs = explode('\/', isset($path[0]) && '\/' === $path[0] ? substr($path, 1) : $path);$/;"	v
targetFile	bootstrap/cache/compiled.php	/^        $targetFile = array_pop($targetDirs);$/;"	v
tempName	app/Http/Controllers/AccountController.php	/^        $tempName = sprintf('%d_export.json', $user->id);$/;"	v
terminate	bootstrap/cache/compiled.php	/^    public function terminate($request, $response)$/;"	f
terminate	bootstrap/cache/compiled.php	/^    public function terminate($request, $response);$/;"	f
terminate	bootstrap/cache/compiled.php	/^    public function terminate()$/;"	f
terminate	bootstrap/cache/compiled.php	/^    public function terminate(Request $request, Response $response);$/;"	f
terminating	bootstrap/cache/compiled.php	/^    public function terminating(Closure $callback)$/;"	f
terminatingCallbacks	bootstrap/cache/compiled.php	/^    protected $terminatingCallbacks = [];$/;"	v
terribleTalk	database/seeds/TalksSeeder.php	/^        $terribleTalk = $author->talks()->create([]);$/;"	v
test	composer.json	/^        "test": "phpunit"$/;"	f
testAllTalksReturnAlphaSorted	tests/Api/TalkApiTest.php	/^    public function testAllTalksReturnAlphaSorted()$/;"	f
testCannotFetchAllBiosForOtherUser	tests/Api/BioApiTest.php	/^    public function testCannotFetchAllBiosForOtherUser()$/;"	f
testCannotFetchAllTalksForOtherUser	tests/Api/TalkApiTest.php	/^    public function testCannotFetchAllTalksForOtherUser()$/;"	f
testCannotFetchOneBioForOtherUser	tests/Api/BioApiTest.php	/^    public function testCannotFetchOneBioForOtherUser()$/;"	f
testCannotFetchOneTalkForOtherUser	tests/Api/TalkApiTest.php	/^    public function testCannotFetchOneTalkForOtherUser()$/;"	f
testCannotTestMeIfUnAuthenticated	tests/Api/OAuthTest.php	/^    public function testCannotTestMeIfUnAuthenticated()$/;"	f
testCfpUrlReturnsIfSet	tests/Api/ConferenceApiTest.php	/^    public function testCfpUrlReturnsIfSet()$/;"	f
testCfpUrlReturnsNullOnApiIfNotSet	tests/Api/ConferenceApiTest.php	/^    public function testCfpUrlReturnsNullOnApiIfNotSet()$/;"	f
testFetchesAllBiosForUser	tests/Api/BioApiTest.php	/^    public function testFetchesAllBiosForUser()$/;"	f
testFetchesAllConferences	tests/Api/ConferenceApiTest.php	/^    public function testFetchesAllConferences()$/;"	f
testFetchesAllTalksForUser	tests/Api/TalkApiTest.php	/^    public function testFetchesAllTalksForUser()$/;"	f
testFetchesMyInfo	tests/Api/MeApiTest.php	/^    public function testFetchesMyInfo()$/;"	f
testFetchesOneBio	tests/Api/BioApiTest.php	/^    public function testFetchesOneBio()$/;"	f
testFetchesOneConference	tests/Api/ConferenceApiTest.php	/^    public function testFetchesOneConference()$/;"	f
testFetchesOneTalk	tests/Api/TalkApiTest.php	/^    public function testFetchesOneTalk()$/;"	f
testMustBeAuthenticated	tests/Api/BioApiTest.php	/^    \/\/ public function testMustBeAuthenticated()$/;"	f
testUsesCorrectJsonApiHeader	tests/Api/JsonApiTest.php	/^    public function testUsesCorrectJsonApiHeader()$/;"	f
test_disabled_profile_user_cannot_be_contacted	tests/PublicSpeakerProfileTest.php	/^    public function test_disabled_profile_user_cannot_be_contacted()$/;"	f
test_it_deletes_the_user_account	tests/AccountTest.php	/^    public function test_it_deletes_the_user_account()$/;"	f
test_it_deletes_users_associated_entities	tests/AccountTest.php	/^    public function test_it_deletes_users_associated_entities()$/;"	f
test_it_does_not_list_talks_marked_not_public	tests/PublicSpeakerProfileTest.php	/^    public function test_it_does_not_list_talks_marked_not_public()$/;"	f
test_it_does_not_show_a_profile_for_non_public_speakers	tests/PublicSpeakerProfileTest.php	/^    public function test_it_does_not_show_a_profile_for_non_public_speakers()$/;"	f
test_it_does_not_show_bios_for_another_user	tests/PublicSpeakerProfileTest.php	/^    public function test_it_does_not_show_bios_for_another_user()$/;"	f
test_it_does_not_show_bios_marked_not_public	tests/PublicSpeakerProfileTest.php	/^    public function test_it_does_not_show_bios_marked_not_public()$/;"	f
test_it_does_not_show_contact_for_non_contactable_users	tests/PublicSpeakerProfileTest.php	/^    public function test_it_does_not_show_contact_for_non_contactable_users()$/;"	f
test_it_does_not_show_talks_for_another_user	tests/PublicSpeakerProfileTest.php	/^    public function test_it_does_not_show_talks_for_another_user()$/;"	f
test_it_does_not_show_talks_marked_not_public	tests/PublicSpeakerProfileTest.php	/^    public function test_it_does_not_show_talks_marked_not_public()$/;"	f
test_it_shows_a_profile_for_public_speakers	tests/PublicSpeakerProfileTest.php	/^    public function test_it_shows_a_profile_for_public_speakers()$/;"	f
test_it_shows_bios_marked_public	tests/PublicSpeakerProfileTest.php	/^    public function test_it_shows_bios_marked_public()$/;"	f
test_it_shows_contact_for_contactable_users	tests/PublicSpeakerProfileTest.php	/^    public function test_it_shows_contact_for_contactable_users()$/;"	f
test_it_shows_talks_marked_public	tests/PublicSpeakerProfileTest.php	/^    public function test_it_shows_talks_marked_public()$/;"	f
test_public_profile_page_is_off_by_default	tests/PublicSpeakerProfileTest.php	/^    public function test_public_profile_page_is_off_by_default()$/;"	f
text	bootstrap/cache/compiled.php	/^    public function setStatusCode($code, $text = null)$/;"	v
then	bootstrap/cache/compiled.php	/^    public function then(Closure $destination)$/;"	f
then	bootstrap/cache/compiled.php	/^    public function then(Closure $destination);$/;"	f
thomaswelton/laravel-gravatar	composer.json	/^        "thomaswelton\/laravel-gravatar": "dev-laravel5-support",$/;"	f
throttles	bootstrap/cache/compiled.php	/^        $throttles = $this->isUsingThrottlesLoginsTrait();$/;"	v
through	bootstrap/cache/compiled.php	/^        $through = new $through();$/;"	v
through	bootstrap/cache/compiled.php	/^    public function through($pipes)$/;"	f
through	bootstrap/cache/compiled.php	/^    public function through($stops);$/;"	f
throw	bootstrap/cache/compiled.php	/^                                    $throw = $e;$/;"	v
throw	bootstrap/cache/compiled.php	/^                $throw = new ContextErrorException($this->levels[$type] . ': ' . $message, 0, $type, $file, $line, $context);$/;"	v
throw	bootstrap/cache/compiled.php	/^                $throw = new \\ErrorException($this->levels[$type] . ': ' . $message, 0, $type, $file, $line);$/;"	v
throw	bootstrap/cache/compiled.php	/^                $throw = self::$toStringException;$/;"	v
throw	bootstrap/cache/compiled.php	/^        $throw = $this->thrownErrors & $type & $level;$/;"	v
throwAt	bootstrap/cache/compiled.php	/^    public function throwAt($levels, $replace = false)$/;"	f
throwEncodeError	bootstrap/cache/compiled.php	/^    private function throwEncodeError($code, $data)$/;"	f
throwResponse	bootstrap/cache/compiled.php	/^    public function throwResponse()$/;"	f
throwValidationException	bootstrap/cache/compiled.php	/^    protected function throwValidationException(Request $request, $validator)$/;"	f
thrownErrors	bootstrap/cache/compiled.php	/^        $this->thrownErrors = ($levels | E_RECOVERABLE_ERROR | E_USER_ERROR) & ~E_USER_DEPRECATED & ~E_DEPRECATED;$/;"	v
thrownErrors	bootstrap/cache/compiled.php	/^    private $thrownErrors = 0x1fff;$/;"	v
thujohn/twitter	composer.json	/^        "thujohn\/twitter": "dev-master",$/;"	f
time	bootstrap/cache/compiled.php	/^        $time = $minutes == 0 ? 0 : time() + $minutes * 60;$/;"	v
time	bootstrap/cache/compiled.php	/^        $time = $this->freshTimestamp();$/;"	v
timeStamp	bootstrap/cache/compiled.php	/^            $timeStamp = time();$/;"	v
timeStamp	bootstrap/cache/compiled.php	/^        $timeStamp = time();$/;"	v
timedFilename	bootstrap/cache/compiled.php	/^        $timedFilename = str_replace(array('{filename}', '{date}'), array($fileInfo['filename'], date($this->dateFormat)), $fileInfo['dirname'] . '\/' . $this->filenameFormat);$/;"	v
timestamps	bootstrap/cache/compiled.php	/^    public $timestamps = true;$/;"	v
timezone	bootstrap/cache/compiled.php	/^    protected static $timezone;$/;"	v
title	app/Console/Commands/TweetImportantCFPDates.php	/^        $title = $this->shortenForTwitter($conference->title, $availableChars);$/;"	v
title	app/macros.php	/^HTML::macro('activeLinkRoute', function ($keysWithDefaults, $route, $title = null, $parameters = [], $attributes = [], $activeClass = 'is-active') {$/;"	v
title	app/models/TalkRevision.php	/^    protected $title;$/;"	v
title	bootstrap/cache/compiled.php	/^                    $title = 'Whoops, looks like something went wrong.';$/;"	v
title	bootstrap/cache/compiled.php	/^                    $title = sprintf('Exception thrown when handling an exception (%s: %s)', get_class($e), $this->escapeHtml($e->getMessage()));$/;"	v
title	bootstrap/cache/compiled.php	/^                $title = 'Sorry, the page you are looking for could not be found.';$/;"	v
title	bootstrap/cache/compiled.php	/^                $title = 'Whoops, looks like something went wrong.';$/;"	v
title	bootstrap/cache/compiled.php	/^        $title = preg_replace('![' . preg_quote($flip) . ']+!u', $separator, $title);$/;"	v
title	bootstrap/cache/compiled.php	/^        $title = preg_replace('![' . preg_quote($separator) . '\\\\s]+!u', $separator, $title);$/;"	v
title	bootstrap/cache/compiled.php	/^        $title = preg_replace('![^' . preg_quote($separator) . '\\\\pL\\\\pN\\\\s]+!u', '', mb_strtolower($title));$/;"	v
title	bootstrap/cache/compiled.php	/^        $title = static::ascii($title);$/;"	v
title	bootstrap/cache/compiled.php	/^    public static function title($value)$/;"	f
titles	tests/Api/TalkApiTest.php	/^        $titles = $data->pluck('attributes.title');$/;"	v
to	bootstrap/cache/compiled.php	/^    public function to($path, $extra = [], $secure = null)$/;"	f
to	bootstrap/cache/compiled.php	/^    public function to($path, $extra = [], $secure = null);$/;"	f
toArray	app/ApiResources/Bio.php	/^    public function toArray()$/;"	f
toArray	app/ApiResources/Conference.php	/^    public function toArray()$/;"	f
toArray	app/ApiResources/Me.php	/^    public function toArray()$/;"	f
toArray	app/ApiResources/Talk.php	/^    public function toArray()$/;"	f
toArray	bootstrap/cache/compiled.php	/^    public function toArray()$/;"	f
toArray	bootstrap/cache/compiled.php	/^    public function toArray();$/;"	f
toHtml	bootstrap/cache/compiled.php	/^    public function toHtml()$/;"	f
toJson	bootstrap/cache/compiled.php	/^    protected function toJson($data, $ignoreErrors = false)$/;"	f
toJson	bootstrap/cache/compiled.php	/^    public function toJson($options = 0)$/;"	f
toJson	bootstrap/cache/compiled.php	/^    public function toJson($options = 0);$/;"	f
toMonologLevel	bootstrap/cache/compiled.php	/^    public static function toMonologLevel($level)$/;"	f
toRegex	bootstrap/cache/compiled.php	/^    protected abstract function toRegex($str);$/;"	f
toRegex	bootstrap/cache/compiled.php	/^    protected function toRegex($str)$/;"	f
toRegex	bootstrap/cache/compiled.php	/^    public static function toRegex($glob, $strictLeadingDot = true, $strictWildcardSlash = true, $delimiter = '#')$/;"	f
toRoute	bootstrap/cache/compiled.php	/^    protected function toRoute($route, $parameters, $absolute)$/;"	f
toStringException	bootstrap/cache/compiled.php	/^    private static $toStringException = null;$/;"	v
token	bootstrap/cache/compiled.php	/^                $token = $tokens[$i];$/;"	v
token	bootstrap/cache/compiled.php	/^            $token = $this->encrypter->decrypt($header);$/;"	v
token	bootstrap/cache/compiled.php	/^        $token = $request->input('_token') ?: $request->header('X-CSRF-TOKEN');$/;"	v
token	bootstrap/cache/compiled.php	/^        $token = $tokens[$index];$/;"	v
token	bootstrap/cache/compiled.php	/^    public function getReset(Request $request, $token = null)$/;"	v
token	bootstrap/cache/compiled.php	/^    public function showResetForm(Request $request, $token = null)$/;"	v
token	bootstrap/cache/compiled.php	/^    public function token()$/;"	f
tokenRetrievalAttempted	bootstrap/cache/compiled.php	/^            $this->tokenRetrievalAttempted = true;$/;"	v
tokenRetrievalAttempted	bootstrap/cache/compiled.php	/^    protected $tokenRetrievalAttempted = false;$/;"	v
tokens	bootstrap/cache/compiled.php	/^        $this->tokens = $data['path_tokens'];$/;"	v
tokens	bootstrap/cache/compiled.php	/^        $this->tokens = $tokens;$/;"	v
tokens	bootstrap/cache/compiled.php	/^        $tokens = $result['tokens'];$/;"	v
tokens	bootstrap/cache/compiled.php	/^        $tokens = array();$/;"	v
tokens	bootstrap/cache/compiled.php	/^    private $tokens;$/;"	v
tokensMatch	bootstrap/cache/compiled.php	/^    protected function tokensMatch($request)$/;"	f
total	bootstrap/cache/compiled.php	/^                $total = $count + 1;$/;"	v
totallyGuarded	bootstrap/cache/compiled.php	/^        $totallyGuarded = $this->totallyGuarded();$/;"	v
totallyGuarded	bootstrap/cache/compiled.php	/^    public function totallyGuarded()$/;"	f
touch	bootstrap/cache/compiled.php	/^    public function touch()$/;"	f
touchOwners	bootstrap/cache/compiled.php	/^    public function touchOwners()$/;"	f
touches	bootstrap/cache/compiled.php	/^        $this->touches = $touches;$/;"	v
touches	bootstrap/cache/compiled.php	/^    protected $touches = [];$/;"	v
touches	bootstrap/cache/compiled.php	/^    public function touches($relation)$/;"	f
trace	bootstrap/cache/compiled.php	/^            $trace = false;$/;"	v
trace	bootstrap/cache/compiled.php	/^            $trace = isset($error['backtrace']) ? $error['backtrace'] : null;$/;"	v
trace	bootstrap/cache/compiled.php	/^        $trace = $e->getTrace();$/;"	v
trace	bootstrap/cache/compiled.php	/^        $trace = true;$/;"	v
traceAt	bootstrap/cache/compiled.php	/^    public function traceAt($levels, $replace = false)$/;"	f
traceOffset	bootstrap/cache/compiled.php	/^    protected function fatalExceptionFromError(array $error, $traceOffset = null)$/;"	v
tracedErrors	bootstrap/cache/compiled.php	/^        $this->tracedErrors = (int) $levels;$/;"	v
tracedErrors	bootstrap/cache/compiled.php	/^    private $tracedErrors = 0x77fb;$/;"	v
transform	bootstrap/cache/compiled.php	/^    protected function transform($messages, $format, $messageKey)$/;"	f
transform	bootstrap/cache/compiled.php	/^    public function transform(callable $callback)$/;"	f
transformDependency	bootstrap/cache/compiled.php	/^    protected function transformDependency(ReflectionParameter $parameter, $parameters, $originalParameters)$/;"	f
tree	bootstrap/cache/compiled.php	/^            $tree = str_replace(DIRECTORY_SEPARATOR, '.', $tree) . '.';$/;"	v
trimUrl	bootstrap/cache/compiled.php	/^    protected function trimUrl($root, $path, $tail = '')$/;"	f
trueBio	database/seeds/BiosSeeder.php	/^        $trueBio = $author->bios()->create(['nickname' => 'True Bio', 'body' => 'I am a person.']);$/;"	v
truncatedRequestUri	bootstrap/cache/compiled.php	/^            $truncatedRequestUri = substr($requestUri, 0, $pos);$/;"	v
truncatedRequestUri	bootstrap/cache/compiled.php	/^        $truncatedRequestUri = $requestUri;$/;"	v
trustedHeaders	bootstrap/cache/compiled.php	/^    protected static $trustedHeaders = array(self::HEADER_FORWARDED => 'FORWARDED', self::HEADER_CLIENT_IP => 'X_FORWARDED_FOR', self::HEADER_CLIENT_HOST => 'X_FORWARDED_HOST', self::HEADER_CLIENT_PROTO => 'X_FORWARDED_PROTO', self::HEADER_CLIENT_PORT => 'X_FORWARDED_PORT');$/;"	v
trustedHostPatterns	bootstrap/cache/compiled.php	/^    protected static $trustedHostPatterns = array();$/;"	v
trustedHosts	bootstrap/cache/compiled.php	/^    protected static $trustedHosts = array();$/;"	v
trustedProxies	bootstrap/cache/compiled.php	/^    protected static $trustedProxies = array();$/;"	v
ts	bootstrap/cache/compiled.php	/^            $ts = \\DateTime::createFromFormat('U.u', sprintf('%.6F', microtime(true)), static::$timezone);$/;"	v
ts	bootstrap/cache/compiled.php	/^            $ts = new \\DateTime(null, static::$timezone);$/;"	v
tweet	app/Console/Commands/TweetImportantCFPDates.php	/^    private function tweet($message)$/;"	f
tweetCfpsClosingTomorrow	app/Console/Commands/TweetImportantCFPDates.php	/^    private function tweetCfpsClosingTomorrow()$/;"	f
tweetCfpsOpeningToday	app/Console/Commands/TweetImportantCFPDates.php	/^    private function tweetCfpsOpeningToday()$/;"	f
tweetWaitSeconds	app/Console/Commands/TweetImportantCFPDates.php	/^        $this->tweetWaitSeconds = $tweetWaitSeconds;$/;"	v
tweetWaitSeconds	app/Console/Commands/TweetImportantCFPDates.php	/^    public function __construct(Twitter $twitter, $tweetWaitSeconds = 30)$/;"	v
tweetable	app/Console/Commands/TweetImportantCFPDates.php	/^    private function tweetable($conferences)$/;"	f
twitter	app/Console/Commands/TweetImportantCFPDates.php	/^        $this->twitter = $twitter;$/;"	v
twitter	tests/Console/Commands/TweetImportantCFPDatesTest.php	/^        $this->twitter = m::mock(Twitter::class);$/;"	v
type	app/models/TalkRevision.php	/^    protected $type;$/;"	v
type	bootstrap/cache/compiled.php	/^                    $type = $mimeType;$/;"	v
type	bootstrap/cache/compiled.php	/^                $type = $contentType;$/;"	v
type	bootstrap/cache/compiled.php	/^                $type = $log[2]['type'];$/;"	v
type	bootstrap/cache/compiled.php	/^            foreach ($levels as $type => $logLevel) {$/;"	v
type	bootstrap/cache/compiled.php	/^            foreach ($this->loggers as $type => $log) {$/;"	v
type	bootstrap/cache/compiled.php	/^        $type = $exception instanceof FatalErrorException ? $exception->getSeverity() : E_ERROR;$/;"	v
type	bootstrap/cache/compiled.php	/^        $type = $type ?: $name . '_type';$/;"	v
type	bootstrap/cache/compiled.php	/^        foreach ($callbacksPerType as $type => $callbacks) {$/;"	v
type	bootstrap/cache/compiled.php	/^        foreach ($loggers as $type => $log) {$/;"	v
type	bootstrap/cache/compiled.php	/^    protected function setPdoForType(Connection $connection, $type = null)$/;"	v
type	bootstrap/cache/compiled.php	/^    public function handle(Request $request, $type = self::MASTER_REQUEST, $catch = true);$/;"	v
type	bootstrap/cache/compiled.php	/^    public function handle(SymfonyRequest $request, $type = self::MASTER_REQUEST, $catch = true)$/;"	v
type	bootstrap/cache/compiled.php	/^    public function morphMany($related, $name, $type = null, $id = null, $localKey = null)$/;"	v
type	bootstrap/cache/compiled.php	/^    public function morphOne($related, $name, $type = null, $id = null, $localKey = null)$/;"	v
type	bootstrap/cache/compiled.php	/^    public function morphTo($name = null, $type = null, $id = null)$/;"	v
type	bootstrap/cache/compiled.php	/^    public function type($path)$/;"	f
type	composer.json	/^            "type": "git",$/;"	f
type	composer.json	/^    "type": "project",$/;"	f
types	bootstrap/cache/compiled.php	/^        $types = (array) $contentTypes;$/;"	v
types	bootstrap/cache/compiled.php	/^    public function hasCast($key, $types = null)$/;"	v
ucfirst	bootstrap/cache/compiled.php	/^    public static function ucfirst($string)$/;"	f
un_submitting_deletes_only_this_conference_submission	tests/SubmissionTest.php	/^    public function un_submitting_deletes_only_this_conference_submission()$/;"	f
un_submitting_deletes_submission	tests/SubmissionTest.php	/^    public function un_submitting_deletes_submission()$/;"	f
un_submitting_does_not_delete_conference	tests/SubmissionTest.php	/^    public function un_submitting_does_not_delete_conference()$/;"	f
un_submitting_one_revision_of_many_works	tests/SubmissionTest.php	/^    public function un_submitting_one_revision_of_many_works()$/;"	f
unfavorite	app/Http/Controllers/ConferencesController.php	/^    public function unfavorite($conferenceId)$/;"	f
unguard	bootstrap/cache/compiled.php	/^    public static function unguard($state = true)$/;"	f
unguarded	bootstrap/cache/compiled.php	/^    protected static $unguarded = false;$/;"	v
unguarded	bootstrap/cache/compiled.php	/^    public static function unguarded(callable $callback)$/;"	f
union	bootstrap/cache/compiled.php	/^    public function union($items)$/;"	f
unique	bootstrap/cache/compiled.php	/^    public function unique($format = null)$/;"	f
unique	bootstrap/cache/compiled.php	/^    public function unique($key = null)$/;"	f
uniqueKey	bootstrap/cache/compiled.php	/^        $uniqueKey = str_replace('_', '-', strtolower($key));$/;"	v
unqueue	bootstrap/cache/compiled.php	/^    public function unqueue($name)$/;"	f
unqueue	bootstrap/cache/compiled.php	/^    public function unqueue($name);$/;"	f
unserialize	bootstrap/cache/compiled.php	/^    public function unserialize($serialized)$/;"	f
unsetConnectionResolver	bootstrap/cache/compiled.php	/^    public static function unsetConnectionResolver()$/;"	f
unsetEventDispatcher	bootstrap/cache/compiled.php	/^    public static function unsetEventDispatcher()$/;"	f
unstackErrors	bootstrap/cache/compiled.php	/^    public static function unstackErrors()$/;"	f
until	bootstrap/cache/compiled.php	/^    public function until($event, $payload = [])$/;"	f
until	bootstrap/cache/compiled.php	/^    public function until($event, $payload = []);$/;"	f
up	database/migrations/2013_12_03_023320_create_users_table.php	/^    public function up()$/;"	f
up	database/migrations/2013_12_03_160343_create_talks_table.php	/^    public function up()$/;"	f
up	database/migrations/2014_02_20_141801_add_remember_token.php	/^    public function up()$/;"	f
up	database/migrations/2014_04_24_110151_create_oauth_scopes_table.php	/^    public function up()$/;"	f
up	database/migrations/2014_04_24_110304_create_oauth_grants_table.php	/^    public function up()$/;"	f
up	database/migrations/2014_04_24_110403_create_oauth_grant_scopes_table.php	/^    public function up()$/;"	f
up	database/migrations/2014_04_24_110459_create_oauth_clients_table.php	/^    public function up()$/;"	f
up	database/migrations/2014_04_24_110557_create_oauth_client_endpoints_table.php	/^    public function up()$/;"	f
up	database/migrations/2014_04_24_110705_create_oauth_client_scopes_table.php	/^    public function up()$/;"	f
up	database/migrations/2014_04_24_110817_create_oauth_client_grants_table.php	/^    public function up()$/;"	f
up	database/migrations/2014_04_24_111002_create_oauth_sessions_table.php	/^    public function up()$/;"	f
up	database/migrations/2014_04_24_111109_create_oauth_session_scopes_table.php	/^    public function up()$/;"	f
up	database/migrations/2014_04_24_111254_create_oauth_auth_codes_table.php	/^    public function up()$/;"	f
up	database/migrations/2014_04_24_111403_create_oauth_auth_code_scopes_table.php	/^    public function up()$/;"	f
up	database/migrations/2014_04_24_111518_create_oauth_access_tokens_table.php	/^    public function up()$/;"	f
up	database/migrations/2014_04_24_111657_create_oauth_access_token_scopes_table.php	/^    public function up()$/;"	f
up	database/migrations/2014_04_24_111810_create_oauth_refresh_tokens_table.php	/^    public function up()$/;"	f
up	database/migrations/2014_10_12_100000_create_password_resets_table.php	/^    public function up()$/;"	f
up	database/migrations/2014_12_20_194450_drop_talk_slug.php	/^    public function up()$/;"	f
up	database/migrations/2014_12_20_194826_ununique_talk_title.php	/^    public function up()$/;"	f
up	database/migrations/2014_12_20_201427_uuidize_talks_table.php	/^    public function up()$/;"	f
up	database/migrations/2014_12_20_205957_create_conferences_table.php	/^    public function up()$/;"	f
up	database/migrations/2014_12_21_035318_flesh_out_conferences.php	/^    public function up()$/;"	f
up	database/migrations/2014_12_21_165443_add_joindin_id_to_conferences_table.php	/^    public function up()$/;"	f
up	database/migrations/2014_12_21_214307_allow_null_conference_dates.php	/^    public function up()$/;"	f
up	database/migrations/2014_12_22_203655_add_favorites_table.php	/^    public function up()$/;"	f
up	database/migrations/2014_12_23_130853_version_and_revision_talks.php	/^    public function up()$/;"	f
up	database/migrations/2015_01_05_170059_add_roles_to_users.php	/^    public function up()$/;"	f
up	database/migrations/2015_01_08_145004_drop_unique_conference_title.php	/^    public function up()$/;"	f
up	database/migrations/2015_01_19_210855_allow_null_conference_dates_take_two.php	/^    public function up()$/;"	f
up	database/migrations/2015_01_30_023351_create_submissions_table.php	/^    public function up()$/;"	f
up	database/migrations/2015_05_08_033314_create_bios_table.php	/^    public function up()$/;"	f
up	database/migrations/2015_05_24_113910_drop_versions.php	/^    public function up()$/;"	f
up	database/migrations/2015_07_09_224728_remove_outline.php	/^    public function up()$/;"	f
up	database/migrations/2015_08_27_125402_add_public_profile_fields_to_users_table.php	/^    public function up()$/;"	f
up	database/migrations/2015_10_25_125123_add_talk_revision_slides.php	/^    public function up()$/;"	f
up	database/migrations/2015_11_18_151911_merge_first_and_last_name_into_name.php	/^    public function up()$/;"	f
up	database/migrations/2015_11_22_085323_add_public_field_to_talks.php	/^    public function up()$/;"	f
up	database/migrations/2015_11_24_235241_add_public_field_to_bios_table.php	/^    public function up()$/;"	f
up	database/migrations/2016_06_25_234552_add_cfp_url_to_conferences_table.php	/^    public function up()$/;"	f
update	app/Http/Controllers/AccountController.php	/^    public function update(Request $request)$/;"	f
update	app/Http/Controllers/BiosController.php	/^    public function update($id, Request $request)$/;"	f
update	app/Http/Controllers/ConferencesController.php	/^    public function update($id, Request $request)$/;"	f
update	app/Http/Controllers/TalksController.php	/^    public function update($talkId)$/;"	f
update	bootstrap/cache/compiled.php	/^    public function update(array $attributes = [], array $options = [])$/;"	f
updateConferenceFromJoindInEvent	app/JoindIn/ConferenceImporter.php	/^    private function updateConferenceFromJoindInEvent($conference, $event)$/;"	f
updateGroupStack	bootstrap/cache/compiled.php	/^    protected function updateGroupStack(array $attributes)$/;"	f
updateRememberToken	bootstrap/cache/compiled.php	/^    public function updateRememberToken(Authenticatable $user, $token);$/;"	f
updateRememberToken	bootstrap/cache/compiled.php	/^    public function updateRememberToken(UserContract $user, $token)$/;"	f
updateSession	bootstrap/cache/compiled.php	/^    protected function updateSession($id)$/;"	f
updateThreshold	bootstrap/cache/compiled.php	/^        $this->updateThreshold = $updateThreshold;$/;"	v
updateThreshold	bootstrap/cache/compiled.php	/^    private $updateThreshold;$/;"	v
updateThreshold	bootstrap/cache/compiled.php	/^    public function __construct($storageKey = '_sf2_meta', $updateThreshold = 0)$/;"	v
updateTimestamps	bootstrap/cache/compiled.php	/^    protected function updateTimestamps()$/;"	f
updated	bootstrap/cache/compiled.php	/^    public static function updated($callback, $priority = 0)$/;"	f
updating	bootstrap/cache/compiled.php	/^    public static function updating($callback, $priority = 0)$/;"	f
upper	bootstrap/cache/compiled.php	/^    public static function upper($value)$/;"	f
uri	bootstrap/cache/compiled.php	/^            $uri = preg_replace('\/#.*\/', '', $uri);$/;"	v
uri	bootstrap/cache/compiled.php	/^        $this->uri = $uri;$/;"	v
uri	bootstrap/cache/compiled.php	/^        $this->uri = trim($uri, '\/');$/;"	v
uri	bootstrap/cache/compiled.php	/^        $uri = $this->addQueryString($this->trimUrl($root = $this->replaceRoot($route, $domain, $parameters), $this->replaceRouteParameters($route->uri(), $parameters)), $parameters);$/;"	v
uri	bootstrap/cache/compiled.php	/^        $uri = $this->addUriWildcards($plain = $this->getPlainUri($name, $prefix));$/;"	v
uri	bootstrap/cache/compiled.php	/^        $uri = preg_replace('\/\\\\{(\\\\w+?)\\\\?\\\\}\/', '{$1}', $this->uri);$/;"	v
uri	bootstrap/cache/compiled.php	/^        $uri = rtrim($prefix, '\/') . '\/' . ltrim($this->uri, '\/');$/;"	v
uri	bootstrap/cache/compiled.php	/^        $uri = strtr(rawurlencode($uri), $this->dontEncode);$/;"	v
uri	bootstrap/cache/compiled.php	/^        foreach ($controllers as $uri => $controller) {$/;"	v
uri	bootstrap/cache/compiled.php	/^    protected $uri;$/;"	v
uri	bootstrap/cache/compiled.php	/^    public function uri()$/;"	f
uri	server.php	/^$uri = urldecode($/;"	v
url	bootstrap/cache/compiled.php	/^            $this->url = $stream;$/;"	v
url	bootstrap/cache/compiled.php	/^            $url = new UrlGenerator($routes, $app->rebinding('request', $this->requestRebinder()));$/;"	v
url	bootstrap/cache/compiled.php	/^        $this->url = $this->getTimedFilename();$/;"	v
url	bootstrap/cache/compiled.php	/^        $url = $referrer ? $this->to($referrer) : $this->getPreviousUrlFromSession();$/;"	v
url	bootstrap/cache/compiled.php	/^        $url = $this->fullUrl();$/;"	v
url	bootstrap/cache/compiled.php	/^        $url = $this->redirector->getUrlGenerator();$/;"	v
url	bootstrap/cache/compiled.php	/^    protected $url;$/;"	v
url	bootstrap/cache/compiled.php	/^    public function url($page)$/;"	f
url	bootstrap/cache/compiled.php	/^    public function url($page);$/;"	f
url	bootstrap/cache/compiled.php	/^    public function url()$/;"	f
url	composer.json	/^            "url": "git@github.com:mattstauffer\/joindin-client.git"$/;"	f
url	composer.json	/^            "url": "git@github.com:mattstauffer\/laravel-gravatar.git"$/;"	f
urls	bootstrap/cache/compiled.php	/^        $urls = [];$/;"	v
useAsCallable	bootstrap/cache/compiled.php	/^    protected function useAsCallable($value)$/;"	f
useDailyFiles	bootstrap/cache/compiled.php	/^    public function useDailyFiles($path, $days = 0, $level = 'debug')$/;"	f
useDailyFiles	bootstrap/cache/compiled.php	/^    public function useDailyFiles($path, $days = 0, $level = 'debug');$/;"	f
useDatabasePath	bootstrap/cache/compiled.php	/^    public function useDatabasePath($path)$/;"	f
useEnvironmentPath	bootstrap/cache/compiled.php	/^    public function useEnvironmentPath($path)$/;"	f
useErrorLog	bootstrap/cache/compiled.php	/^    public function useErrorLog($level = 'debug', $messageType = ErrorLogHandler::OPERATING_SYSTEM)$/;"	f
useFiles	bootstrap/cache/compiled.php	/^    public function useFiles($path, $level = 'debug')$/;"	f
useFiles	bootstrap/cache/compiled.php	/^    public function useFiles($path, $level = 'debug');$/;"	f
useLocking	bootstrap/cache/compiled.php	/^        $this->useLocking = $useLocking;$/;"	v
useLocking	bootstrap/cache/compiled.php	/^    protected $useLocking;$/;"	v
useMicrosecondTimestamps	bootstrap/cache/compiled.php	/^    public function useMicrosecondTimestamps($micro)$/;"	f
useStoragePath	bootstrap/cache/compiled.php	/^    public function useStoragePath($path)$/;"	f
useSyslog	bootstrap/cache/compiled.php	/^    public function useSyslog($name = 'laravel', $level = 'debug')$/;"	f
user	app/ApiResources/Me.php	/^        $this->user = $user;$/;"	v
user	app/ApiResources/Me.php	/^    private $user;$/;"	v
user	app/Http/Controllers/AccountController.php	/^        $user = Auth::user();$/;"	v
user	app/Http/Controllers/AccountController.php	/^        $user = new User;$/;"	v
user	app/Http/Controllers/PublicProfileController.php	/^        $user = $this->getPublicUserByProfileSlug($profile_slug);$/;"	v
user	app/OAuthGuard/OAuthGuard.php	/^    public function user()$/;"	f
user	app/Services/CreateBioForm.php	/^        $this->user = $user;$/;"	v
user	app/Services/CreateBioForm.php	/^    private $user;$/;"	v
user	app/Services/CreateConferenceForm.php	/^        $this->user = $user;$/;"	v
user	app/Services/CreateConferenceForm.php	/^    private $user;$/;"	v
user	app/models/Bio.php	/^    public function user()$/;"	f
user	bootstrap/cache/compiled.php	/^            $user = $this->getUserByRecaller($recaller);$/;"	v
user	bootstrap/cache/compiled.php	/^            $user = $this->provider->retrieveById($id);$/;"	v
user	bootstrap/cache/compiled.php	/^        $this->user = $user;$/;"	v
user	bootstrap/cache/compiled.php	/^        $this->user = null;$/;"	v
user	bootstrap/cache/compiled.php	/^        $user = $this->provider->retrieveById($id);$/;"	v
user	bootstrap/cache/compiled.php	/^        $user = $this->user();$/;"	v
user	bootstrap/cache/compiled.php	/^        $user = null;$/;"	v
user	bootstrap/cache/compiled.php	/^        return $this->user = $user;$/;"	v
user	bootstrap/cache/compiled.php	/^    public function user($guard = null)$/;"	f
user	bootstrap/cache/compiled.php	/^    public function user()$/;"	f
user	bootstrap/cache/compiled.php	/^    public function user();$/;"	f
user	tests/AccountTest.php	/^        $user = Factory::create('user');$/;"	v
user	tests/ConferenceTest.php	/^        $user = Factory::create('user');        $/;"	v
user	tests/PublicSpeakerProfileTest.php	/^        $user = Factory::create('user', [$/;"	v
user	tests/SubmissionTest.php	/^        $user = Factory::create('user');$/;"	v
user	tests/TalkTest.php	/^        $user = Factory::create('user');$/;"	v
user2	tests/PublicSpeakerProfileTest.php	/^        $user2 = Factory::create('user', [$/;"	v
userId	tests/Api/ApiTestCase.php	/^        $userId = 1;$/;"	v
userId	tests/Api/ApiTestCase.php	/^    public $userId;$/;"	v
userResolver	bootstrap/cache/compiled.php	/^        $this->userResolver = $callback;$/;"	v
userResolver	bootstrap/cache/compiled.php	/^        $this->userResolver = $userResolver;$/;"	v
userResolver	bootstrap/cache/compiled.php	/^        $this->userResolver = function ($guard = null) {$/;"	v
userResolver	bootstrap/cache/compiled.php	/^        $this->userResolver = function ($name = null) {$/;"	v
userResolver	bootstrap/cache/compiled.php	/^    protected $userResolver;$/;"	v
userResolver	bootstrap/cache/compiled.php	/^    public function userResolver()$/;"	f
user_can_submit_talks_via_http	tests/SubmissionTest.php	/^    public function user_can_submit_talks_via_http()$/;"	f
user_cannot_submit_other_users_talk	tests/SubmissionTest.php	/^    public function user_cannot_submit_other_users_talk()$/;"	f
user_ids	database/seeds/ConferencesSeeder.php	/^        $user_ids = collect(User::lists('id'));$/;"	v
userinfo	bootstrap/cache/compiled.php	/^        $userinfo = $this->getUser();$/;"	v
users	app/Http/Controllers/PublicProfileController.php	/^        $users = User::where('enable_profile', true)$/;"	v
usersFavorited	app/models/Conference.php	/^    public function usersFavorited()$/;"	f
uses	bootstrap/cache/compiled.php	/^    public function uses($action)$/;"	f
uses	bootstrap/cache/compiled.php	/^    public function uses()$/;"	f
usesTimestamps	bootstrap/cache/compiled.php	/^    public function usesTimestamps()$/;"	f
usingCookieSessions	bootstrap/cache/compiled.php	/^    protected function usingCookieSessions()$/;"	f
validMac	bootstrap/cache/compiled.php	/^    protected function validMac(array $payload)$/;"	f
validRecaller	bootstrap/cache/compiled.php	/^    protected function validRecaller($recaller)$/;"	f
validate	bootstrap/cache/compiled.php	/^    public function validate()$/;"	f
validate	bootstrap/cache/compiled.php	/^    public function validate();$/;"	f
validate	bootstrap/cache/compiled.php	/^    public function validate(Request $request, array $rules, array $messages = [], array $customAttributes = [])$/;"	f
validate	bootstrap/cache/compiled.php	/^    public function validate(array $credentials = [])$/;"	f
validate	bootstrap/cache/compiled.php	/^    public function validate(array $credentials = []);$/;"	f
validateCredentials	bootstrap/cache/compiled.php	/^    public function validateCredentials(Authenticatable $user, array $credentials);$/;"	f
validateCredentials	bootstrap/cache/compiled.php	/^    public function validateCredentials(UserContract $user, array $credentials)$/;"	f
validateLogin	bootstrap/cache/compiled.php	/^    protected function validateLogin(Request $request)$/;"	f
validateWith	bootstrap/cache/compiled.php	/^    public function validateWith($validator, Request $request = null)$/;"	f
validateWithBag	bootstrap/cache/compiled.php	/^    public function validateWithBag($errorBag, Request $request, array $rules, array $messages = [], array $customAttributes = [])$/;"	f
validatesRequestErrorBag	bootstrap/cache/compiled.php	/^        $this->validatesRequestErrorBag = $errorBag;$/;"	v
validatesRequestErrorBag	bootstrap/cache/compiled.php	/^        $this->validatesRequestErrorBag = null;$/;"	v
validatesRequestErrorBag	bootstrap/cache/compiled.php	/^    protected $validatesRequestErrorBag;$/;"	v
validation	app/Services/CreateBioForm.php	/^        $validation = Validator::make($this->input, $this->rules);$/;"	v
validation	app/Services/CreateConferenceForm.php	/^        $validation = Validator::make($this->input, $this->rules);$/;"	v
validator	app/Http/Controllers/TalksController.php	/^        $validator = Validator::make(Input::all(), $this->rules, $this->messages);$/;"	v
validator	app/Services/Registrar.php	/^    public function validator(array $data)$/;"	f
validator	bootstrap/cache/compiled.php	/^            $validator = $this->getValidationFactory()->make($request->all(), $validator);$/;"	v
validator	bootstrap/cache/compiled.php	/^            $validator = new Factory($app['translator'], $app);$/;"	v
validator	bootstrap/cache/compiled.php	/^        $validator = $this->getValidationFactory()->make($request->all(), $rules, $messages, $customAttributes);$/;"	v
validator	bootstrap/cache/compiled.php	/^        $validator = $this->validator($request->all());$/;"	v
validators	bootstrap/cache/compiled.php	/^    public static $validators;$/;"	v
value	bootstrap/cache/compiled.php	/^                    $value = '"' . $value . '"';$/;"	v
value	bootstrap/cache/compiled.php	/^                $value = $data->__toString();$/;"	v
value	bootstrap/cache/compiled.php	/^                $value = $this->toJson($data, true);$/;"	v
value	bootstrap/cache/compiled.php	/^                $value = static::sortRecursive($value);$/;"	v
value	bootstrap/cache/compiled.php	/^            $value = $this->asJson($value);$/;"	v
value	bootstrap/cache/compiled.php	/^            $value = $this->fromDateTime($value);$/;"	v
value	bootstrap/cache/compiled.php	/^            $value = $this->storeVerbatimBlocks($value);$/;"	v
value	bootstrap/cache/compiled.php	/^            $value = $this->{$method}($value);$/;"	v
value	bootstrap/cache/compiled.php	/^            $value = call_user_func($compiler, $value, $this);$/;"	v
value	bootstrap/cache/compiled.php	/^            $value = data_get($item, $key);$/;"	v
value	bootstrap/cache/compiled.php	/^            $value = function () use($value) {$/;"	v
value	bootstrap/cache/compiled.php	/^            $value = preg_replace('\/\\\\s+\/u', '', $value);$/;"	v
value	bootstrap/cache/compiled.php	/^            $value = static::lower(preg_replace('\/(.)(?=[A-Z])\/u', '$1' . $delimiter, $value));$/;"	v
value	bootstrap/cache/compiled.php	/^            $value = str_replace($val, $key, $value);$/;"	v
value	bootstrap/cache/compiled.php	/^            if ($attributes[$key] && ($value === 'date' || $value === 'datetime')) {$/;"	v
value	bootstrap/cache/compiled.php	/^        $this->value = $value;$/;"	v
value	bootstrap/cache/compiled.php	/^        $value = $this->asDateTime($value);$/;"	v
value	bootstrap/cache/compiled.php	/^        $value = $this->get($key, $default);$/;"	v
value	bootstrap/cache/compiled.php	/^        $value = $this->getAttributeFromArray($key);$/;"	v
value	bootstrap/cache/compiled.php	/^        $value = $this->input($key);$/;"	v
value	bootstrap/cache/compiled.php	/^        $value = $this->mutateAttribute($key, $value);$/;"	v
value	bootstrap/cache/compiled.php	/^        $value = $user->getAuthIdentifier() . '|' . $user->getRememberToken();$/;"	v
value	bootstrap/cache/compiled.php	/^        $value = \\openssl_encrypt(serialize($value), $this->cipher, $this->key, 0, $iv);$/;"	v
value	bootstrap/cache/compiled.php	/^        $value = array_shift($bits);$/;"	v
value	bootstrap/cache/compiled.php	/^        $value = is_string($value) ? explode('.', $value) : $value;$/;"	v
value	bootstrap/cache/compiled.php	/^        $value = static::get($array, $key, $default);$/;"	v
value	bootstrap/cache/compiled.php	/^        $value = ucwords(str_replace(['-', '_'], ' ', $value));$/;"	v
value	bootstrap/cache/compiled.php	/^    private $value;$/;"	v
value	bootstrap/cache/compiled.php	/^    protected $value;$/;"	v
value	bootstrap/cache/compiled.php	/^    public function __construct($name, $value = null, $expire = 0, $path = '\/', $domain = null, $secure = false, $httpOnly = true)$/;"	v
value	bootstrap/cache/compiled.php	/^    public function addCacheControlDirective($key, $value = true)$/;"	v
value	bootstrap/cache/compiled.php	/^    public function appends($key, $value = null)$/;"	v
value	bootstrap/cache/compiled.php	/^    public function appends($key, $value = null);$/;"	v
value	bootstrap/cache/compiled.php	/^    public function contains($key, $value = null)$/;"	v
value	bootstrap/cache/compiled.php	/^    public function put($key, $value = null)$/;"	v
value	bootstrap/cache/compiled.php	/^    public function set($key, $value = null)$/;"	v
value	bootstrap/cache/compiled.php	/^    public function set($key, $value = null);$/;"	v
value	bootstrap/cache/compiled.php	/^    public function share($key, $value = null)$/;"	v
value	bootstrap/cache/compiled.php	/^    public function share($key, $value = null);$/;"	v
value	bootstrap/cache/compiled.php	/^    public function with($key, $value = null)$/;"	v
value	bootstrap/cache/compiled.php	/^    public function with($key, $value = null);$/;"	v
valueRetriever	bootstrap/cache/compiled.php	/^    protected function valueRetriever($value)$/;"	f
values	bootstrap/cache/compiled.php	/^                $values = $values->all();$/;"	v
values	bootstrap/cache/compiled.php	/^        $values = array_unique(array_merge($this->get('flash.new', []), $keys));$/;"	v
values	bootstrap/cache/compiled.php	/^        $values = array_values((array) $values);$/;"	v
values	bootstrap/cache/compiled.php	/^    public function values()$/;"	f
var	bootstrap/cache/compiled.php	/^        foreach ($vars as $var => $val) {$/;"	v
var	bootstrap/cache/compiled.php	/^        foreach ($vars['context'] as $var => $val) {$/;"	v
var	bootstrap/cache/compiled.php	/^        foreach ($vars['extra'] as $var => $val) {$/;"	v
varName	bootstrap/cache/compiled.php	/^            $varName = substr($match[0][0], 1, -1);$/;"	v
variables	bootstrap/cache/compiled.php	/^            $variables = $hostVariables;$/;"	v
variables	bootstrap/cache/compiled.php	/^        $this->variables = $data['vars'];$/;"	v
variables	bootstrap/cache/compiled.php	/^        $this->variables = $variables;$/;"	v
variables	bootstrap/cache/compiled.php	/^        $variables = array();$/;"	v
variables	bootstrap/cache/compiled.php	/^        $variables = array_merge($variables, $pathVariables);$/;"	v
variables	bootstrap/cache/compiled.php	/^    private $variables;$/;"	v
vars	bootstrap/cache/compiled.php	/^        $vars = parent::format($record);$/;"	v
vcsPatterns	bootstrap/cache/compiled.php	/^    private static $vcsPatterns = array('.svn', '_svn', 'CVS', '_darcs', '.arch-params', '.monotone', '.bzr', '.git', '.hg');$/;"	v
verb	bootstrap/cache/compiled.php	/^        $verb = $this->getVerb($name = $method->name);$/;"	v
verbatimBlocks	bootstrap/cache/compiled.php	/^        $this->verbatimBlocks = [];$/;"	v
verbatimBlocks	bootstrap/cache/compiled.php	/^    protected $verbatimBlocks = [];$/;"	v
verbatimPlaceholder	bootstrap/cache/compiled.php	/^    protected $verbatimPlaceholder = '@__verbatim__@';$/;"	v
verbs	bootstrap/cache/compiled.php	/^        $verbs = ['GET', 'HEAD', 'POST', 'PUT', 'PATCH', 'DELETE'];$/;"	v
verbs	bootstrap/cache/compiled.php	/^    protected $verbs = ['any', 'get', 'post', 'put', 'patch', 'delete', 'head', 'options'];$/;"	v
verbs	bootstrap/cache/compiled.php	/^    public static $verbs = ['GET', 'HEAD', 'POST', 'PUT', 'PATCH', 'DELETE', 'OPTIONS'];$/;"	v
version	bootstrap/cache/compiled.php	/^        $this->version = $version;$/;"	v
version	bootstrap/cache/compiled.php	/^    protected $version;$/;"	v
version	bootstrap/cache/compiled.php	/^    public function version()$/;"	f
version	bootstrap/cache/compiled.php	/^    public function version();$/;"	f
version	database/migrations/2015_05_24_113910_drop_versions.php	/^            $version = DB::table('talk_versions')->where('id', $oldVersionId)->first();$/;"	v
versions	database/migrations/2015_05_24_113910_drop_versions.php	/^            $versions = DB::table('talk_versions')$/;"	v
via	bootstrap/cache/compiled.php	/^    public function via($method)$/;"	f
via	bootstrap/cache/compiled.php	/^    public function via($method);$/;"	f
viaRemember	bootstrap/cache/compiled.php	/^            $this->viaRemember = !is_null($user = $this->provider->retrieveByToken($id, $token));$/;"	v
viaRemember	bootstrap/cache/compiled.php	/^    protected $viaRemember = false;$/;"	v
viaRemember	bootstrap/cache/compiled.php	/^    public function viaRemember()$/;"	f
viaRemember	bootstrap/cache/compiled.php	/^    public function viaRemember();$/;"	f
viaRequest	bootstrap/cache/compiled.php	/^    public function viaRequest($driver, callable $callback)$/;"	f
view	bootstrap/cache/compiled.php	/^            $view = $this->aliases[$view];$/;"	v
view	bootstrap/cache/compiled.php	/^        $this->view = $view;$/;"	v
view	bootstrap/cache/compiled.php	/^        $view = $this->normalizeName($view);$/;"	v
view	bootstrap/cache/compiled.php	/^        $view = property_exists($this, 'loginView') ? $this->loginView : 'auth.authenticate';$/;"	v
view	bootstrap/cache/compiled.php	/^    protected $view;$/;"	v
view	bootstrap/cache/compiled.php	/^    public function view($view, $data = [], $status = 200, array $headers = []);$/;"	f
views	bootstrap/cache/compiled.php	/^    protected $views = [];$/;"	v
visible	bootstrap/cache/compiled.php	/^        $this->visible = $visible;$/;"	v
visible	bootstrap/cache/compiled.php	/^        $this->visible = array_merge($this->visible, $attributes);$/;"	v
visible	bootstrap/cache/compiled.php	/^    protected $visible = [];$/;"	v
vue	package.json	/^    "vue": "^1.0.10",$/;"	f
vue-resource	package.json	/^    "vue-resource": "^0.1.17",$/;"	f
vueify	package.json	/^    "vueify": "^6.0.1",$/;"	f
wantsJson	bootstrap/cache/compiled.php	/^    public function wantsJson()$/;"	f
warn	bootstrap/cache/compiled.php	/^    public function warn($message, array $context = array())$/;"	f
warning	bootstrap/cache/compiled.php	/^    public function warning($message, array $context = [])$/;"	f
warning	bootstrap/cache/compiled.php	/^    public function warning($message, array $context = []);$/;"	f
warning	bootstrap/cache/compiled.php	/^    public function warning($message, array $context = array())$/;"	f
warning	bootstrap/cache/compiled.php	/^    public function warning($message, array $context = array());$/;"	f
wasRecentlyCreated	bootstrap/cache/compiled.php	/^        $this->wasRecentlyCreated = true;$/;"	v
wasRecentlyCreated	bootstrap/cache/compiled.php	/^    public $wasRecentlyCreated = false;$/;"	v
weak	bootstrap/cache/compiled.php	/^    public function setEtag($etag = null, $weak = false)$/;"	v
when	bootstrap/cache/compiled.php	/^    public function when($concrete)$/;"	f
when	bootstrap/cache/compiled.php	/^    public function when($concrete);$/;"	f
when	bootstrap/cache/compiled.php	/^    public function when()$/;"	f
where	bootstrap/cache/compiled.php	/^        $where = isset($route->getAction()['where']) ? $route->getAction()['where'] : [];$/;"	v
where	bootstrap/cache/compiled.php	/^    public function where($key, $value, $strict = true)$/;"	f
where	bootstrap/cache/compiled.php	/^    public function where($name, $expression = null)$/;"	f
where	bootstrap/cache/compiled.php	/^    public static function where($array, callable $callback)$/;"	f
whereArray	bootstrap/cache/compiled.php	/^    protected function whereArray(array $wheres)$/;"	f
whereIn	bootstrap/cache/compiled.php	/^    public function whereIn($key, array $values, $strict = true)$/;"	f
whereInLoose	bootstrap/cache/compiled.php	/^    public function whereInLoose($key, array $values)$/;"	f
whereLoose	bootstrap/cache/compiled.php	/^    public function whereLoose($key, $value)$/;"	f
wheres	bootstrap/cache/compiled.php	/^    protected $wheres = [];$/;"	v
whitespace	bootstrap/cache/compiled.php	/^            $whitespace = empty($matches[3]) ? '' : $matches[3] . $matches[3];$/;"	v
wildcards	bootstrap/cache/compiled.php	/^                $wildcards = array_merge($wildcards, $listeners);$/;"	v
wildcards	bootstrap/cache/compiled.php	/^        $wildcards = $this->getWildcardListeners($eventName);$/;"	v
wildcards	bootstrap/cache/compiled.php	/^        $wildcards = [];$/;"	v
wildcards	bootstrap/cache/compiled.php	/^    protected $wildcards = [];$/;"	v
with	bootstrap/cache/compiled.php	/^    protected $with = [];$/;"	v
with	bootstrap/cache/compiled.php	/^    public function with($key, $value = null)$/;"	f
with	bootstrap/cache/compiled.php	/^    public function with($key, $value = null);$/;"	f
with	bootstrap/cache/compiled.php	/^    public static function with($relations)$/;"	f
withCookie	bootstrap/cache/compiled.php	/^    public function withCookie($cookie)$/;"	f
withErrorBag	bootstrap/cache/compiled.php	/^    protected function withErrorBag($errorBag, callable $callback)$/;"	f
withErrors	bootstrap/cache/compiled.php	/^    public function withErrors($provider)$/;"	f
withException	bootstrap/cache/compiled.php	/^    public function withException(Exception $e)$/;"	f
withHeaders	bootstrap/cache/compiled.php	/^    public function withHeaders(array $headers)$/;"	f
withHidden	bootstrap/cache/compiled.php	/^    public function withHidden($attributes)$/;"	f
withName	bootstrap/cache/compiled.php	/^    public function withName($name)$/;"	f
words	bootstrap/cache/compiled.php	/^    public static function words($value, $words = 100, $end = '...')$/;"	f
words	bootstrap/cache/compiled.php	/^    public static function words($value, $words = 100, $end = '...')$/;"	v
wrap	bootstrap/cache/compiled.php	/^    public function wrap(Closure $callback, array $parameters = [])$/;"	f
wrapped	bootstrap/cache/compiled.php	/^            $wrapped = sprintf($this->echoFormat, $this->compileEchoDefaults($matches[2]));$/;"	v
write	bootstrap/cache/compiled.php	/^    protected abstract function write(array $record);$/;"	f
write	bootstrap/cache/compiled.php	/^    protected function write(array $record)$/;"	f
write	bootstrap/cache/compiled.php	/^    public function write($level, $message, array $context = [])$/;"	f
writeConfig	bootstrap/cache/compiled.php	/^        $writeConfig = $this->getReadWriteConfig($config, 'write');$/;"	v
writeLog	bootstrap/cache/compiled.php	/^    protected function writeLog($level, $message, $context)$/;"	f
writeManifest	bootstrap/cache/compiled.php	/^    public function writeManifest($manifest)$/;"	f
yieldContent	bootstrap/cache/compiled.php	/^    public function yieldContent($section, $default = '')$/;"	f
yieldPushContent	bootstrap/cache/compiled.php	/^    public function yieldPushContent($section, $default = '')$/;"	f
yieldSection	bootstrap/cache/compiled.php	/^    public function yieldSection()$/;"	f
zip	bootstrap/cache/compiled.php	/^    public function zip($items)$/;"	f
